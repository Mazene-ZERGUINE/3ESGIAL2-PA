Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> NAME EQUALS expression SEMI
Rule 5     statement -> NAME EQUALS expression
Rule 6     statement -> NAME EQUALS statement
Rule 7     statement -> WHILE expression RACC bloc LACC
Rule 8     statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
Rule 9     statement -> expression
Rule 10    statement -> expression CONCAT statement
Rule 11    statement -> PRINT CONCAT statement
Rule 12    statement -> COMMENTS
Rule 13    statement -> IF expression THEN statement
Rule 14    statement -> IF expression THEN RACC bloc LACC
Rule 15    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 16    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 17    statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 18    statement -> IF statement THEN statement
Rule 19    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 20    statement -> PRINT STRING SEMI
Rule 21    statement -> PRINT LPAREN statement RPAREN SEMI
Rule 22    print_params -> expression
Rule 23    print_params -> expression COMMA print_params
Rule 24    statement -> PRINT LPAREN print_params RPAREN SEMI
Rule 25    params -> NAME
Rule 26    params -> NAME COMMA params
Rule 27    statement -> expression INFF statement
Rule 28    statement -> expression SUP statement
Rule 29    statement -> expression and statement
Rule 30    statement -> expression or statement
Rule 31    statement -> expression SEMI
Rule 32    statement -> RETURN expression SEMI
Rule 33    statement -> FUNCTION NAME LPAREN RPAREN START bloc END
Rule 34    statement -> FUNCTION NAME LPAREN params RPAREN START bloc END
Rule 35    statement -> NAME DOTE FETCH LPAREN RPAREN SEMI
Rule 36    statement -> NAME DOTE HTML LPAREN RPAREN SEMI
Rule 37    statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
Rule 38    statement -> NAME DOTE SCAN LPAREN RPAREN SEMI
Rule 39    statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
Rule 40    statement -> params EQUALS param_call SEMI
Rule 41    statement -> NAME LPAREN RPAREN SEMI
Rule 42    statement -> NAME LPAREN param_call RPAREN SEMI
Rule 43    param_call -> expression
Rule 44    param_call -> expression COMMA param_call
Rule 45    statement -> DEFINE NAME EQUALS expression SEMI
Rule 46    expression -> expression PLUS expression
Rule 47    expression -> expression MINUS expression
Rule 48    expression -> expression TIMES expression
Rule 49    expression -> expression DIVIDE expression
Rule 50    expression -> expression or expression
Rule 51    expression -> expression and expression
Rule 52    expression -> expression SUP expression
Rule 53    expression -> expression INFF expression
Rule 54    expression -> expression ISEQUAL expression
Rule 55    expression -> expression NOTEQUAL expression
Rule 56    expression -> expression ET expression
Rule 57    expression -> expression OU expression
Rule 58    statement -> NAME INCR SEMI
Rule 59    statement -> NAME DECR SEMI
Rule 60    statement -> NAME INCR
Rule 61    statement -> NAME DECR
Rule 62    statement -> NAME PLUSEQ NUMBER SEMI
Rule 63    statement -> NAME MINEQ NUMBER SEMI
Rule 64    statement -> NAME PLUSEQ NUMBER
Rule 65    statement -> NAME MINEQ NUMBER
Rule 66    expression -> MINUS expression
Rule 67    expression -> LPAREN expression RPAREN
Rule 68    expression -> NUMBER
Rule 69    expression -> STRING
Rule 70    expression -> NAME
Rule 71    expression -> TRUE
Rule 72    expression -> FALSE

Terminals, with rules where they appear

COMMA                : 8 23 26 44
COMMENT              : 
COMMENTS             : 12
CONCAT               : 10 11
DECR                 : 59 61
DEFINE               : 45
DIVIDE               : 49
DOTE                 : 35 36 37 38 39
ELSE                 : 15 16 17
ELSEIF               : 15
END                  : 33 34
EQUALS               : 4 5 6 39 40 45
ET                   : 56
FALSE                : 72
FETCH                : 35
FOR                  : 8
FUNCTION             : 33 34
HTML                 : 36
IF                   : 13 14 15 16 17 18
INCR                 : 58 60
INFF                 : 27 53
ISEQUAL              : 54
LACC                 : 7 8 14 15 15 15 16 16 17 17
LPAREN               : 8 19 21 24 33 34 35 36 37 38 39 41 42 67
MINEQ                : 63 65
MINUS                : 47 66
NAME                 : 4 5 6 25 26 33 34 35 36 37 38 39 39 41 42 45 58 59 60 61 62 63 64 65 70
NOTEQUAL             : 55
NUMBER               : 8 62 63 64 65 68
OU                   : 57
PLUS                 : 46
PLUSEQ               : 62 64
PRINT                : 11 19 20 21 24
RACC                 : 7 8 14 15 15 15 16 16 17 17
RETURN               : 32
RPAREN               : 8 19 21 24 33 34 35 36 37 38 39 41 42 67
SCAN                 : 38 39
SEMI                 : 4 19 20 21 24 31 32 35 36 37 38 39 40 41 42 45 58 59 62 63
START                : 33 34
STRING               : 20 37 69
SUP                  : 28 52
TABLEID              : 37
THEN                 : 13 14 15 15 16 17 18
TIMES                : 48
TO                   : 8
TRUE                 : 71
WHILE                : 7
and                  : 29 51
error                : 
or                   : 30 50

Nonterminals, with rules where they appear

bloc                 : 1 2 7 8 14 15 15 15 16 16 17 17 33 34
expression           : 4 5 7 9 10 13 14 15 15 16 19 22 23 27 28 29 30 31 32 43 44 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 66 67
param_call           : 40 42 44
params               : 26 34 40
print_params         : 23 24
start                : 0
statement            : 2 3 6 8 8 10 11 13 17 18 18 21 27 28 29 30

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    COMMENTS        reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    RETURN          reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    DEFINE          reduce using rule 3 (bloc -> statement .)
    MINUS           reduce using rule 3 (bloc -> statement .)
    LPAREN          reduce using rule 3 (bloc -> statement .)
    NUMBER          reduce using rule 3 (bloc -> statement .)
    STRING          reduce using rule 3 (bloc -> statement .)
    TRUE            reduce using rule 3 (bloc -> statement .)
    FALSE           reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    LACC            reduce using rule 3 (bloc -> statement .)
    END             reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
    (6) statement -> NAME . EQUALS statement
    (35) statement -> NAME . DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> NAME . DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> NAME . DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> NAME . DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> NAME . EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (41) statement -> NAME . LPAREN RPAREN SEMI
    (42) statement -> NAME . LPAREN param_call RPAREN SEMI
    (58) statement -> NAME . INCR SEMI
    (59) statement -> NAME . DECR SEMI
    (60) statement -> NAME . INCR
    (61) statement -> NAME . DECR
    (62) statement -> NAME . PLUSEQ NUMBER SEMI
    (63) statement -> NAME . MINEQ NUMBER SEMI
    (64) statement -> NAME . PLUSEQ NUMBER
    (65) statement -> NAME . MINEQ NUMBER
    (70) expression -> NAME .
    (25) params -> NAME .
    (26) params -> NAME . COMMA params

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    EQUALS          shift and go to state 22
    DOTE            shift and go to state 23
    LPAREN          shift and go to state 24
    INCR            shift and go to state 25
    DECR            shift and go to state 26
    PLUSEQ          shift and go to state 27
    MINEQ           shift and go to state 28
    CONCAT          reduce using rule 70 (expression -> NAME .)
    INFF            reduce using rule 70 (expression -> NAME .)
    SUP             reduce using rule 70 (expression -> NAME .)
    and             reduce using rule 70 (expression -> NAME .)
    or              reduce using rule 70 (expression -> NAME .)
    SEMI            reduce using rule 70 (expression -> NAME .)
    PLUS            reduce using rule 70 (expression -> NAME .)
    MINUS           reduce using rule 70 (expression -> NAME .)
    TIMES           reduce using rule 70 (expression -> NAME .)
    DIVIDE          reduce using rule 70 (expression -> NAME .)
    ISEQUAL         reduce using rule 70 (expression -> NAME .)
    NOTEQUAL        reduce using rule 70 (expression -> NAME .)
    ET              reduce using rule 70 (expression -> NAME .)
    OU              reduce using rule 70 (expression -> NAME .)
    NAME            reduce using rule 70 (expression -> NAME .)
    WHILE           reduce using rule 70 (expression -> NAME .)
    FOR             reduce using rule 70 (expression -> NAME .)
    PRINT           reduce using rule 70 (expression -> NAME .)
    COMMENTS        reduce using rule 70 (expression -> NAME .)
    IF              reduce using rule 70 (expression -> NAME .)
    RETURN          reduce using rule 70 (expression -> NAME .)
    FUNCTION        reduce using rule 70 (expression -> NAME .)
    DEFINE          reduce using rule 70 (expression -> NAME .)
    NUMBER          reduce using rule 70 (expression -> NAME .)
    STRING          reduce using rule 70 (expression -> NAME .)
    TRUE            reduce using rule 70 (expression -> NAME .)
    FALSE           reduce using rule 70 (expression -> NAME .)
    $end            reduce using rule 70 (expression -> NAME .)
    THEN            reduce using rule 70 (expression -> NAME .)
    TO              reduce using rule 70 (expression -> NAME .)
    RPAREN          reduce using rule 70 (expression -> NAME .)
    LACC            reduce using rule 70 (expression -> NAME .)
    END             reduce using rule 70 (expression -> NAME .)
    COMMA           shift and go to state 29

  ! LPAREN          [ reduce using rule 70 (expression -> NAME .) ]
  ! EQUALS          [ reduce using rule 25 (params -> NAME .) ]


state 5

    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)
    CONCAT          shift and go to state 30
    INFF            shift and go to state 31
    SUP             shift and go to state 32
    and             shift and go to state 33
    or              shift and go to state 34
    SEMI            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43

  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]


state 6

    (7) statement -> WHILE . expression RACC bloc LACC
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 44

state 7

    (8) statement -> FOR . LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC

    LPAREN          shift and go to state 46


state 8

    (67) expression -> LPAREN . expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 47

state 9

    (68) expression -> NUMBER .

    CONCAT          reduce using rule 68 (expression -> NUMBER .)
    INFF            reduce using rule 68 (expression -> NUMBER .)
    SUP             reduce using rule 68 (expression -> NUMBER .)
    and             reduce using rule 68 (expression -> NUMBER .)
    or              reduce using rule 68 (expression -> NUMBER .)
    SEMI            reduce using rule 68 (expression -> NUMBER .)
    PLUS            reduce using rule 68 (expression -> NUMBER .)
    MINUS           reduce using rule 68 (expression -> NUMBER .)
    TIMES           reduce using rule 68 (expression -> NUMBER .)
    DIVIDE          reduce using rule 68 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 68 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 68 (expression -> NUMBER .)
    ET              reduce using rule 68 (expression -> NUMBER .)
    OU              reduce using rule 68 (expression -> NUMBER .)
    NAME            reduce using rule 68 (expression -> NUMBER .)
    WHILE           reduce using rule 68 (expression -> NUMBER .)
    FOR             reduce using rule 68 (expression -> NUMBER .)
    PRINT           reduce using rule 68 (expression -> NUMBER .)
    COMMENTS        reduce using rule 68 (expression -> NUMBER .)
    IF              reduce using rule 68 (expression -> NUMBER .)
    RETURN          reduce using rule 68 (expression -> NUMBER .)
    FUNCTION        reduce using rule 68 (expression -> NUMBER .)
    DEFINE          reduce using rule 68 (expression -> NUMBER .)
    LPAREN          reduce using rule 68 (expression -> NUMBER .)
    NUMBER          reduce using rule 68 (expression -> NUMBER .)
    STRING          reduce using rule 68 (expression -> NUMBER .)
    TRUE            reduce using rule 68 (expression -> NUMBER .)
    FALSE           reduce using rule 68 (expression -> NUMBER .)
    $end            reduce using rule 68 (expression -> NUMBER .)
    RACC            reduce using rule 68 (expression -> NUMBER .)
    RPAREN          reduce using rule 68 (expression -> NUMBER .)
    THEN            reduce using rule 68 (expression -> NUMBER .)
    TO              reduce using rule 68 (expression -> NUMBER .)
    LACC            reduce using rule 68 (expression -> NUMBER .)
    END             reduce using rule 68 (expression -> NUMBER .)
    COMMA           reduce using rule 68 (expression -> NUMBER .)


state 10

    (11) statement -> PRINT . CONCAT statement
    (19) statement -> PRINT . LPAREN expression RPAREN SEMI
    (20) statement -> PRINT . STRING SEMI
    (21) statement -> PRINT . LPAREN statement RPAREN SEMI
    (24) statement -> PRINT . LPAREN print_params RPAREN SEMI

    CONCAT          shift and go to state 48
    LPAREN          shift and go to state 49
    STRING          shift and go to state 50


state 11

    (12) statement -> COMMENTS .

    NAME            reduce using rule 12 (statement -> COMMENTS .)
    WHILE           reduce using rule 12 (statement -> COMMENTS .)
    FOR             reduce using rule 12 (statement -> COMMENTS .)
    PRINT           reduce using rule 12 (statement -> COMMENTS .)
    COMMENTS        reduce using rule 12 (statement -> COMMENTS .)
    IF              reduce using rule 12 (statement -> COMMENTS .)
    RETURN          reduce using rule 12 (statement -> COMMENTS .)
    FUNCTION        reduce using rule 12 (statement -> COMMENTS .)
    DEFINE          reduce using rule 12 (statement -> COMMENTS .)
    MINUS           reduce using rule 12 (statement -> COMMENTS .)
    LPAREN          reduce using rule 12 (statement -> COMMENTS .)
    NUMBER          reduce using rule 12 (statement -> COMMENTS .)
    STRING          reduce using rule 12 (statement -> COMMENTS .)
    TRUE            reduce using rule 12 (statement -> COMMENTS .)
    FALSE           reduce using rule 12 (statement -> COMMENTS .)
    $end            reduce using rule 12 (statement -> COMMENTS .)
    THEN            reduce using rule 12 (statement -> COMMENTS .)
    TO              reduce using rule 12 (statement -> COMMENTS .)
    RPAREN          reduce using rule 12 (statement -> COMMENTS .)
    LACC            reduce using rule 12 (statement -> COMMENTS .)
    END             reduce using rule 12 (statement -> COMMENTS .)


state 12

    (13) statement -> IF . expression THEN statement
    (14) statement -> IF . expression THEN RACC bloc LACC
    (15) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> IF . statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> IF . statement THEN statement
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 53
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 51
    statement                      shift and go to state 52
    params                         shift and go to state 16

state 13

    (69) expression -> STRING .

    CONCAT          reduce using rule 69 (expression -> STRING .)
    INFF            reduce using rule 69 (expression -> STRING .)
    SUP             reduce using rule 69 (expression -> STRING .)
    and             reduce using rule 69 (expression -> STRING .)
    or              reduce using rule 69 (expression -> STRING .)
    SEMI            reduce using rule 69 (expression -> STRING .)
    PLUS            reduce using rule 69 (expression -> STRING .)
    MINUS           reduce using rule 69 (expression -> STRING .)
    TIMES           reduce using rule 69 (expression -> STRING .)
    DIVIDE          reduce using rule 69 (expression -> STRING .)
    ISEQUAL         reduce using rule 69 (expression -> STRING .)
    NOTEQUAL        reduce using rule 69 (expression -> STRING .)
    ET              reduce using rule 69 (expression -> STRING .)
    OU              reduce using rule 69 (expression -> STRING .)
    NAME            reduce using rule 69 (expression -> STRING .)
    WHILE           reduce using rule 69 (expression -> STRING .)
    FOR             reduce using rule 69 (expression -> STRING .)
    PRINT           reduce using rule 69 (expression -> STRING .)
    COMMENTS        reduce using rule 69 (expression -> STRING .)
    IF              reduce using rule 69 (expression -> STRING .)
    RETURN          reduce using rule 69 (expression -> STRING .)
    FUNCTION        reduce using rule 69 (expression -> STRING .)
    DEFINE          reduce using rule 69 (expression -> STRING .)
    LPAREN          reduce using rule 69 (expression -> STRING .)
    NUMBER          reduce using rule 69 (expression -> STRING .)
    STRING          reduce using rule 69 (expression -> STRING .)
    TRUE            reduce using rule 69 (expression -> STRING .)
    FALSE           reduce using rule 69 (expression -> STRING .)
    $end            reduce using rule 69 (expression -> STRING .)
    RACC            reduce using rule 69 (expression -> STRING .)
    RPAREN          reduce using rule 69 (expression -> STRING .)
    THEN            reduce using rule 69 (expression -> STRING .)
    TO              reduce using rule 69 (expression -> STRING .)
    LACC            reduce using rule 69 (expression -> STRING .)
    END             reduce using rule 69 (expression -> STRING .)
    COMMA           reduce using rule 69 (expression -> STRING .)


state 14

    (32) statement -> RETURN . expression SEMI
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 54

state 15

    (33) statement -> FUNCTION . NAME LPAREN RPAREN START bloc END
    (34) statement -> FUNCTION . NAME LPAREN params RPAREN START bloc END

    NAME            shift and go to state 55


state 16

    (40) statement -> params . EQUALS param_call SEMI

    EQUALS          shift and go to state 56


state 17

    (45) statement -> DEFINE . NAME EQUALS expression SEMI

    NAME            shift and go to state 57


state 18

    (66) expression -> MINUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 58

state 19

    (71) expression -> TRUE .

    CONCAT          reduce using rule 71 (expression -> TRUE .)
    INFF            reduce using rule 71 (expression -> TRUE .)
    SUP             reduce using rule 71 (expression -> TRUE .)
    and             reduce using rule 71 (expression -> TRUE .)
    or              reduce using rule 71 (expression -> TRUE .)
    SEMI            reduce using rule 71 (expression -> TRUE .)
    PLUS            reduce using rule 71 (expression -> TRUE .)
    MINUS           reduce using rule 71 (expression -> TRUE .)
    TIMES           reduce using rule 71 (expression -> TRUE .)
    DIVIDE          reduce using rule 71 (expression -> TRUE .)
    ISEQUAL         reduce using rule 71 (expression -> TRUE .)
    NOTEQUAL        reduce using rule 71 (expression -> TRUE .)
    ET              reduce using rule 71 (expression -> TRUE .)
    OU              reduce using rule 71 (expression -> TRUE .)
    NAME            reduce using rule 71 (expression -> TRUE .)
    WHILE           reduce using rule 71 (expression -> TRUE .)
    FOR             reduce using rule 71 (expression -> TRUE .)
    PRINT           reduce using rule 71 (expression -> TRUE .)
    COMMENTS        reduce using rule 71 (expression -> TRUE .)
    IF              reduce using rule 71 (expression -> TRUE .)
    RETURN          reduce using rule 71 (expression -> TRUE .)
    FUNCTION        reduce using rule 71 (expression -> TRUE .)
    DEFINE          reduce using rule 71 (expression -> TRUE .)
    LPAREN          reduce using rule 71 (expression -> TRUE .)
    NUMBER          reduce using rule 71 (expression -> TRUE .)
    STRING          reduce using rule 71 (expression -> TRUE .)
    TRUE            reduce using rule 71 (expression -> TRUE .)
    FALSE           reduce using rule 71 (expression -> TRUE .)
    $end            reduce using rule 71 (expression -> TRUE .)
    RACC            reduce using rule 71 (expression -> TRUE .)
    RPAREN          reduce using rule 71 (expression -> TRUE .)
    THEN            reduce using rule 71 (expression -> TRUE .)
    TO              reduce using rule 71 (expression -> TRUE .)
    LACC            reduce using rule 71 (expression -> TRUE .)
    END             reduce using rule 71 (expression -> TRUE .)
    COMMA           reduce using rule 71 (expression -> TRUE .)


state 20

    (72) expression -> FALSE .

    CONCAT          reduce using rule 72 (expression -> FALSE .)
    INFF            reduce using rule 72 (expression -> FALSE .)
    SUP             reduce using rule 72 (expression -> FALSE .)
    and             reduce using rule 72 (expression -> FALSE .)
    or              reduce using rule 72 (expression -> FALSE .)
    SEMI            reduce using rule 72 (expression -> FALSE .)
    PLUS            reduce using rule 72 (expression -> FALSE .)
    MINUS           reduce using rule 72 (expression -> FALSE .)
    TIMES           reduce using rule 72 (expression -> FALSE .)
    DIVIDE          reduce using rule 72 (expression -> FALSE .)
    ISEQUAL         reduce using rule 72 (expression -> FALSE .)
    NOTEQUAL        reduce using rule 72 (expression -> FALSE .)
    ET              reduce using rule 72 (expression -> FALSE .)
    OU              reduce using rule 72 (expression -> FALSE .)
    NAME            reduce using rule 72 (expression -> FALSE .)
    WHILE           reduce using rule 72 (expression -> FALSE .)
    FOR             reduce using rule 72 (expression -> FALSE .)
    PRINT           reduce using rule 72 (expression -> FALSE .)
    COMMENTS        reduce using rule 72 (expression -> FALSE .)
    IF              reduce using rule 72 (expression -> FALSE .)
    RETURN          reduce using rule 72 (expression -> FALSE .)
    FUNCTION        reduce using rule 72 (expression -> FALSE .)
    DEFINE          reduce using rule 72 (expression -> FALSE .)
    LPAREN          reduce using rule 72 (expression -> FALSE .)
    NUMBER          reduce using rule 72 (expression -> FALSE .)
    STRING          reduce using rule 72 (expression -> FALSE .)
    TRUE            reduce using rule 72 (expression -> FALSE .)
    FALSE           reduce using rule 72 (expression -> FALSE .)
    $end            reduce using rule 72 (expression -> FALSE .)
    RACC            reduce using rule 72 (expression -> FALSE .)
    RPAREN          reduce using rule 72 (expression -> FALSE .)
    THEN            reduce using rule 72 (expression -> FALSE .)
    TO              reduce using rule 72 (expression -> FALSE .)
    LACC            reduce using rule 72 (expression -> FALSE .)
    END             reduce using rule 72 (expression -> FALSE .)
    COMMA           reduce using rule 72 (expression -> FALSE .)


state 21

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    COMMENTS        reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    RETURN          reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    DEFINE          reduce using rule 2 (bloc -> bloc statement .)
    MINUS           reduce using rule 2 (bloc -> bloc statement .)
    LPAREN          reduce using rule 2 (bloc -> bloc statement .)
    NUMBER          reduce using rule 2 (bloc -> bloc statement .)
    STRING          reduce using rule 2 (bloc -> bloc statement .)
    TRUE            reduce using rule 2 (bloc -> bloc statement .)
    FALSE           reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    LACC            reduce using rule 2 (bloc -> bloc statement .)
    END             reduce using rule 2 (bloc -> bloc statement .)


state 22

    (4) statement -> NAME EQUALS . expression SEMI
    (5) statement -> NAME EQUALS . expression
    (6) statement -> NAME EQUALS . statement
    (39) statement -> NAME EQUALS . NAME DOTE SCAN LPAREN RPAREN SEMI
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 59
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 60
    statement                      shift and go to state 61
    params                         shift and go to state 16

state 23

    (35) statement -> NAME DOTE . FETCH LPAREN RPAREN SEMI
    (36) statement -> NAME DOTE . HTML LPAREN RPAREN SEMI
    (37) statement -> NAME DOTE . TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> NAME DOTE . SCAN LPAREN RPAREN SEMI

    FETCH           shift and go to state 62
    HTML            shift and go to state 63
    TABLEID         shift and go to state 64
    SCAN            shift and go to state 65


state 24

    (41) statement -> NAME LPAREN . RPAREN SEMI
    (42) statement -> NAME LPAREN . param_call RPAREN SEMI
    (43) param_call -> . expression
    (44) param_call -> . expression COMMA param_call
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    RPAREN          shift and go to state 66
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    param_call                     shift and go to state 67
    expression                     shift and go to state 68

state 25

    (58) statement -> NAME INCR . SEMI
    (60) statement -> NAME INCR .

    SEMI            shift and go to state 69
    NAME            reduce using rule 60 (statement -> NAME INCR .)
    WHILE           reduce using rule 60 (statement -> NAME INCR .)
    FOR             reduce using rule 60 (statement -> NAME INCR .)
    PRINT           reduce using rule 60 (statement -> NAME INCR .)
    COMMENTS        reduce using rule 60 (statement -> NAME INCR .)
    IF              reduce using rule 60 (statement -> NAME INCR .)
    RETURN          reduce using rule 60 (statement -> NAME INCR .)
    FUNCTION        reduce using rule 60 (statement -> NAME INCR .)
    DEFINE          reduce using rule 60 (statement -> NAME INCR .)
    MINUS           reduce using rule 60 (statement -> NAME INCR .)
    LPAREN          reduce using rule 60 (statement -> NAME INCR .)
    NUMBER          reduce using rule 60 (statement -> NAME INCR .)
    STRING          reduce using rule 60 (statement -> NAME INCR .)
    TRUE            reduce using rule 60 (statement -> NAME INCR .)
    FALSE           reduce using rule 60 (statement -> NAME INCR .)
    $end            reduce using rule 60 (statement -> NAME INCR .)
    THEN            reduce using rule 60 (statement -> NAME INCR .)
    TO              reduce using rule 60 (statement -> NAME INCR .)
    RPAREN          reduce using rule 60 (statement -> NAME INCR .)
    LACC            reduce using rule 60 (statement -> NAME INCR .)
    END             reduce using rule 60 (statement -> NAME INCR .)


state 26

    (59) statement -> NAME DECR . SEMI
    (61) statement -> NAME DECR .

    SEMI            shift and go to state 70
    NAME            reduce using rule 61 (statement -> NAME DECR .)
    WHILE           reduce using rule 61 (statement -> NAME DECR .)
    FOR             reduce using rule 61 (statement -> NAME DECR .)
    PRINT           reduce using rule 61 (statement -> NAME DECR .)
    COMMENTS        reduce using rule 61 (statement -> NAME DECR .)
    IF              reduce using rule 61 (statement -> NAME DECR .)
    RETURN          reduce using rule 61 (statement -> NAME DECR .)
    FUNCTION        reduce using rule 61 (statement -> NAME DECR .)
    DEFINE          reduce using rule 61 (statement -> NAME DECR .)
    MINUS           reduce using rule 61 (statement -> NAME DECR .)
    LPAREN          reduce using rule 61 (statement -> NAME DECR .)
    NUMBER          reduce using rule 61 (statement -> NAME DECR .)
    STRING          reduce using rule 61 (statement -> NAME DECR .)
    TRUE            reduce using rule 61 (statement -> NAME DECR .)
    FALSE           reduce using rule 61 (statement -> NAME DECR .)
    $end            reduce using rule 61 (statement -> NAME DECR .)
    THEN            reduce using rule 61 (statement -> NAME DECR .)
    TO              reduce using rule 61 (statement -> NAME DECR .)
    RPAREN          reduce using rule 61 (statement -> NAME DECR .)
    LACC            reduce using rule 61 (statement -> NAME DECR .)
    END             reduce using rule 61 (statement -> NAME DECR .)


state 27

    (62) statement -> NAME PLUSEQ . NUMBER SEMI
    (64) statement -> NAME PLUSEQ . NUMBER

    NUMBER          shift and go to state 71


state 28

    (63) statement -> NAME MINEQ . NUMBER SEMI
    (65) statement -> NAME MINEQ . NUMBER

    NUMBER          shift and go to state 72


state 29

    (26) params -> NAME COMMA . params
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 73

    params                         shift and go to state 74

state 30

    (10) statement -> expression CONCAT . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 75
    params                         shift and go to state 16

state 31

    (27) statement -> expression INFF . statement
    (53) expression -> expression INFF . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 76
    statement                      shift and go to state 77
    params                         shift and go to state 16

state 32

    (28) statement -> expression SUP . statement
    (52) expression -> expression SUP . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 78
    statement                      shift and go to state 79
    params                         shift and go to state 16

state 33

    (29) statement -> expression and . statement
    (51) expression -> expression and . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 80
    statement                      shift and go to state 81
    params                         shift and go to state 16

state 34

    (30) statement -> expression or . statement
    (50) expression -> expression or . expression
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 82
    statement                      shift and go to state 83
    params                         shift and go to state 16

state 35

    (31) statement -> expression SEMI .

    NAME            reduce using rule 31 (statement -> expression SEMI .)
    WHILE           reduce using rule 31 (statement -> expression SEMI .)
    FOR             reduce using rule 31 (statement -> expression SEMI .)
    PRINT           reduce using rule 31 (statement -> expression SEMI .)
    COMMENTS        reduce using rule 31 (statement -> expression SEMI .)
    IF              reduce using rule 31 (statement -> expression SEMI .)
    RETURN          reduce using rule 31 (statement -> expression SEMI .)
    FUNCTION        reduce using rule 31 (statement -> expression SEMI .)
    DEFINE          reduce using rule 31 (statement -> expression SEMI .)
    MINUS           reduce using rule 31 (statement -> expression SEMI .)
    LPAREN          reduce using rule 31 (statement -> expression SEMI .)
    NUMBER          reduce using rule 31 (statement -> expression SEMI .)
    STRING          reduce using rule 31 (statement -> expression SEMI .)
    TRUE            reduce using rule 31 (statement -> expression SEMI .)
    FALSE           reduce using rule 31 (statement -> expression SEMI .)
    $end            reduce using rule 31 (statement -> expression SEMI .)
    THEN            reduce using rule 31 (statement -> expression SEMI .)
    TO              reduce using rule 31 (statement -> expression SEMI .)
    RPAREN          reduce using rule 31 (statement -> expression SEMI .)
    LACC            reduce using rule 31 (statement -> expression SEMI .)
    END             reduce using rule 31 (statement -> expression SEMI .)


state 36

    (46) expression -> expression PLUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 84

state 37

    (47) expression -> expression MINUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 85

state 38

    (48) expression -> expression TIMES . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 86

state 39

    (49) expression -> expression DIVIDE . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 87

state 40

    (54) expression -> expression ISEQUAL . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 88

state 41

    (55) expression -> expression NOTEQUAL . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 89

state 42

    (56) expression -> expression ET . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 90

state 43

    (57) expression -> expression OU . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 91

state 44

    (7) statement -> WHILE expression . RACC bloc LACC
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    RACC            shift and go to state 92
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43


state 45

    (70) expression -> NAME .

    RACC            reduce using rule 70 (expression -> NAME .)
    PLUS            reduce using rule 70 (expression -> NAME .)
    MINUS           reduce using rule 70 (expression -> NAME .)
    TIMES           reduce using rule 70 (expression -> NAME .)
    DIVIDE          reduce using rule 70 (expression -> NAME .)
    or              reduce using rule 70 (expression -> NAME .)
    and             reduce using rule 70 (expression -> NAME .)
    SUP             reduce using rule 70 (expression -> NAME .)
    INFF            reduce using rule 70 (expression -> NAME .)
    ISEQUAL         reduce using rule 70 (expression -> NAME .)
    NOTEQUAL        reduce using rule 70 (expression -> NAME .)
    ET              reduce using rule 70 (expression -> NAME .)
    OU              reduce using rule 70 (expression -> NAME .)
    RPAREN          reduce using rule 70 (expression -> NAME .)
    SEMI            reduce using rule 70 (expression -> NAME .)
    CONCAT          reduce using rule 70 (expression -> NAME .)
    NAME            reduce using rule 70 (expression -> NAME .)
    WHILE           reduce using rule 70 (expression -> NAME .)
    FOR             reduce using rule 70 (expression -> NAME .)
    PRINT           reduce using rule 70 (expression -> NAME .)
    COMMENTS        reduce using rule 70 (expression -> NAME .)
    IF              reduce using rule 70 (expression -> NAME .)
    RETURN          reduce using rule 70 (expression -> NAME .)
    FUNCTION        reduce using rule 70 (expression -> NAME .)
    DEFINE          reduce using rule 70 (expression -> NAME .)
    LPAREN          reduce using rule 70 (expression -> NAME .)
    NUMBER          reduce using rule 70 (expression -> NAME .)
    STRING          reduce using rule 70 (expression -> NAME .)
    TRUE            reduce using rule 70 (expression -> NAME .)
    FALSE           reduce using rule 70 (expression -> NAME .)
    $end            reduce using rule 70 (expression -> NAME .)
    THEN            reduce using rule 70 (expression -> NAME .)
    TO              reduce using rule 70 (expression -> NAME .)
    LACC            reduce using rule 70 (expression -> NAME .)
    END             reduce using rule 70 (expression -> NAME .)
    COMMA           reduce using rule 70 (expression -> NAME .)


state 46

    (8) statement -> FOR LPAREN . statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 97
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 47

    (67) expression -> LPAREN expression . RPAREN
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43


state 48

    (11) statement -> PRINT CONCAT . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 99
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 49

    (19) statement -> PRINT LPAREN . expression RPAREN SEMI
    (21) statement -> PRINT LPAREN . statement RPAREN SEMI
    (24) statement -> PRINT LPAREN . print_params RPAREN SEMI
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (22) print_params -> . expression
    (23) print_params -> . expression COMMA print_params
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 53
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 100
    statement                      shift and go to state 101
    print_params                   shift and go to state 102
    params                         shift and go to state 16

state 50

    (20) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 103


state 51

    (13) statement -> IF expression . THEN statement
    (14) statement -> IF expression . THEN RACC bloc LACC
    (15) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI

  ! shift/reduce conflict for THEN resolved as shift
    THEN            shift and go to state 104
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 105
    and             shift and go to state 106
    SUP             shift and go to state 107
    INFF            shift and go to state 108
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43
    CONCAT          shift and go to state 30
    SEMI            shift and go to state 35

  ! THEN            [ reduce using rule 9 (statement -> expression .) ]


state 52

    (17) statement -> IF statement . THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> IF statement . THEN statement

    THEN            shift and go to state 109


state 53

    (70) expression -> NAME .
    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
    (6) statement -> NAME . EQUALS statement
    (35) statement -> NAME . DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> NAME . DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> NAME . DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> NAME . DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> NAME . EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (41) statement -> NAME . LPAREN RPAREN SEMI
    (42) statement -> NAME . LPAREN param_call RPAREN SEMI
    (58) statement -> NAME . INCR SEMI
    (59) statement -> NAME . DECR SEMI
    (60) statement -> NAME . INCR
    (61) statement -> NAME . DECR
    (62) statement -> NAME . PLUSEQ NUMBER SEMI
    (63) statement -> NAME . MINEQ NUMBER SEMI
    (64) statement -> NAME . PLUSEQ NUMBER
    (65) statement -> NAME . MINEQ NUMBER
    (25) params -> NAME .
    (26) params -> NAME . COMMA params

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    THEN            reduce using rule 70 (expression -> NAME .)
    PLUS            reduce using rule 70 (expression -> NAME .)
    MINUS           reduce using rule 70 (expression -> NAME .)
    TIMES           reduce using rule 70 (expression -> NAME .)
    DIVIDE          reduce using rule 70 (expression -> NAME .)
    or              reduce using rule 70 (expression -> NAME .)
    and             reduce using rule 70 (expression -> NAME .)
    SUP             reduce using rule 70 (expression -> NAME .)
    INFF            reduce using rule 70 (expression -> NAME .)
    ISEQUAL         reduce using rule 70 (expression -> NAME .)
    NOTEQUAL        reduce using rule 70 (expression -> NAME .)
    ET              reduce using rule 70 (expression -> NAME .)
    OU              reduce using rule 70 (expression -> NAME .)
    CONCAT          reduce using rule 70 (expression -> NAME .)
    SEMI            reduce using rule 70 (expression -> NAME .)
    RPAREN          reduce using rule 70 (expression -> NAME .)
    NAME            reduce using rule 70 (expression -> NAME .)
    WHILE           reduce using rule 70 (expression -> NAME .)
    FOR             reduce using rule 70 (expression -> NAME .)
    PRINT           reduce using rule 70 (expression -> NAME .)
    COMMENTS        reduce using rule 70 (expression -> NAME .)
    IF              reduce using rule 70 (expression -> NAME .)
    RETURN          reduce using rule 70 (expression -> NAME .)
    FUNCTION        reduce using rule 70 (expression -> NAME .)
    DEFINE          reduce using rule 70 (expression -> NAME .)
    NUMBER          reduce using rule 70 (expression -> NAME .)
    STRING          reduce using rule 70 (expression -> NAME .)
    TRUE            reduce using rule 70 (expression -> NAME .)
    FALSE           reduce using rule 70 (expression -> NAME .)
    $end            reduce using rule 70 (expression -> NAME .)
    TO              reduce using rule 70 (expression -> NAME .)
    LACC            reduce using rule 70 (expression -> NAME .)
    END             reduce using rule 70 (expression -> NAME .)
    EQUALS          shift and go to state 22
    DOTE            shift and go to state 23
    LPAREN          shift and go to state 24
    INCR            shift and go to state 25
    DECR            shift and go to state 26
    PLUSEQ          shift and go to state 27
    MINEQ           shift and go to state 28
    COMMA           shift and go to state 29

  ! COMMA           [ reduce using rule 70 (expression -> NAME .) ]
  ! LPAREN          [ reduce using rule 70 (expression -> NAME .) ]
  ! EQUALS          [ reduce using rule 25 (params -> NAME .) ]


state 54

    (32) statement -> RETURN expression . SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    SEMI            shift and go to state 110
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43


state 55

    (33) statement -> FUNCTION NAME . LPAREN RPAREN START bloc END
    (34) statement -> FUNCTION NAME . LPAREN params RPAREN START bloc END

    LPAREN          shift and go to state 111


state 56

    (40) statement -> params EQUALS . param_call SEMI
    (43) param_call -> . expression
    (44) param_call -> . expression COMMA param_call
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    param_call                     shift and go to state 112
    expression                     shift and go to state 68

state 57

    (45) statement -> DEFINE NAME . EQUALS expression SEMI

    EQUALS          shift and go to state 113


state 58

    (66) expression -> MINUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    CONCAT          reduce using rule 66 (expression -> MINUS expression .)
    INFF            reduce using rule 66 (expression -> MINUS expression .)
    SUP             reduce using rule 66 (expression -> MINUS expression .)
    and             reduce using rule 66 (expression -> MINUS expression .)
    or              reduce using rule 66 (expression -> MINUS expression .)
    SEMI            reduce using rule 66 (expression -> MINUS expression .)
    PLUS            reduce using rule 66 (expression -> MINUS expression .)
    MINUS           reduce using rule 66 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 66 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 66 (expression -> MINUS expression .)
    ET              reduce using rule 66 (expression -> MINUS expression .)
    OU              reduce using rule 66 (expression -> MINUS expression .)
    NAME            reduce using rule 66 (expression -> MINUS expression .)
    WHILE           reduce using rule 66 (expression -> MINUS expression .)
    FOR             reduce using rule 66 (expression -> MINUS expression .)
    PRINT           reduce using rule 66 (expression -> MINUS expression .)
    COMMENTS        reduce using rule 66 (expression -> MINUS expression .)
    IF              reduce using rule 66 (expression -> MINUS expression .)
    RETURN          reduce using rule 66 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 66 (expression -> MINUS expression .)
    DEFINE          reduce using rule 66 (expression -> MINUS expression .)
    LPAREN          reduce using rule 66 (expression -> MINUS expression .)
    NUMBER          reduce using rule 66 (expression -> MINUS expression .)
    STRING          reduce using rule 66 (expression -> MINUS expression .)
    TRUE            reduce using rule 66 (expression -> MINUS expression .)
    FALSE           reduce using rule 66 (expression -> MINUS expression .)
    $end            reduce using rule 66 (expression -> MINUS expression .)
    RACC            reduce using rule 66 (expression -> MINUS expression .)
    RPAREN          reduce using rule 66 (expression -> MINUS expression .)
    THEN            reduce using rule 66 (expression -> MINUS expression .)
    TO              reduce using rule 66 (expression -> MINUS expression .)
    LACC            reduce using rule 66 (expression -> MINUS expression .)
    END             reduce using rule 66 (expression -> MINUS expression .)
    COMMA           reduce using rule 66 (expression -> MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 66 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! or              [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! SUP             [ shift and go to state 95 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 59

    (39) statement -> NAME EQUALS NAME . DOTE SCAN LPAREN RPAREN SEMI
    (70) expression -> NAME .
    (4) statement -> NAME . EQUALS expression SEMI
    (5) statement -> NAME . EQUALS expression
    (6) statement -> NAME . EQUALS statement
    (35) statement -> NAME . DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> NAME . DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> NAME . DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> NAME . DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> NAME . EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (41) statement -> NAME . LPAREN RPAREN SEMI
    (42) statement -> NAME . LPAREN param_call RPAREN SEMI
    (58) statement -> NAME . INCR SEMI
    (59) statement -> NAME . DECR SEMI
    (60) statement -> NAME . INCR
    (61) statement -> NAME . DECR
    (62) statement -> NAME . PLUSEQ NUMBER SEMI
    (63) statement -> NAME . MINEQ NUMBER SEMI
    (64) statement -> NAME . PLUSEQ NUMBER
    (65) statement -> NAME . MINEQ NUMBER
    (25) params -> NAME .
    (26) params -> NAME . COMMA params

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    DOTE            shift and go to state 114
    SEMI            reduce using rule 70 (expression -> NAME .)
    PLUS            reduce using rule 70 (expression -> NAME .)
    MINUS           reduce using rule 70 (expression -> NAME .)
    TIMES           reduce using rule 70 (expression -> NAME .)
    DIVIDE          reduce using rule 70 (expression -> NAME .)
    or              reduce using rule 70 (expression -> NAME .)
    and             reduce using rule 70 (expression -> NAME .)
    SUP             reduce using rule 70 (expression -> NAME .)
    INFF            reduce using rule 70 (expression -> NAME .)
    ISEQUAL         reduce using rule 70 (expression -> NAME .)
    NOTEQUAL        reduce using rule 70 (expression -> NAME .)
    ET              reduce using rule 70 (expression -> NAME .)
    OU              reduce using rule 70 (expression -> NAME .)
    CONCAT          reduce using rule 70 (expression -> NAME .)
    NAME            reduce using rule 70 (expression -> NAME .)
    WHILE           reduce using rule 70 (expression -> NAME .)
    FOR             reduce using rule 70 (expression -> NAME .)
    PRINT           reduce using rule 70 (expression -> NAME .)
    COMMENTS        reduce using rule 70 (expression -> NAME .)
    IF              reduce using rule 70 (expression -> NAME .)
    RETURN          reduce using rule 70 (expression -> NAME .)
    FUNCTION        reduce using rule 70 (expression -> NAME .)
    DEFINE          reduce using rule 70 (expression -> NAME .)
    NUMBER          reduce using rule 70 (expression -> NAME .)
    STRING          reduce using rule 70 (expression -> NAME .)
    TRUE            reduce using rule 70 (expression -> NAME .)
    FALSE           reduce using rule 70 (expression -> NAME .)
    $end            reduce using rule 70 (expression -> NAME .)
    THEN            reduce using rule 70 (expression -> NAME .)
    TO              reduce using rule 70 (expression -> NAME .)
    RPAREN          reduce using rule 70 (expression -> NAME .)
    LACC            reduce using rule 70 (expression -> NAME .)
    END             reduce using rule 70 (expression -> NAME .)
    EQUALS          shift and go to state 22
    LPAREN          shift and go to state 24
    INCR            shift and go to state 25
    DECR            shift and go to state 26
    PLUSEQ          shift and go to state 27
    MINEQ           shift and go to state 28
    COMMA           shift and go to state 29

  ! LPAREN          [ reduce using rule 70 (expression -> NAME .) ]
  ! EQUALS          [ reduce using rule 25 (params -> NAME .) ]


state 60

    (4) statement -> NAME EQUALS expression . SEMI
    (5) statement -> NAME EQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for IF resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for THEN resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for TO resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for LACC resolved using rule 5 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for END resolved using rule 5 (statement -> NAME EQUALS expression .)
    SEMI            shift and go to state 115
    NAME            reduce using rule 5 (statement -> NAME EQUALS expression .)
    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression .)
    FOR             reduce using rule 5 (statement -> NAME EQUALS expression .)
    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression .)
    COMMENTS        reduce using rule 5 (statement -> NAME EQUALS expression .)
    IF              reduce using rule 5 (statement -> NAME EQUALS expression .)
    RETURN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    FUNCTION        reduce using rule 5 (statement -> NAME EQUALS expression .)
    DEFINE          reduce using rule 5 (statement -> NAME EQUALS expression .)
    LPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    NUMBER          reduce using rule 5 (statement -> NAME EQUALS expression .)
    STRING          reduce using rule 5 (statement -> NAME EQUALS expression .)
    TRUE            reduce using rule 5 (statement -> NAME EQUALS expression .)
    FALSE           reduce using rule 5 (statement -> NAME EQUALS expression .)
    $end            reduce using rule 5 (statement -> NAME EQUALS expression .)
    THEN            reduce using rule 5 (statement -> NAME EQUALS expression .)
    TO              reduce using rule 5 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression .)
    LACC            reduce using rule 5 (statement -> NAME EQUALS expression .)
    END             reduce using rule 5 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 105
    and             shift and go to state 106
    SUP             shift and go to state 107
    INFF            shift and go to state 108
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43
    CONCAT          shift and go to state 30

  ! MINUS           [ reduce using rule 5 (statement -> NAME EQUALS expression .) ]
  ! NAME            [ reduce using rule 9 (statement -> expression .) ]
  ! WHILE           [ reduce using rule 9 (statement -> expression .) ]
  ! FOR             [ reduce using rule 9 (statement -> expression .) ]
  ! PRINT           [ reduce using rule 9 (statement -> expression .) ]
  ! COMMENTS        [ reduce using rule 9 (statement -> expression .) ]
  ! IF              [ reduce using rule 9 (statement -> expression .) ]
  ! RETURN          [ reduce using rule 9 (statement -> expression .) ]
  ! FUNCTION        [ reduce using rule 9 (statement -> expression .) ]
  ! DEFINE          [ reduce using rule 9 (statement -> expression .) ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]
  ! LPAREN          [ reduce using rule 9 (statement -> expression .) ]
  ! NUMBER          [ reduce using rule 9 (statement -> expression .) ]
  ! STRING          [ reduce using rule 9 (statement -> expression .) ]
  ! TRUE            [ reduce using rule 9 (statement -> expression .) ]
  ! FALSE           [ reduce using rule 9 (statement -> expression .) ]
  ! $end            [ reduce using rule 9 (statement -> expression .) ]
  ! THEN            [ reduce using rule 9 (statement -> expression .) ]
  ! TO              [ reduce using rule 9 (statement -> expression .) ]
  ! RPAREN          [ reduce using rule 9 (statement -> expression .) ]
  ! LACC            [ reduce using rule 9 (statement -> expression .) ]
  ! END             [ reduce using rule 9 (statement -> expression .) ]


state 61

    (6) statement -> NAME EQUALS statement .

    NAME            reduce using rule 6 (statement -> NAME EQUALS statement .)
    WHILE           reduce using rule 6 (statement -> NAME EQUALS statement .)
    FOR             reduce using rule 6 (statement -> NAME EQUALS statement .)
    PRINT           reduce using rule 6 (statement -> NAME EQUALS statement .)
    COMMENTS        reduce using rule 6 (statement -> NAME EQUALS statement .)
    IF              reduce using rule 6 (statement -> NAME EQUALS statement .)
    RETURN          reduce using rule 6 (statement -> NAME EQUALS statement .)
    FUNCTION        reduce using rule 6 (statement -> NAME EQUALS statement .)
    DEFINE          reduce using rule 6 (statement -> NAME EQUALS statement .)
    MINUS           reduce using rule 6 (statement -> NAME EQUALS statement .)
    LPAREN          reduce using rule 6 (statement -> NAME EQUALS statement .)
    NUMBER          reduce using rule 6 (statement -> NAME EQUALS statement .)
    STRING          reduce using rule 6 (statement -> NAME EQUALS statement .)
    TRUE            reduce using rule 6 (statement -> NAME EQUALS statement .)
    FALSE           reduce using rule 6 (statement -> NAME EQUALS statement .)
    $end            reduce using rule 6 (statement -> NAME EQUALS statement .)
    THEN            reduce using rule 6 (statement -> NAME EQUALS statement .)
    TO              reduce using rule 6 (statement -> NAME EQUALS statement .)
    RPAREN          reduce using rule 6 (statement -> NAME EQUALS statement .)
    LACC            reduce using rule 6 (statement -> NAME EQUALS statement .)
    END             reduce using rule 6 (statement -> NAME EQUALS statement .)


state 62

    (35) statement -> NAME DOTE FETCH . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 116


state 63

    (36) statement -> NAME DOTE HTML . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 117


state 64

    (37) statement -> NAME DOTE TABLEID . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 118


state 65

    (38) statement -> NAME DOTE SCAN . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 119


state 66

    (41) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 120


state 67

    (42) statement -> NAME LPAREN param_call . RPAREN SEMI

    RPAREN          shift and go to state 121


state 68

    (43) param_call -> expression .
    (44) param_call -> expression . COMMA param_call
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    RPAREN          reduce using rule 43 (param_call -> expression .)
    SEMI            reduce using rule 43 (param_call -> expression .)
    COMMA           shift and go to state 122
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43


state 69

    (58) statement -> NAME INCR SEMI .

    NAME            reduce using rule 58 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 58 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 58 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 58 (statement -> NAME INCR SEMI .)
    COMMENTS        reduce using rule 58 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 58 (statement -> NAME INCR SEMI .)
    RETURN          reduce using rule 58 (statement -> NAME INCR SEMI .)
    FUNCTION        reduce using rule 58 (statement -> NAME INCR SEMI .)
    DEFINE          reduce using rule 58 (statement -> NAME INCR SEMI .)
    MINUS           reduce using rule 58 (statement -> NAME INCR SEMI .)
    LPAREN          reduce using rule 58 (statement -> NAME INCR SEMI .)
    NUMBER          reduce using rule 58 (statement -> NAME INCR SEMI .)
    STRING          reduce using rule 58 (statement -> NAME INCR SEMI .)
    TRUE            reduce using rule 58 (statement -> NAME INCR SEMI .)
    FALSE           reduce using rule 58 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 58 (statement -> NAME INCR SEMI .)
    THEN            reduce using rule 58 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 58 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 58 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 58 (statement -> NAME INCR SEMI .)
    END             reduce using rule 58 (statement -> NAME INCR SEMI .)


state 70

    (59) statement -> NAME DECR SEMI .

    NAME            reduce using rule 59 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 59 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 59 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 59 (statement -> NAME DECR SEMI .)
    COMMENTS        reduce using rule 59 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 59 (statement -> NAME DECR SEMI .)
    RETURN          reduce using rule 59 (statement -> NAME DECR SEMI .)
    FUNCTION        reduce using rule 59 (statement -> NAME DECR SEMI .)
    DEFINE          reduce using rule 59 (statement -> NAME DECR SEMI .)
    MINUS           reduce using rule 59 (statement -> NAME DECR SEMI .)
    LPAREN          reduce using rule 59 (statement -> NAME DECR SEMI .)
    NUMBER          reduce using rule 59 (statement -> NAME DECR SEMI .)
    STRING          reduce using rule 59 (statement -> NAME DECR SEMI .)
    TRUE            reduce using rule 59 (statement -> NAME DECR SEMI .)
    FALSE           reduce using rule 59 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 59 (statement -> NAME DECR SEMI .)
    THEN            reduce using rule 59 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 59 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 59 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 59 (statement -> NAME DECR SEMI .)
    END             reduce using rule 59 (statement -> NAME DECR SEMI .)


state 71

    (62) statement -> NAME PLUSEQ NUMBER . SEMI
    (64) statement -> NAME PLUSEQ NUMBER .

    SEMI            shift and go to state 123
    NAME            reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    WHILE           reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    FOR             reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    PRINT           reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    COMMENTS        reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    IF              reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    RETURN          reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    FUNCTION        reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    DEFINE          reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    MINUS           reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    LPAREN          reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    NUMBER          reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    STRING          reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    TRUE            reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    FALSE           reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    $end            reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    THEN            reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    TO              reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    RPAREN          reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    LACC            reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)
    END             reduce using rule 64 (statement -> NAME PLUSEQ NUMBER .)


state 72

    (63) statement -> NAME MINEQ NUMBER . SEMI
    (65) statement -> NAME MINEQ NUMBER .

    SEMI            shift and go to state 124
    NAME            reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    WHILE           reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    FOR             reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    PRINT           reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    COMMENTS        reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    IF              reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    RETURN          reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    FUNCTION        reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    DEFINE          reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    MINUS           reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    LPAREN          reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    NUMBER          reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    STRING          reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    TRUE            reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    FALSE           reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    $end            reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    THEN            reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    TO              reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    RPAREN          reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    LACC            reduce using rule 65 (statement -> NAME MINEQ NUMBER .)
    END             reduce using rule 65 (statement -> NAME MINEQ NUMBER .)


state 73

    (25) params -> NAME .
    (26) params -> NAME . COMMA params

    EQUALS          reduce using rule 25 (params -> NAME .)
    RPAREN          reduce using rule 25 (params -> NAME .)
    COMMA           shift and go to state 29


state 74

    (26) params -> NAME COMMA params .

    EQUALS          reduce using rule 26 (params -> NAME COMMA params .)
    RPAREN          reduce using rule 26 (params -> NAME COMMA params .)


state 75

    (10) statement -> expression CONCAT statement .

    NAME            reduce using rule 10 (statement -> expression CONCAT statement .)
    WHILE           reduce using rule 10 (statement -> expression CONCAT statement .)
    FOR             reduce using rule 10 (statement -> expression CONCAT statement .)
    PRINT           reduce using rule 10 (statement -> expression CONCAT statement .)
    COMMENTS        reduce using rule 10 (statement -> expression CONCAT statement .)
    IF              reduce using rule 10 (statement -> expression CONCAT statement .)
    RETURN          reduce using rule 10 (statement -> expression CONCAT statement .)
    FUNCTION        reduce using rule 10 (statement -> expression CONCAT statement .)
    DEFINE          reduce using rule 10 (statement -> expression CONCAT statement .)
    MINUS           reduce using rule 10 (statement -> expression CONCAT statement .)
    LPAREN          reduce using rule 10 (statement -> expression CONCAT statement .)
    NUMBER          reduce using rule 10 (statement -> expression CONCAT statement .)
    STRING          reduce using rule 10 (statement -> expression CONCAT statement .)
    TRUE            reduce using rule 10 (statement -> expression CONCAT statement .)
    FALSE           reduce using rule 10 (statement -> expression CONCAT statement .)
    $end            reduce using rule 10 (statement -> expression CONCAT statement .)
    THEN            reduce using rule 10 (statement -> expression CONCAT statement .)
    TO              reduce using rule 10 (statement -> expression CONCAT statement .)
    RPAREN          reduce using rule 10 (statement -> expression CONCAT statement .)
    LACC            reduce using rule 10 (statement -> expression CONCAT statement .)
    END             reduce using rule 10 (statement -> expression CONCAT statement .)


state 76

    (53) expression -> expression INFF expression .
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for CONCAT resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)
    CONCAT          shift and go to state 30
    INFF            shift and go to state 31
    SUP             shift and go to state 32
    and             shift and go to state 33
    or              shift and go to state 34
    SEMI            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43

  ! CONCAT          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! SEMI            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! NAME            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! WHILE           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! FOR             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! PRINT           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! COMMENTS        [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! IF              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! RETURN          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! FUNCTION        [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! DEFINE          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! LPAREN          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! NUMBER          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! STRING          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! TRUE            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! FALSE           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! $end            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! THEN            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! TO              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! RPAREN          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! LACC            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! END             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]


state 77

    (27) statement -> expression INFF statement .

    NAME            reduce using rule 27 (statement -> expression INFF statement .)
    WHILE           reduce using rule 27 (statement -> expression INFF statement .)
    FOR             reduce using rule 27 (statement -> expression INFF statement .)
    PRINT           reduce using rule 27 (statement -> expression INFF statement .)
    COMMENTS        reduce using rule 27 (statement -> expression INFF statement .)
    IF              reduce using rule 27 (statement -> expression INFF statement .)
    RETURN          reduce using rule 27 (statement -> expression INFF statement .)
    FUNCTION        reduce using rule 27 (statement -> expression INFF statement .)
    DEFINE          reduce using rule 27 (statement -> expression INFF statement .)
    MINUS           reduce using rule 27 (statement -> expression INFF statement .)
    LPAREN          reduce using rule 27 (statement -> expression INFF statement .)
    NUMBER          reduce using rule 27 (statement -> expression INFF statement .)
    STRING          reduce using rule 27 (statement -> expression INFF statement .)
    TRUE            reduce using rule 27 (statement -> expression INFF statement .)
    FALSE           reduce using rule 27 (statement -> expression INFF statement .)
    $end            reduce using rule 27 (statement -> expression INFF statement .)
    THEN            reduce using rule 27 (statement -> expression INFF statement .)
    TO              reduce using rule 27 (statement -> expression INFF statement .)
    RPAREN          reduce using rule 27 (statement -> expression INFF statement .)
    LACC            reduce using rule 27 (statement -> expression INFF statement .)
    END             reduce using rule 27 (statement -> expression INFF statement .)


state 78

    (52) expression -> expression SUP expression .
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
    CONCAT          reduce using rule 52 (expression -> expression SUP expression .)
    INFF            reduce using rule 52 (expression -> expression SUP expression .)
    and             reduce using rule 52 (expression -> expression SUP expression .)
    or              reduce using rule 52 (expression -> expression SUP expression .)
    SEMI            reduce using rule 52 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 52 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 52 (expression -> expression SUP expression .)
    ET              reduce using rule 52 (expression -> expression SUP expression .)
    OU              reduce using rule 52 (expression -> expression SUP expression .)
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    SUP             shift and go to state 32

  ! SUP             [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! NAME            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! WHILE           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! FOR             [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! PRINT           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! COMMENTS        [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! IF              [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! RETURN          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! FUNCTION        [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! DEFINE          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! NUMBER          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! STRING          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! TRUE            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! FALSE           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! $end            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! THEN            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! TO              [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! RPAREN          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! LACC            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! END             [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 30 ]
  ! INFF            [ shift and go to state 31 ]
  ! and             [ shift and go to state 33 ]
  ! or              [ shift and go to state 34 ]
  ! SEMI            [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 79

    (28) statement -> expression SUP statement .

    NAME            reduce using rule 28 (statement -> expression SUP statement .)
    WHILE           reduce using rule 28 (statement -> expression SUP statement .)
    FOR             reduce using rule 28 (statement -> expression SUP statement .)
    PRINT           reduce using rule 28 (statement -> expression SUP statement .)
    COMMENTS        reduce using rule 28 (statement -> expression SUP statement .)
    IF              reduce using rule 28 (statement -> expression SUP statement .)
    RETURN          reduce using rule 28 (statement -> expression SUP statement .)
    FUNCTION        reduce using rule 28 (statement -> expression SUP statement .)
    DEFINE          reduce using rule 28 (statement -> expression SUP statement .)
    MINUS           reduce using rule 28 (statement -> expression SUP statement .)
    LPAREN          reduce using rule 28 (statement -> expression SUP statement .)
    NUMBER          reduce using rule 28 (statement -> expression SUP statement .)
    STRING          reduce using rule 28 (statement -> expression SUP statement .)
    TRUE            reduce using rule 28 (statement -> expression SUP statement .)
    FALSE           reduce using rule 28 (statement -> expression SUP statement .)
    $end            reduce using rule 28 (statement -> expression SUP statement .)
    THEN            reduce using rule 28 (statement -> expression SUP statement .)
    TO              reduce using rule 28 (statement -> expression SUP statement .)
    RPAREN          reduce using rule 28 (statement -> expression SUP statement .)
    LACC            reduce using rule 28 (statement -> expression SUP statement .)
    END             reduce using rule 28 (statement -> expression SUP statement .)


state 80

    (51) expression -> expression and expression .
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
    CONCAT          reduce using rule 51 (expression -> expression and expression .)
    INFF            reduce using rule 51 (expression -> expression and expression .)
    and             reduce using rule 51 (expression -> expression and expression .)
    or              reduce using rule 51 (expression -> expression and expression .)
    SEMI            reduce using rule 51 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 51 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 51 (expression -> expression and expression .)
    ET              reduce using rule 51 (expression -> expression and expression .)
    OU              reduce using rule 51 (expression -> expression and expression .)
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)
    SUP             shift and go to state 32
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! SUP             [ reduce using rule 51 (expression -> expression and expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! NAME            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! WHILE           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! FOR             [ reduce using rule 51 (expression -> expression and expression .) ]
  ! PRINT           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! COMMENTS        [ reduce using rule 51 (expression -> expression and expression .) ]
  ! IF              [ reduce using rule 51 (expression -> expression and expression .) ]
  ! RETURN          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! FUNCTION        [ reduce using rule 51 (expression -> expression and expression .) ]
  ! DEFINE          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! LPAREN          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! NUMBER          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! STRING          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! TRUE            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! FALSE           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! $end            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! THEN            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! TO              [ reduce using rule 51 (expression -> expression and expression .) ]
  ! RPAREN          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! LACC            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! END             [ reduce using rule 51 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 30 ]
  ! INFF            [ shift and go to state 31 ]
  ! and             [ shift and go to state 33 ]
  ! or              [ shift and go to state 34 ]
  ! SEMI            [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 81

    (29) statement -> expression and statement .

    NAME            reduce using rule 29 (statement -> expression and statement .)
    WHILE           reduce using rule 29 (statement -> expression and statement .)
    FOR             reduce using rule 29 (statement -> expression and statement .)
    PRINT           reduce using rule 29 (statement -> expression and statement .)
    COMMENTS        reduce using rule 29 (statement -> expression and statement .)
    IF              reduce using rule 29 (statement -> expression and statement .)
    RETURN          reduce using rule 29 (statement -> expression and statement .)
    FUNCTION        reduce using rule 29 (statement -> expression and statement .)
    DEFINE          reduce using rule 29 (statement -> expression and statement .)
    MINUS           reduce using rule 29 (statement -> expression and statement .)
    LPAREN          reduce using rule 29 (statement -> expression and statement .)
    NUMBER          reduce using rule 29 (statement -> expression and statement .)
    STRING          reduce using rule 29 (statement -> expression and statement .)
    TRUE            reduce using rule 29 (statement -> expression and statement .)
    FALSE           reduce using rule 29 (statement -> expression and statement .)
    $end            reduce using rule 29 (statement -> expression and statement .)
    THEN            reduce using rule 29 (statement -> expression and statement .)
    TO              reduce using rule 29 (statement -> expression and statement .)
    RPAREN          reduce using rule 29 (statement -> expression and statement .)
    LACC            reduce using rule 29 (statement -> expression and statement .)
    END             reduce using rule 29 (statement -> expression and statement .)


state 82

    (50) expression -> expression or expression .
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
    CONCAT          reduce using rule 50 (expression -> expression or expression .)
    INFF            reduce using rule 50 (expression -> expression or expression .)
    or              reduce using rule 50 (expression -> expression or expression .)
    SEMI            reduce using rule 50 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 50 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 50 (expression -> expression or expression .)
    ET              reduce using rule 50 (expression -> expression or expression .)
    OU              reduce using rule 50 (expression -> expression or expression .)
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)
    SUP             shift and go to state 32
    and             shift and go to state 33
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! SUP             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! NAME            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! WHILE           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! FOR             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! PRINT           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! COMMENTS        [ reduce using rule 50 (expression -> expression or expression .) ]
  ! IF              [ reduce using rule 50 (expression -> expression or expression .) ]
  ! RETURN          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! FUNCTION        [ reduce using rule 50 (expression -> expression or expression .) ]
  ! DEFINE          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! LPAREN          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! NUMBER          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! STRING          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! TRUE            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! FALSE           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! $end            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! THEN            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! TO              [ reduce using rule 50 (expression -> expression or expression .) ]
  ! RPAREN          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! LACC            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! END             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 30 ]
  ! INFF            [ shift and go to state 31 ]
  ! or              [ shift and go to state 34 ]
  ! SEMI            [ shift and go to state 35 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 83

    (30) statement -> expression or statement .

    NAME            reduce using rule 30 (statement -> expression or statement .)
    WHILE           reduce using rule 30 (statement -> expression or statement .)
    FOR             reduce using rule 30 (statement -> expression or statement .)
    PRINT           reduce using rule 30 (statement -> expression or statement .)
    COMMENTS        reduce using rule 30 (statement -> expression or statement .)
    IF              reduce using rule 30 (statement -> expression or statement .)
    RETURN          reduce using rule 30 (statement -> expression or statement .)
    FUNCTION        reduce using rule 30 (statement -> expression or statement .)
    DEFINE          reduce using rule 30 (statement -> expression or statement .)
    MINUS           reduce using rule 30 (statement -> expression or statement .)
    LPAREN          reduce using rule 30 (statement -> expression or statement .)
    NUMBER          reduce using rule 30 (statement -> expression or statement .)
    STRING          reduce using rule 30 (statement -> expression or statement .)
    TRUE            reduce using rule 30 (statement -> expression or statement .)
    FALSE           reduce using rule 30 (statement -> expression or statement .)
    $end            reduce using rule 30 (statement -> expression or statement .)
    THEN            reduce using rule 30 (statement -> expression or statement .)
    TO              reduce using rule 30 (statement -> expression or statement .)
    RPAREN          reduce using rule 30 (statement -> expression or statement .)
    LACC            reduce using rule 30 (statement -> expression or statement .)
    END             reduce using rule 30 (statement -> expression or statement .)


state 84

    (46) expression -> expression PLUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    CONCAT          reduce using rule 46 (expression -> expression PLUS expression .)
    INFF            reduce using rule 46 (expression -> expression PLUS expression .)
    SUP             reduce using rule 46 (expression -> expression PLUS expression .)
    and             reduce using rule 46 (expression -> expression PLUS expression .)
    or              reduce using rule 46 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 46 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 46 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 46 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 46 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 46 (expression -> expression PLUS expression .)
    ET              reduce using rule 46 (expression -> expression PLUS expression .)
    OU              reduce using rule 46 (expression -> expression PLUS expression .)
    NAME            reduce using rule 46 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 46 (expression -> expression PLUS expression .)
    FOR             reduce using rule 46 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 46 (expression -> expression PLUS expression .)
    COMMENTS        reduce using rule 46 (expression -> expression PLUS expression .)
    IF              reduce using rule 46 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 46 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 46 (expression -> expression PLUS expression .)
    DEFINE          reduce using rule 46 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 46 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 46 (expression -> expression PLUS expression .)
    STRING          reduce using rule 46 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 46 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 46 (expression -> expression PLUS expression .)
    $end            reduce using rule 46 (expression -> expression PLUS expression .)
    RACC            reduce using rule 46 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 46 (expression -> expression PLUS expression .)
    THEN            reduce using rule 46 (expression -> expression PLUS expression .)
    TO              reduce using rule 46 (expression -> expression PLUS expression .)
    LACC            reduce using rule 46 (expression -> expression PLUS expression .)
    END             reduce using rule 46 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 46 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! or              [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! SUP             [ shift and go to state 95 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 85

    (47) expression -> expression MINUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    CONCAT          reduce using rule 47 (expression -> expression MINUS expression .)
    INFF            reduce using rule 47 (expression -> expression MINUS expression .)
    SUP             reduce using rule 47 (expression -> expression MINUS expression .)
    and             reduce using rule 47 (expression -> expression MINUS expression .)
    or              reduce using rule 47 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 47 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 47 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 47 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 47 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 47 (expression -> expression MINUS expression .)
    ET              reduce using rule 47 (expression -> expression MINUS expression .)
    OU              reduce using rule 47 (expression -> expression MINUS expression .)
    NAME            reduce using rule 47 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 47 (expression -> expression MINUS expression .)
    FOR             reduce using rule 47 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 47 (expression -> expression MINUS expression .)
    COMMENTS        reduce using rule 47 (expression -> expression MINUS expression .)
    IF              reduce using rule 47 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 47 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 47 (expression -> expression MINUS expression .)
    DEFINE          reduce using rule 47 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 47 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 47 (expression -> expression MINUS expression .)
    STRING          reduce using rule 47 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 47 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 47 (expression -> expression MINUS expression .)
    $end            reduce using rule 47 (expression -> expression MINUS expression .)
    RACC            reduce using rule 47 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> expression MINUS expression .)
    THEN            reduce using rule 47 (expression -> expression MINUS expression .)
    TO              reduce using rule 47 (expression -> expression MINUS expression .)
    LACC            reduce using rule 47 (expression -> expression MINUS expression .)
    END             reduce using rule 47 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 47 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! or              [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! SUP             [ shift and go to state 95 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 86

    (48) expression -> expression TIMES expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    CONCAT          reduce using rule 48 (expression -> expression TIMES expression .)
    INFF            reduce using rule 48 (expression -> expression TIMES expression .)
    SUP             reduce using rule 48 (expression -> expression TIMES expression .)
    and             reduce using rule 48 (expression -> expression TIMES expression .)
    or              reduce using rule 48 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 48 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 48 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 48 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 48 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 48 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 48 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 48 (expression -> expression TIMES expression .)
    ET              reduce using rule 48 (expression -> expression TIMES expression .)
    OU              reduce using rule 48 (expression -> expression TIMES expression .)
    NAME            reduce using rule 48 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 48 (expression -> expression TIMES expression .)
    FOR             reduce using rule 48 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 48 (expression -> expression TIMES expression .)
    COMMENTS        reduce using rule 48 (expression -> expression TIMES expression .)
    IF              reduce using rule 48 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 48 (expression -> expression TIMES expression .)
    FUNCTION        reduce using rule 48 (expression -> expression TIMES expression .)
    DEFINE          reduce using rule 48 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 48 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 48 (expression -> expression TIMES expression .)
    STRING          reduce using rule 48 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 48 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 48 (expression -> expression TIMES expression .)
    $end            reduce using rule 48 (expression -> expression TIMES expression .)
    RACC            reduce using rule 48 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 48 (expression -> expression TIMES expression .)
    THEN            reduce using rule 48 (expression -> expression TIMES expression .)
    TO              reduce using rule 48 (expression -> expression TIMES expression .)
    LACC            reduce using rule 48 (expression -> expression TIMES expression .)
    END             reduce using rule 48 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 48 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! or              [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! SUP             [ shift and go to state 95 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 87

    (49) expression -> expression DIVIDE expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    CONCAT          reduce using rule 49 (expression -> expression DIVIDE expression .)
    INFF            reduce using rule 49 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 49 (expression -> expression DIVIDE expression .)
    and             reduce using rule 49 (expression -> expression DIVIDE expression .)
    or              reduce using rule 49 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 49 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 49 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 49 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 49 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 49 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 49 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 49 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 49 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 49 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 49 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 49 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 49 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 49 (expression -> expression DIVIDE expression .)
    COMMENTS        reduce using rule 49 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 49 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 49 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 49 (expression -> expression DIVIDE expression .)
    DEFINE          reduce using rule 49 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 49 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 49 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 49 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 49 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 49 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 49 (expression -> expression DIVIDE expression .)
    RACC            reduce using rule 49 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 49 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 49 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 49 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 49 (expression -> expression DIVIDE expression .)
    END             reduce using rule 49 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 49 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]
  ! or              [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! SUP             [ shift and go to state 95 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 88

    (54) expression -> expression ISEQUAL expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 54 (expression -> expression ISEQUAL expression .)
    SEMI            reduce using rule 54 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 54 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 54 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 54 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 54 (expression -> expression ISEQUAL expression .)
    COMMENTS        reduce using rule 54 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 54 (expression -> expression ISEQUAL expression .)
    RETURN          reduce using rule 54 (expression -> expression ISEQUAL expression .)
    FUNCTION        reduce using rule 54 (expression -> expression ISEQUAL expression .)
    DEFINE          reduce using rule 54 (expression -> expression ISEQUAL expression .)
    LPAREN          reduce using rule 54 (expression -> expression ISEQUAL expression .)
    NUMBER          reduce using rule 54 (expression -> expression ISEQUAL expression .)
    STRING          reduce using rule 54 (expression -> expression ISEQUAL expression .)
    TRUE            reduce using rule 54 (expression -> expression ISEQUAL expression .)
    FALSE           reduce using rule 54 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 54 (expression -> expression ISEQUAL expression .)
    RACC            reduce using rule 54 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 54 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 54 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 54 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 54 (expression -> expression ISEQUAL expression .)
    END             reduce using rule 54 (expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 54 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43

  ! INFF            [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 54 (expression -> expression ISEQUAL expression .) ]


state 89

    (55) expression -> expression NOTEQUAL expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    SEMI            reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    COMMENTS        reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    DEFINE          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    STRING          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    TRUE            reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    FALSE           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    RACC            reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    END             reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43

  ! INFF            [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]


state 90

    (56) expression -> expression ET expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 56 (expression -> expression ET expression .)
    SEMI            reduce using rule 56 (expression -> expression ET expression .)
    NAME            reduce using rule 56 (expression -> expression ET expression .)
    WHILE           reduce using rule 56 (expression -> expression ET expression .)
    FOR             reduce using rule 56 (expression -> expression ET expression .)
    PRINT           reduce using rule 56 (expression -> expression ET expression .)
    COMMENTS        reduce using rule 56 (expression -> expression ET expression .)
    IF              reduce using rule 56 (expression -> expression ET expression .)
    RETURN          reduce using rule 56 (expression -> expression ET expression .)
    FUNCTION        reduce using rule 56 (expression -> expression ET expression .)
    DEFINE          reduce using rule 56 (expression -> expression ET expression .)
    LPAREN          reduce using rule 56 (expression -> expression ET expression .)
    NUMBER          reduce using rule 56 (expression -> expression ET expression .)
    STRING          reduce using rule 56 (expression -> expression ET expression .)
    TRUE            reduce using rule 56 (expression -> expression ET expression .)
    FALSE           reduce using rule 56 (expression -> expression ET expression .)
    $end            reduce using rule 56 (expression -> expression ET expression .)
    RACC            reduce using rule 56 (expression -> expression ET expression .)
    RPAREN          reduce using rule 56 (expression -> expression ET expression .)
    THEN            reduce using rule 56 (expression -> expression ET expression .)
    TO              reduce using rule 56 (expression -> expression ET expression .)
    LACC            reduce using rule 56 (expression -> expression ET expression .)
    END             reduce using rule 56 (expression -> expression ET expression .)
    COMMA           reduce using rule 56 (expression -> expression ET expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43

  ! INFF            [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! PLUS            [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 56 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 56 (expression -> expression ET expression .) ]


state 91

    (57) expression -> expression OU expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 57 (expression -> expression OU expression .)
    SEMI            reduce using rule 57 (expression -> expression OU expression .)
    NAME            reduce using rule 57 (expression -> expression OU expression .)
    WHILE           reduce using rule 57 (expression -> expression OU expression .)
    FOR             reduce using rule 57 (expression -> expression OU expression .)
    PRINT           reduce using rule 57 (expression -> expression OU expression .)
    COMMENTS        reduce using rule 57 (expression -> expression OU expression .)
    IF              reduce using rule 57 (expression -> expression OU expression .)
    RETURN          reduce using rule 57 (expression -> expression OU expression .)
    FUNCTION        reduce using rule 57 (expression -> expression OU expression .)
    DEFINE          reduce using rule 57 (expression -> expression OU expression .)
    LPAREN          reduce using rule 57 (expression -> expression OU expression .)
    NUMBER          reduce using rule 57 (expression -> expression OU expression .)
    STRING          reduce using rule 57 (expression -> expression OU expression .)
    TRUE            reduce using rule 57 (expression -> expression OU expression .)
    FALSE           reduce using rule 57 (expression -> expression OU expression .)
    $end            reduce using rule 57 (expression -> expression OU expression .)
    RACC            reduce using rule 57 (expression -> expression OU expression .)
    RPAREN          reduce using rule 57 (expression -> expression OU expression .)
    THEN            reduce using rule 57 (expression -> expression OU expression .)
    TO              reduce using rule 57 (expression -> expression OU expression .)
    LACC            reduce using rule 57 (expression -> expression OU expression .)
    END             reduce using rule 57 (expression -> expression OU expression .)
    COMMA           reduce using rule 57 (expression -> expression OU expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43

  ! INFF            [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! PLUS            [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 57 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 57 (expression -> expression OU expression .) ]


state 92

    (7) statement -> WHILE expression RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 125
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 93

    (50) expression -> expression or . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 126

state 94

    (51) expression -> expression and . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 127

state 95

    (52) expression -> expression SUP . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 128

state 96

    (53) expression -> expression INFF . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 129

state 97

    (8) statement -> FOR LPAREN statement . TO NUMBER COMMA statement RPAREN RACC bloc LACC

    TO              shift and go to state 130


state 98

    (67) expression -> LPAREN expression RPAREN .

    CONCAT          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    INFF            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    COMMENTS        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    DEFINE          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RACC            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 67 (expression -> LPAREN expression RPAREN .)


state 99

    (11) statement -> PRINT CONCAT statement .

    NAME            reduce using rule 11 (statement -> PRINT CONCAT statement .)
    WHILE           reduce using rule 11 (statement -> PRINT CONCAT statement .)
    FOR             reduce using rule 11 (statement -> PRINT CONCAT statement .)
    PRINT           reduce using rule 11 (statement -> PRINT CONCAT statement .)
    COMMENTS        reduce using rule 11 (statement -> PRINT CONCAT statement .)
    IF              reduce using rule 11 (statement -> PRINT CONCAT statement .)
    RETURN          reduce using rule 11 (statement -> PRINT CONCAT statement .)
    FUNCTION        reduce using rule 11 (statement -> PRINT CONCAT statement .)
    DEFINE          reduce using rule 11 (statement -> PRINT CONCAT statement .)
    MINUS           reduce using rule 11 (statement -> PRINT CONCAT statement .)
    LPAREN          reduce using rule 11 (statement -> PRINT CONCAT statement .)
    NUMBER          reduce using rule 11 (statement -> PRINT CONCAT statement .)
    STRING          reduce using rule 11 (statement -> PRINT CONCAT statement .)
    TRUE            reduce using rule 11 (statement -> PRINT CONCAT statement .)
    FALSE           reduce using rule 11 (statement -> PRINT CONCAT statement .)
    $end            reduce using rule 11 (statement -> PRINT CONCAT statement .)
    THEN            reduce using rule 11 (statement -> PRINT CONCAT statement .)
    TO              reduce using rule 11 (statement -> PRINT CONCAT statement .)
    RPAREN          reduce using rule 11 (statement -> PRINT CONCAT statement .)
    LACC            reduce using rule 11 (statement -> PRINT CONCAT statement .)
    END             reduce using rule 11 (statement -> PRINT CONCAT statement .)


state 100

    (19) statement -> PRINT LPAREN expression . RPAREN SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI
    (22) print_params -> expression .
    (23) print_params -> expression . COMMA print_params

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 131
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 105
    and             shift and go to state 106
    SUP             shift and go to state 107
    INFF            shift and go to state 108
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43
    CONCAT          shift and go to state 30
    SEMI            shift and go to state 35
    COMMA           shift and go to state 132

  ! RPAREN          [ reduce using rule 9 (statement -> expression .) ]
  ! RPAREN          [ reduce using rule 22 (print_params -> expression .) ]


state 101

    (21) statement -> PRINT LPAREN statement . RPAREN SEMI

    RPAREN          shift and go to state 133


state 102

    (24) statement -> PRINT LPAREN print_params . RPAREN SEMI

    RPAREN          shift and go to state 134


state 103

    (20) statement -> PRINT STRING SEMI .

    NAME            reduce using rule 20 (statement -> PRINT STRING SEMI .)
    WHILE           reduce using rule 20 (statement -> PRINT STRING SEMI .)
    FOR             reduce using rule 20 (statement -> PRINT STRING SEMI .)
    PRINT           reduce using rule 20 (statement -> PRINT STRING SEMI .)
    COMMENTS        reduce using rule 20 (statement -> PRINT STRING SEMI .)
    IF              reduce using rule 20 (statement -> PRINT STRING SEMI .)
    RETURN          reduce using rule 20 (statement -> PRINT STRING SEMI .)
    FUNCTION        reduce using rule 20 (statement -> PRINT STRING SEMI .)
    DEFINE          reduce using rule 20 (statement -> PRINT STRING SEMI .)
    MINUS           reduce using rule 20 (statement -> PRINT STRING SEMI .)
    LPAREN          reduce using rule 20 (statement -> PRINT STRING SEMI .)
    NUMBER          reduce using rule 20 (statement -> PRINT STRING SEMI .)
    STRING          reduce using rule 20 (statement -> PRINT STRING SEMI .)
    TRUE            reduce using rule 20 (statement -> PRINT STRING SEMI .)
    FALSE           reduce using rule 20 (statement -> PRINT STRING SEMI .)
    $end            reduce using rule 20 (statement -> PRINT STRING SEMI .)
    THEN            reduce using rule 20 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 20 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 20 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 20 (statement -> PRINT STRING SEMI .)
    END             reduce using rule 20 (statement -> PRINT STRING SEMI .)


state 104

    (13) statement -> IF expression THEN . statement
    (14) statement -> IF expression THEN . RACC bloc LACC
    (15) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    RACC            shift and go to state 136
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 135
    params                         shift and go to state 16

state 105

    (50) expression -> expression or . expression
    (30) statement -> expression or . statement
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 53
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 137
    statement                      shift and go to state 83
    params                         shift and go to state 16

state 106

    (51) expression -> expression and . expression
    (29) statement -> expression and . statement
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 53
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 138
    statement                      shift and go to state 81
    params                         shift and go to state 16

state 107

    (52) expression -> expression SUP . expression
    (28) statement -> expression SUP . statement
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 53
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 139
    statement                      shift and go to state 79
    params                         shift and go to state 16

state 108

    (53) expression -> expression INFF . expression
    (27) statement -> expression INFF . statement
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 53
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 140
    statement                      shift and go to state 77
    params                         shift and go to state 16

state 109

    (17) statement -> IF statement THEN . RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> IF statement THEN . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    RACC            shift and go to state 142
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 141
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 110

    (32) statement -> RETURN expression SEMI .

    NAME            reduce using rule 32 (statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 32 (statement -> RETURN expression SEMI .)
    FOR             reduce using rule 32 (statement -> RETURN expression SEMI .)
    PRINT           reduce using rule 32 (statement -> RETURN expression SEMI .)
    COMMENTS        reduce using rule 32 (statement -> RETURN expression SEMI .)
    IF              reduce using rule 32 (statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 32 (statement -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 32 (statement -> RETURN expression SEMI .)
    DEFINE          reduce using rule 32 (statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 32 (statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 32 (statement -> RETURN expression SEMI .)
    NUMBER          reduce using rule 32 (statement -> RETURN expression SEMI .)
    STRING          reduce using rule 32 (statement -> RETURN expression SEMI .)
    TRUE            reduce using rule 32 (statement -> RETURN expression SEMI .)
    FALSE           reduce using rule 32 (statement -> RETURN expression SEMI .)
    $end            reduce using rule 32 (statement -> RETURN expression SEMI .)
    THEN            reduce using rule 32 (statement -> RETURN expression SEMI .)
    TO              reduce using rule 32 (statement -> RETURN expression SEMI .)
    RPAREN          reduce using rule 32 (statement -> RETURN expression SEMI .)
    LACC            reduce using rule 32 (statement -> RETURN expression SEMI .)
    END             reduce using rule 32 (statement -> RETURN expression SEMI .)


state 111

    (33) statement -> FUNCTION NAME LPAREN . RPAREN START bloc END
    (34) statement -> FUNCTION NAME LPAREN . params RPAREN START bloc END
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    RPAREN          shift and go to state 143
    NAME            shift and go to state 73

    params                         shift and go to state 144

state 112

    (40) statement -> params EQUALS param_call . SEMI

    SEMI            shift and go to state 145


state 113

    (45) statement -> DEFINE NAME EQUALS . expression SEMI
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 146

state 114

    (39) statement -> NAME EQUALS NAME DOTE . SCAN LPAREN RPAREN SEMI
    (35) statement -> NAME DOTE . FETCH LPAREN RPAREN SEMI
    (36) statement -> NAME DOTE . HTML LPAREN RPAREN SEMI
    (37) statement -> NAME DOTE . TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> NAME DOTE . SCAN LPAREN RPAREN SEMI

    SCAN            shift and go to state 147
    FETCH           shift and go to state 62
    HTML            shift and go to state 63
    TABLEID         shift and go to state 64


state 115

    (4) statement -> NAME EQUALS expression SEMI .
    (31) statement -> expression SEMI .

  ! reduce/reduce conflict for NAME resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for WHILE resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for FOR resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for PRINT resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for IF resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for RETURN resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for DEFINE resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for MINUS resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for LPAREN resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for NUMBER resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for TRUE resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for FALSE resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for $end resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for THEN resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for TO resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for RPAREN resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for LACC resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for END resolved using rule 4 (statement -> NAME EQUALS expression SEMI .)
    NAME            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FOR             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    STRING          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    TRUE            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    FALSE           reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    $end            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    THEN            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    TO              reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    LACC            reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)
    END             reduce using rule 4 (statement -> NAME EQUALS expression SEMI .)

  ! NAME            [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! WHILE           [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! FOR             [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! PRINT           [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! COMMENTS        [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! IF              [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! RETURN          [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! FUNCTION        [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! DEFINE          [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! MINUS           [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! LPAREN          [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! NUMBER          [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! STRING          [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! TRUE            [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! FALSE           [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! $end            [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! THEN            [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! TO              [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! RPAREN          [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! LACC            [ reduce using rule 31 (statement -> expression SEMI .) ]
  ! END             [ reduce using rule 31 (statement -> expression SEMI .) ]


state 116

    (35) statement -> NAME DOTE FETCH LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 148


state 117

    (36) statement -> NAME DOTE HTML LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 149


state 118

    (37) statement -> NAME DOTE TABLEID LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 150


state 119

    (38) statement -> NAME DOTE SCAN LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 151


state 120

    (41) statement -> NAME LPAREN RPAREN SEMI .

    NAME            reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    STRING          reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    THEN            reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    TO              reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    LACC            reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)
    END             reduce using rule 41 (statement -> NAME LPAREN RPAREN SEMI .)


state 121

    (42) statement -> NAME LPAREN param_call RPAREN . SEMI

    SEMI            shift and go to state 152


state 122

    (44) param_call -> expression COMMA . param_call
    (43) param_call -> . expression
    (44) param_call -> . expression COMMA param_call
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 68
    param_call                     shift and go to state 153

state 123

    (62) statement -> NAME PLUSEQ NUMBER SEMI .

    NAME            reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    WHILE           reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FOR             reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    PRINT           reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    IF              reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RETURN          reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    DEFINE          reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    MINUS           reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LPAREN          reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    NUMBER          reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    STRING          reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TRUE            reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FALSE           reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    $end            reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    THEN            reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TO              reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RPAREN          reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LACC            reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)
    END             reduce using rule 62 (statement -> NAME PLUSEQ NUMBER SEMI .)


state 124

    (63) statement -> NAME MINEQ NUMBER SEMI .

    NAME            reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    WHILE           reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    FOR             reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    PRINT           reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    IF              reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    RETURN          reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    DEFINE          reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    MINUS           reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    LPAREN          reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    NUMBER          reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    STRING          reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    TRUE            reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    FALSE           reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    $end            reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    THEN            reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    TO              reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    RPAREN          reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    LACC            reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)
    END             reduce using rule 63 (statement -> NAME MINEQ NUMBER SEMI .)


state 125

    (7) statement -> WHILE expression RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 154
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 126

    (50) expression -> expression or expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    RACC            reduce using rule 50 (expression -> expression or expression .)
    or              reduce using rule 50 (expression -> expression or expression .)
    INFF            reduce using rule 50 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 50 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 50 (expression -> expression or expression .)
    ET              reduce using rule 50 (expression -> expression or expression .)
    OU              reduce using rule 50 (expression -> expression or expression .)
    RPAREN          reduce using rule 50 (expression -> expression or expression .)
    SEMI            reduce using rule 50 (expression -> expression or expression .)
    CONCAT          reduce using rule 50 (expression -> expression or expression .)
    NAME            reduce using rule 50 (expression -> expression or expression .)
    WHILE           reduce using rule 50 (expression -> expression or expression .)
    FOR             reduce using rule 50 (expression -> expression or expression .)
    PRINT           reduce using rule 50 (expression -> expression or expression .)
    COMMENTS        reduce using rule 50 (expression -> expression or expression .)
    IF              reduce using rule 50 (expression -> expression or expression .)
    RETURN          reduce using rule 50 (expression -> expression or expression .)
    FUNCTION        reduce using rule 50 (expression -> expression or expression .)
    DEFINE          reduce using rule 50 (expression -> expression or expression .)
    LPAREN          reduce using rule 50 (expression -> expression or expression .)
    NUMBER          reduce using rule 50 (expression -> expression or expression .)
    STRING          reduce using rule 50 (expression -> expression or expression .)
    TRUE            reduce using rule 50 (expression -> expression or expression .)
    FALSE           reduce using rule 50 (expression -> expression or expression .)
    $end            reduce using rule 50 (expression -> expression or expression .)
    THEN            reduce using rule 50 (expression -> expression or expression .)
    TO              reduce using rule 50 (expression -> expression or expression .)
    LACC            reduce using rule 50 (expression -> expression or expression .)
    END             reduce using rule 50 (expression -> expression or expression .)
    COMMA           reduce using rule 50 (expression -> expression or expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    and             shift and go to state 94
    SUP             shift and go to state 95

  ! PLUS            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 93 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 127

    (51) expression -> expression and expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    RACC            reduce using rule 51 (expression -> expression and expression .)
    or              reduce using rule 51 (expression -> expression and expression .)
    and             reduce using rule 51 (expression -> expression and expression .)
    INFF            reduce using rule 51 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 51 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 51 (expression -> expression and expression .)
    ET              reduce using rule 51 (expression -> expression and expression .)
    OU              reduce using rule 51 (expression -> expression and expression .)
    RPAREN          reduce using rule 51 (expression -> expression and expression .)
    SEMI            reduce using rule 51 (expression -> expression and expression .)
    CONCAT          reduce using rule 51 (expression -> expression and expression .)
    NAME            reduce using rule 51 (expression -> expression and expression .)
    WHILE           reduce using rule 51 (expression -> expression and expression .)
    FOR             reduce using rule 51 (expression -> expression and expression .)
    PRINT           reduce using rule 51 (expression -> expression and expression .)
    COMMENTS        reduce using rule 51 (expression -> expression and expression .)
    IF              reduce using rule 51 (expression -> expression and expression .)
    RETURN          reduce using rule 51 (expression -> expression and expression .)
    FUNCTION        reduce using rule 51 (expression -> expression and expression .)
    DEFINE          reduce using rule 51 (expression -> expression and expression .)
    LPAREN          reduce using rule 51 (expression -> expression and expression .)
    NUMBER          reduce using rule 51 (expression -> expression and expression .)
    STRING          reduce using rule 51 (expression -> expression and expression .)
    TRUE            reduce using rule 51 (expression -> expression and expression .)
    FALSE           reduce using rule 51 (expression -> expression and expression .)
    $end            reduce using rule 51 (expression -> expression and expression .)
    THEN            reduce using rule 51 (expression -> expression and expression .)
    TO              reduce using rule 51 (expression -> expression and expression .)
    LACC            reduce using rule 51 (expression -> expression and expression .)
    END             reduce using rule 51 (expression -> expression and expression .)
    COMMA           reduce using rule 51 (expression -> expression and expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    SUP             shift and go to state 95

  ! PLUS            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 51 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 128

    (52) expression -> expression SUP expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    RACC            reduce using rule 52 (expression -> expression SUP expression .)
    or              reduce using rule 52 (expression -> expression SUP expression .)
    and             reduce using rule 52 (expression -> expression SUP expression .)
    SUP             reduce using rule 52 (expression -> expression SUP expression .)
    INFF            reduce using rule 52 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 52 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 52 (expression -> expression SUP expression .)
    ET              reduce using rule 52 (expression -> expression SUP expression .)
    OU              reduce using rule 52 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 52 (expression -> expression SUP expression .)
    SEMI            reduce using rule 52 (expression -> expression SUP expression .)
    CONCAT          reduce using rule 52 (expression -> expression SUP expression .)
    NAME            reduce using rule 52 (expression -> expression SUP expression .)
    WHILE           reduce using rule 52 (expression -> expression SUP expression .)
    FOR             reduce using rule 52 (expression -> expression SUP expression .)
    PRINT           reduce using rule 52 (expression -> expression SUP expression .)
    COMMENTS        reduce using rule 52 (expression -> expression SUP expression .)
    IF              reduce using rule 52 (expression -> expression SUP expression .)
    RETURN          reduce using rule 52 (expression -> expression SUP expression .)
    FUNCTION        reduce using rule 52 (expression -> expression SUP expression .)
    DEFINE          reduce using rule 52 (expression -> expression SUP expression .)
    LPAREN          reduce using rule 52 (expression -> expression SUP expression .)
    NUMBER          reduce using rule 52 (expression -> expression SUP expression .)
    STRING          reduce using rule 52 (expression -> expression SUP expression .)
    TRUE            reduce using rule 52 (expression -> expression SUP expression .)
    FALSE           reduce using rule 52 (expression -> expression SUP expression .)
    $end            reduce using rule 52 (expression -> expression SUP expression .)
    THEN            reduce using rule 52 (expression -> expression SUP expression .)
    TO              reduce using rule 52 (expression -> expression SUP expression .)
    LACC            reduce using rule 52 (expression -> expression SUP expression .)
    END             reduce using rule 52 (expression -> expression SUP expression .)
    COMMA           reduce using rule 52 (expression -> expression SUP expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! PLUS            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 93 ]
  ! and             [ shift and go to state 94 ]
  ! SUP             [ shift and go to state 95 ]
  ! INFF            [ shift and go to state 96 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]


state 129

    (53) expression -> expression INFF expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 53 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 53 (expression -> expression INFF expression .)
    SEMI            reduce using rule 53 (expression -> expression INFF expression .)
    CONCAT          reduce using rule 53 (expression -> expression INFF expression .)
    NAME            reduce using rule 53 (expression -> expression INFF expression .)
    WHILE           reduce using rule 53 (expression -> expression INFF expression .)
    FOR             reduce using rule 53 (expression -> expression INFF expression .)
    PRINT           reduce using rule 53 (expression -> expression INFF expression .)
    COMMENTS        reduce using rule 53 (expression -> expression INFF expression .)
    IF              reduce using rule 53 (expression -> expression INFF expression .)
    RETURN          reduce using rule 53 (expression -> expression INFF expression .)
    FUNCTION        reduce using rule 53 (expression -> expression INFF expression .)
    DEFINE          reduce using rule 53 (expression -> expression INFF expression .)
    LPAREN          reduce using rule 53 (expression -> expression INFF expression .)
    NUMBER          reduce using rule 53 (expression -> expression INFF expression .)
    STRING          reduce using rule 53 (expression -> expression INFF expression .)
    TRUE            reduce using rule 53 (expression -> expression INFF expression .)
    FALSE           reduce using rule 53 (expression -> expression INFF expression .)
    $end            reduce using rule 53 (expression -> expression INFF expression .)
    THEN            reduce using rule 53 (expression -> expression INFF expression .)
    TO              reduce using rule 53 (expression -> expression INFF expression .)
    LACC            reduce using rule 53 (expression -> expression INFF expression .)
    END             reduce using rule 53 (expression -> expression INFF expression .)
    COMMA           reduce using rule 53 (expression -> expression INFF expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43

  ! PLUS            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 53 (expression -> expression INFF expression .) ]


state 130

    (8) statement -> FOR LPAREN statement TO . NUMBER COMMA statement RPAREN RACC bloc LACC

    NUMBER          shift and go to state 155


state 131

    (19) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 156


state 132

    (23) print_params -> expression COMMA . print_params
    (22) print_params -> . expression
    (23) print_params -> . expression COMMA print_params
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 157
    print_params                   shift and go to state 158

state 133

    (21) statement -> PRINT LPAREN statement RPAREN . SEMI

    SEMI            shift and go to state 159


state 134

    (24) statement -> PRINT LPAREN print_params RPAREN . SEMI

    SEMI            shift and go to state 160


state 135

    (13) statement -> IF expression THEN statement .

    NAME            reduce using rule 13 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 13 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 13 (statement -> IF expression THEN statement .)
    PRINT           reduce using rule 13 (statement -> IF expression THEN statement .)
    COMMENTS        reduce using rule 13 (statement -> IF expression THEN statement .)
    IF              reduce using rule 13 (statement -> IF expression THEN statement .)
    RETURN          reduce using rule 13 (statement -> IF expression THEN statement .)
    FUNCTION        reduce using rule 13 (statement -> IF expression THEN statement .)
    DEFINE          reduce using rule 13 (statement -> IF expression THEN statement .)
    MINUS           reduce using rule 13 (statement -> IF expression THEN statement .)
    LPAREN          reduce using rule 13 (statement -> IF expression THEN statement .)
    NUMBER          reduce using rule 13 (statement -> IF expression THEN statement .)
    STRING          reduce using rule 13 (statement -> IF expression THEN statement .)
    TRUE            reduce using rule 13 (statement -> IF expression THEN statement .)
    FALSE           reduce using rule 13 (statement -> IF expression THEN statement .)
    $end            reduce using rule 13 (statement -> IF expression THEN statement .)
    THEN            reduce using rule 13 (statement -> IF expression THEN statement .)
    TO              reduce using rule 13 (statement -> IF expression THEN statement .)
    RPAREN          reduce using rule 13 (statement -> IF expression THEN statement .)
    LACC            reduce using rule 13 (statement -> IF expression THEN statement .)
    END             reduce using rule 13 (statement -> IF expression THEN statement .)


state 136

    (14) statement -> IF expression THEN RACC . bloc LACC
    (15) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 161
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 137

    (50) expression -> expression or expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
    or              reduce using rule 50 (expression -> expression or expression .)
    INFF            reduce using rule 50 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 50 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 50 (expression -> expression or expression .)
    ET              reduce using rule 50 (expression -> expression or expression .)
    OU              reduce using rule 50 (expression -> expression or expression .)
    CONCAT          reduce using rule 50 (expression -> expression or expression .)
    SEMI            reduce using rule 50 (expression -> expression or expression .)
    COMMA           reduce using rule 50 (expression -> expression or expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    and             shift and go to state 106
    SUP             shift and go to state 107
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)

  ! THEN            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! NAME            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! WHILE           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! FOR             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! PRINT           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! COMMENTS        [ reduce using rule 50 (expression -> expression or expression .) ]
  ! IF              [ reduce using rule 50 (expression -> expression or expression .) ]
  ! RETURN          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! FUNCTION        [ reduce using rule 50 (expression -> expression or expression .) ]
  ! DEFINE          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! LPAREN          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! NUMBER          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! STRING          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! TRUE            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! FALSE           [ reduce using rule 50 (expression -> expression or expression .) ]
  ! $end            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! TO              [ reduce using rule 50 (expression -> expression or expression .) ]
  ! RPAREN          [ reduce using rule 50 (expression -> expression or expression .) ]
  ! LACC            [ reduce using rule 50 (expression -> expression or expression .) ]
  ! END             [ reduce using rule 50 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 105 ]
  ! INFF            [ shift and go to state 108 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 30 ]
  ! SEMI            [ shift and go to state 35 ]


state 138

    (51) expression -> expression and expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
    or              reduce using rule 51 (expression -> expression and expression .)
    and             reduce using rule 51 (expression -> expression and expression .)
    INFF            reduce using rule 51 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 51 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 51 (expression -> expression and expression .)
    ET              reduce using rule 51 (expression -> expression and expression .)
    OU              reduce using rule 51 (expression -> expression and expression .)
    CONCAT          reduce using rule 51 (expression -> expression and expression .)
    SEMI            reduce using rule 51 (expression -> expression and expression .)
    COMMA           reduce using rule 51 (expression -> expression and expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    SUP             shift and go to state 107
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)

  ! THEN            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 51 (expression -> expression and expression .) ]
  ! NAME            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! WHILE           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! FOR             [ reduce using rule 51 (expression -> expression and expression .) ]
  ! PRINT           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! COMMENTS        [ reduce using rule 51 (expression -> expression and expression .) ]
  ! IF              [ reduce using rule 51 (expression -> expression and expression .) ]
  ! RETURN          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! FUNCTION        [ reduce using rule 51 (expression -> expression and expression .) ]
  ! DEFINE          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! LPAREN          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! NUMBER          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! STRING          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! TRUE            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! FALSE           [ reduce using rule 51 (expression -> expression and expression .) ]
  ! $end            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! TO              [ reduce using rule 51 (expression -> expression and expression .) ]
  ! RPAREN          [ reduce using rule 51 (expression -> expression and expression .) ]
  ! LACC            [ reduce using rule 51 (expression -> expression and expression .) ]
  ! END             [ reduce using rule 51 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 105 ]
  ! and             [ shift and go to state 106 ]
  ! INFF            [ shift and go to state 108 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 30 ]
  ! SEMI            [ shift and go to state 35 ]


state 139

    (52) expression -> expression SUP expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
    or              reduce using rule 52 (expression -> expression SUP expression .)
    and             reduce using rule 52 (expression -> expression SUP expression .)
    INFF            reduce using rule 52 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 52 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 52 (expression -> expression SUP expression .)
    ET              reduce using rule 52 (expression -> expression SUP expression .)
    OU              reduce using rule 52 (expression -> expression SUP expression .)
    CONCAT          reduce using rule 52 (expression -> expression SUP expression .)
    SEMI            reduce using rule 52 (expression -> expression SUP expression .)
    COMMA           reduce using rule 52 (expression -> expression SUP expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)
    SUP             shift and go to state 107

  ! THEN            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! NAME            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! WHILE           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! FOR             [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! PRINT           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! COMMENTS        [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! IF              [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! RETURN          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! FUNCTION        [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! DEFINE          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! NUMBER          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! STRING          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! TRUE            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! FALSE           [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! $end            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! TO              [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! RPAREN          [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! LACC            [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! END             [ reduce using rule 52 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 105 ]
  ! and             [ shift and go to state 106 ]
  ! INFF            [ shift and go to state 108 ]
  ! ISEQUAL         [ shift and go to state 40 ]
  ! NOTEQUAL        [ shift and go to state 41 ]
  ! ET              [ shift and go to state 42 ]
  ! OU              [ shift and go to state 43 ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 30 ]
  ! SEMI            [ shift and go to state 35 ]


state 140

    (53) expression -> expression INFF expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression
    (9) statement -> expression .
    (10) statement -> expression . CONCAT statement
    (27) statement -> expression . INFF statement
    (28) statement -> expression . SUP statement
    (29) statement -> expression . and statement
    (30) statement -> expression . or statement
    (31) statement -> expression . SEMI

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 9 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 9 (statement -> expression .)
  ! shift/reduce conflict for CONCAT resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
    COMMA           reduce using rule 53 (expression -> expression INFF expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 105
    and             shift and go to state 106
    SUP             shift and go to state 107
    INFF            shift and go to state 108
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43
    NAME            reduce using rule 9 (statement -> expression .)
    WHILE           reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    COMMENTS        reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    RETURN          reduce using rule 9 (statement -> expression .)
    FUNCTION        reduce using rule 9 (statement -> expression .)
    DEFINE          reduce using rule 9 (statement -> expression .)
    LPAREN          reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    STRING          reduce using rule 9 (statement -> expression .)
    TRUE            reduce using rule 9 (statement -> expression .)
    FALSE           reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    THEN            reduce using rule 9 (statement -> expression .)
    TO              reduce using rule 9 (statement -> expression .)
    RPAREN          reduce using rule 9 (statement -> expression .)
    LACC            reduce using rule 9 (statement -> expression .)
    END             reduce using rule 9 (statement -> expression .)
    CONCAT          shift and go to state 30
    SEMI            shift and go to state 35

  ! THEN            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! CONCAT          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! SEMI            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! NAME            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! WHILE           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! FOR             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! PRINT           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! COMMENTS        [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! IF              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! RETURN          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! FUNCTION        [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! DEFINE          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! LPAREN          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! NUMBER          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! STRING          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! TRUE            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! FALSE           [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! $end            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! TO              [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! RPAREN          [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! LACC            [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! END             [ reduce using rule 53 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 9 (statement -> expression .) ]


state 141

    (18) statement -> IF statement THEN statement .

    NAME            reduce using rule 18 (statement -> IF statement THEN statement .)
    WHILE           reduce using rule 18 (statement -> IF statement THEN statement .)
    FOR             reduce using rule 18 (statement -> IF statement THEN statement .)
    PRINT           reduce using rule 18 (statement -> IF statement THEN statement .)
    COMMENTS        reduce using rule 18 (statement -> IF statement THEN statement .)
    IF              reduce using rule 18 (statement -> IF statement THEN statement .)
    RETURN          reduce using rule 18 (statement -> IF statement THEN statement .)
    FUNCTION        reduce using rule 18 (statement -> IF statement THEN statement .)
    DEFINE          reduce using rule 18 (statement -> IF statement THEN statement .)
    MINUS           reduce using rule 18 (statement -> IF statement THEN statement .)
    LPAREN          reduce using rule 18 (statement -> IF statement THEN statement .)
    NUMBER          reduce using rule 18 (statement -> IF statement THEN statement .)
    STRING          reduce using rule 18 (statement -> IF statement THEN statement .)
    TRUE            reduce using rule 18 (statement -> IF statement THEN statement .)
    FALSE           reduce using rule 18 (statement -> IF statement THEN statement .)
    $end            reduce using rule 18 (statement -> IF statement THEN statement .)
    THEN            reduce using rule 18 (statement -> IF statement THEN statement .)
    TO              reduce using rule 18 (statement -> IF statement THEN statement .)
    RPAREN          reduce using rule 18 (statement -> IF statement THEN statement .)
    LACC            reduce using rule 18 (statement -> IF statement THEN statement .)
    END             reduce using rule 18 (statement -> IF statement THEN statement .)


state 142

    (17) statement -> IF statement THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 3
    bloc                           shift and go to state 162
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 143

    (33) statement -> FUNCTION NAME LPAREN RPAREN . START bloc END

    START           shift and go to state 163


state 144

    (34) statement -> FUNCTION NAME LPAREN params . RPAREN START bloc END

    RPAREN          shift and go to state 164


state 145

    (40) statement -> params EQUALS param_call SEMI .

    NAME            reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    WHILE           reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    FOR             reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    PRINT           reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    COMMENTS        reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    IF              reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    RETURN          reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    FUNCTION        reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    DEFINE          reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    MINUS           reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    LPAREN          reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    NUMBER          reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    STRING          reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    TRUE            reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    FALSE           reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    $end            reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    THEN            reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    TO              reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    RPAREN          reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    LACC            reduce using rule 40 (statement -> params EQUALS param_call SEMI .)
    END             reduce using rule 40 (statement -> params EQUALS param_call SEMI .)


state 146

    (45) statement -> DEFINE NAME EQUALS expression . SEMI
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    SEMI            shift and go to state 165
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43


state 147

    (39) statement -> NAME EQUALS NAME DOTE SCAN . LPAREN RPAREN SEMI
    (38) statement -> NAME DOTE SCAN . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 166


state 148

    (35) statement -> NAME DOTE FETCH LPAREN RPAREN . SEMI

    SEMI            shift and go to state 167


state 149

    (36) statement -> NAME DOTE HTML LPAREN RPAREN . SEMI

    SEMI            shift and go to state 168


state 150

    (37) statement -> NAME DOTE TABLEID LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 169


state 151

    (38) statement -> NAME DOTE SCAN LPAREN RPAREN . SEMI

    SEMI            shift and go to state 170


state 152

    (42) statement -> NAME LPAREN param_call RPAREN SEMI .

    NAME            reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    WHILE           reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FOR             reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    PRINT           reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    COMMENTS        reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    IF              reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RETURN          reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FUNCTION        reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    DEFINE          reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    MINUS           reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LPAREN          reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    NUMBER          reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    STRING          reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TRUE            reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FALSE           reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    $end            reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    THEN            reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TO              reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RPAREN          reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LACC            reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    END             reduce using rule 42 (statement -> NAME LPAREN param_call RPAREN SEMI .)


state 153

    (44) param_call -> expression COMMA param_call .

    RPAREN          reduce using rule 44 (param_call -> expression COMMA param_call .)
    SEMI            reduce using rule 44 (param_call -> expression COMMA param_call .)


state 154

    (7) statement -> WHILE expression RACC bloc LACC .

    NAME            reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    WHILE           reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    FOR             reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    PRINT           reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    COMMENTS        reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    IF              reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    RETURN          reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    FUNCTION        reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    DEFINE          reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    MINUS           reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    LPAREN          reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    NUMBER          reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    STRING          reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    TRUE            reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    FALSE           reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    $end            reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    THEN            reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    TO              reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    RPAREN          reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    LACC            reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)
    END             reduce using rule 7 (statement -> WHILE expression RACC bloc LACC .)


state 155

    (8) statement -> FOR LPAREN statement TO NUMBER . COMMA statement RPAREN RACC bloc LACC

    COMMA           shift and go to state 171


state 156

    (19) statement -> PRINT LPAREN expression RPAREN SEMI .

    NAME            reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    COMMENTS        reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FUNCTION        reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    DEFINE          reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    THEN            reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TO              reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LACC            reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    END             reduce using rule 19 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 157

    (22) print_params -> expression .
    (23) print_params -> expression . COMMA print_params
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    RPAREN          reduce using rule 22 (print_params -> expression .)
    COMMA           shift and go to state 132
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43


state 158

    (23) print_params -> expression COMMA print_params .

    RPAREN          reduce using rule 23 (print_params -> expression COMMA print_params .)


state 159

    (21) statement -> PRINT LPAREN statement RPAREN SEMI .

    NAME            reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    WHILE           reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    FOR             reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    PRINT           reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    COMMENTS        reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    IF              reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    RETURN          reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    FUNCTION        reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    DEFINE          reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    MINUS           reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    LPAREN          reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    NUMBER          reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    STRING          reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    TRUE            reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    FALSE           reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    $end            reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    THEN            reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    TO              reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    RPAREN          reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    LACC            reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    END             reduce using rule 21 (statement -> PRINT LPAREN statement RPAREN SEMI .)


state 160

    (24) statement -> PRINT LPAREN print_params RPAREN SEMI .

    NAME            reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    WHILE           reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FOR             reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    PRINT           reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    COMMENTS        reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    IF              reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    RETURN          reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FUNCTION        reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    DEFINE          reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    MINUS           reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    LPAREN          reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    NUMBER          reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    STRING          reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    TRUE            reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FALSE           reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    $end            reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    THEN            reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    TO              reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    RPAREN          reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    LACC            reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    END             reduce using rule 24 (statement -> PRINT LPAREN print_params RPAREN SEMI .)


state 161

    (14) statement -> IF expression THEN RACC bloc . LACC
    (15) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 172
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 162

    (17) statement -> IF statement THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 173
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 163

    (33) statement -> FUNCTION NAME LPAREN RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    bloc                           shift and go to state 174
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 164

    (34) statement -> FUNCTION NAME LPAREN params RPAREN . START bloc END

    START           shift and go to state 175


state 165

    (45) statement -> DEFINE NAME EQUALS expression SEMI .

    NAME            reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FOR             reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    IF              reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    STRING          reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    TRUE            reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FALSE           reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    $end            reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    THEN            reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    TO              reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LACC            reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)
    END             reduce using rule 45 (statement -> DEFINE NAME EQUALS expression SEMI .)


state 166

    (39) statement -> NAME EQUALS NAME DOTE SCAN LPAREN . RPAREN SEMI
    (38) statement -> NAME DOTE SCAN LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 176


state 167

    (35) statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .

    NAME            reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    FOR             reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    IF              reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    STRING          reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    $end            reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    THEN            reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    TO              reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    LACC            reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    END             reduce using rule 35 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)


state 168

    (36) statement -> NAME DOTE HTML LPAREN RPAREN SEMI .

    NAME            reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    FOR             reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    IF              reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    STRING          reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    $end            reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    THEN            reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    TO              reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    LACC            reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    END             reduce using rule 36 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)


state 169

    (37) statement -> NAME DOTE TABLEID LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 177


state 170

    (38) statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .

    NAME            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FOR             reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    IF              reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    STRING          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    $end            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    THEN            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TO              reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LACC            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    END             reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)


state 171

    (8) statement -> FOR LPAREN statement TO NUMBER COMMA . statement RPAREN RACC bloc LACC
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 178
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 172

    (14) statement -> IF expression THEN RACC bloc LACC .
    (15) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    NAME            reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    WHILE           reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    FOR             reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    PRINT           reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    COMMENTS        reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    IF              reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    RETURN          reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    FUNCTION        reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    DEFINE          reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    MINUS           reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    LPAREN          reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    NUMBER          reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    STRING          reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    TRUE            reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    FALSE           reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    $end            reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    THEN            reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    TO              reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    RPAREN          reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    LACC            reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    END             reduce using rule 14 (statement -> IF expression THEN RACC bloc LACC .)
    ELSEIF          shift and go to state 179
    ELSE            shift and go to state 180


state 173

    (17) statement -> IF statement THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 181


state 174

    (33) statement -> FUNCTION NAME LPAREN RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    END             shift and go to state 182
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 175

    (34) statement -> FUNCTION NAME LPAREN params RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    params                         shift and go to state 16
    bloc                           shift and go to state 183
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 176

    (39) statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN . SEMI
    (38) statement -> NAME DOTE SCAN LPAREN RPAREN . SEMI

    SEMI            shift and go to state 184


state 177

    (37) statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .

    NAME            reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    PRINT           reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    COMMENTS        reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    RETURN          reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    DEFINE          reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    MINUS           reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    LPAREN          reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    NUMBER          reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    STRING          reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    TRUE            reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    FALSE           reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    $end            reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    THEN            reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    TO              reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    RPAREN          reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    LACC            reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    END             reduce using rule 37 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)


state 178

    (8) statement -> FOR LPAREN statement TO NUMBER COMMA statement . RPAREN RACC bloc LACC

    RPAREN          shift and go to state 185


state 179

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE

    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    NAME            shift and go to state 45
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 186

state 180

    (16) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 187


state 181

    (17) statement -> IF statement THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 188


state 182

    (33) statement -> FUNCTION NAME LPAREN RPAREN START bloc END .

    NAME            reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    WHILE           reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FOR             reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    PRINT           reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    COMMENTS        reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    IF              reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RETURN          reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FUNCTION        reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    DEFINE          reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    MINUS           reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LPAREN          reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    NUMBER          reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    STRING          reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TRUE            reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FALSE           reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    $end            reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    THEN            reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TO              reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RPAREN          reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LACC            reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    END             reduce using rule 33 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)


state 183

    (34) statement -> FUNCTION NAME LPAREN params RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    END             shift and go to state 189
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    params                         shift and go to state 16
    statement                      shift and go to state 21
    expression                     shift and go to state 5

state 184

    (39) statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .
    (38) statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .

  ! reduce/reduce conflict for NAME resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for WHILE resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for FOR resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for PRINT resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for IF resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for RETURN resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for DEFINE resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for MINUS resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for LPAREN resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for NUMBER resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for STRING resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for TRUE resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for FALSE resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for $end resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for THEN resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for TO resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for RPAREN resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for LACC resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for END resolved using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    NAME            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FOR             reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    IF              reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    STRING          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    $end            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    THEN            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TO              reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LACC            reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    END             reduce using rule 38 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)

  ! NAME            [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! COMMENTS        [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! IF              [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! RETURN          [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! FUNCTION        [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! DEFINE          [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! MINUS           [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! NUMBER          [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! STRING          [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! $end            [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! THEN            [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! TO              [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! RPAREN          [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! LACC            [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! END             [ reduce using rule 39 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]


state 185

    (8) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN . RACC bloc LACC

    RACC            shift and go to state 190


state 186

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . DIVIDE expression
    (50) expression -> expression . or expression
    (51) expression -> expression . and expression
    (52) expression -> expression . SUP expression
    (53) expression -> expression . INFF expression
    (54) expression -> expression . ISEQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (56) expression -> expression . ET expression
    (57) expression -> expression . OU expression

    THEN            shift and go to state 191
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    or              shift and go to state 93
    and             shift and go to state 94
    SUP             shift and go to state 95
    INFF            shift and go to state 96
    ISEQUAL         shift and go to state 40
    NOTEQUAL        shift and go to state 41
    ET              shift and go to state 42
    OU              shift and go to state 43


state 187

    (16) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 192
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 188

    (17) statement -> IF statement THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 3
    bloc                           shift and go to state 193
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 189

    (34) statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .

    NAME            reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    WHILE           reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FOR             reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    PRINT           reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    COMMENTS        reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    IF              reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RETURN          reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FUNCTION        reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    DEFINE          reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    MINUS           reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LPAREN          reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    NUMBER          reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    STRING          reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TRUE            reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FALSE           reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    $end            reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    THEN            reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TO              reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RPAREN          reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LACC            reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    END             reduce using rule 34 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)


state 190

    (8) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 3
    bloc                           shift and go to state 194
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 191

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 195


state 192

    (16) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 196
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 193

    (17) statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 197
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 194

    (8) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 198
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 195

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 199
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 196

    (16) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TRUE            reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FALSE           reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    THEN            reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 16 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 197

    (17) statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TRUE            reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FALSE           reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    THEN            reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 17 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 198

    (8) statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .

    NAME            reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    WHILE           reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FOR             reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    PRINT           reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    COMMENTS        reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    IF              reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RETURN          reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FUNCTION        reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    DEFINE          reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    MINUS           reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LPAREN          reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    NUMBER          reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    STRING          reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    TRUE            reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    FALSE           reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    $end            reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    THEN            reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    TO              reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    RPAREN          reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    LACC            reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)
    END             reduce using rule 8 (statement -> FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC .)


state 199

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 200
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 200

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 201


state 201

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 202


state 202

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 203
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 203

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUALS expression SEMI
    (5) statement -> . NAME EQUALS expression
    (6) statement -> . NAME EQUALS statement
    (7) statement -> . WHILE expression RACC bloc LACC
    (8) statement -> . FOR LPAREN statement TO NUMBER COMMA statement RPAREN RACC bloc LACC
    (9) statement -> . expression
    (10) statement -> . expression CONCAT statement
    (11) statement -> . PRINT CONCAT statement
    (12) statement -> . COMMENTS
    (13) statement -> . IF expression THEN statement
    (14) statement -> . IF expression THEN RACC bloc LACC
    (15) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (16) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (17) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (18) statement -> . IF statement THEN statement
    (19) statement -> . PRINT LPAREN expression RPAREN SEMI
    (20) statement -> . PRINT STRING SEMI
    (21) statement -> . PRINT LPAREN statement RPAREN SEMI
    (24) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (27) statement -> . expression INFF statement
    (28) statement -> . expression SUP statement
    (29) statement -> . expression and statement
    (30) statement -> . expression or statement
    (31) statement -> . expression SEMI
    (32) statement -> . RETURN expression SEMI
    (33) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (34) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (35) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (36) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (37) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (38) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (39) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (40) statement -> . params EQUALS param_call SEMI
    (41) statement -> . NAME LPAREN RPAREN SEMI
    (42) statement -> . NAME LPAREN param_call RPAREN SEMI
    (45) statement -> . DEFINE NAME EQUALS expression SEMI
    (58) statement -> . NAME INCR SEMI
    (59) statement -> . NAME DECR SEMI
    (60) statement -> . NAME INCR
    (61) statement -> . NAME DECR
    (62) statement -> . NAME PLUSEQ NUMBER SEMI
    (63) statement -> . NAME MINEQ NUMBER SEMI
    (64) statement -> . NAME PLUSEQ NUMBER
    (65) statement -> . NAME MINEQ NUMBER
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . expression or expression
    (51) expression -> . expression and expression
    (52) expression -> . expression SUP expression
    (53) expression -> . expression INFF expression
    (54) expression -> . expression ISEQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . expression ET expression
    (57) expression -> . expression OU expression
    (66) expression -> . MINUS expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . NUMBER
    (69) expression -> . STRING
    (70) expression -> . NAME
    (71) expression -> . TRUE
    (72) expression -> . FALSE
    (25) params -> . NAME
    (26) params -> . NAME COMMA params

    LACC            shift and go to state 204
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 10
    COMMENTS        shift and go to state 11
    IF              shift and go to state 12
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 9
    STRING          shift and go to state 13
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 204

    (15) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TRUE            reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FALSE           reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    THEN            reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 15 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for THEN in state 51 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 53 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 53 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 59 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 76 resolved as shift
WARNING: shift/reduce conflict for INFF in state 76 resolved as shift
WARNING: shift/reduce conflict for SUP in state 76 resolved as shift
WARNING: shift/reduce conflict for and in state 76 resolved as shift
WARNING: shift/reduce conflict for or in state 76 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for ET in state 76 resolved as shift
WARNING: shift/reduce conflict for OU in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for or in state 88 resolved as shift
WARNING: shift/reduce conflict for and in state 88 resolved as shift
WARNING: shift/reduce conflict for SUP in state 88 resolved as shift
WARNING: shift/reduce conflict for INFF in state 88 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for ET in state 88 resolved as shift
WARNING: shift/reduce conflict for OU in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for or in state 89 resolved as shift
WARNING: shift/reduce conflict for and in state 89 resolved as shift
WARNING: shift/reduce conflict for SUP in state 89 resolved as shift
WARNING: shift/reduce conflict for INFF in state 89 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for ET in state 89 resolved as shift
WARNING: shift/reduce conflict for OU in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for or in state 90 resolved as shift
WARNING: shift/reduce conflict for and in state 90 resolved as shift
WARNING: shift/reduce conflict for SUP in state 90 resolved as shift
WARNING: shift/reduce conflict for INFF in state 90 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for ET in state 90 resolved as shift
WARNING: shift/reduce conflict for OU in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for or in state 91 resolved as shift
WARNING: shift/reduce conflict for and in state 91 resolved as shift
WARNING: shift/reduce conflict for SUP in state 91 resolved as shift
WARNING: shift/reduce conflict for INFF in state 91 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for ET in state 91 resolved as shift
WARNING: shift/reduce conflict for OU in state 91 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 100 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 129 resolved as shift
WARNING: shift/reduce conflict for or in state 129 resolved as shift
WARNING: shift/reduce conflict for and in state 129 resolved as shift
WARNING: shift/reduce conflict for SUP in state 129 resolved as shift
WARNING: shift/reduce conflict for INFF in state 129 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for ET in state 129 resolved as shift
WARNING: shift/reduce conflict for OU in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 140 resolved as shift
WARNING: shift/reduce conflict for or in state 140 resolved as shift
WARNING: shift/reduce conflict for and in state 140 resolved as shift
WARNING: shift/reduce conflict for SUP in state 140 resolved as shift
WARNING: shift/reduce conflict for INFF in state 140 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for ET in state 140 resolved as shift
WARNING: shift/reduce conflict for OU in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 140 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 140 resolved as shift
WARNING: reduce/reduce conflict in state 60 resolved using rule (statement -> NAME EQUALS expression)
WARNING: rejected rule (statement -> expression) in state 60
WARNING: reduce/reduce conflict in state 76 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression INFF expression) in state 76
WARNING: reduce/reduce conflict in state 78 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression SUP expression) in state 78
WARNING: reduce/reduce conflict in state 80 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression and expression) in state 80
WARNING: reduce/reduce conflict in state 82 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression or expression) in state 82
WARNING: reduce/reduce conflict in state 115 resolved using rule (statement -> NAME EQUALS expression SEMI)
WARNING: rejected rule (statement -> expression SEMI) in state 115
WARNING: reduce/reduce conflict in state 137 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression or expression) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression and expression) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression SUP expression) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression INFF expression) in state 140
WARNING: reduce/reduce conflict in state 184 resolved using rule (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI)
WARNING: rejected rule (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI) in state 184
WARNING: Rule (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI) is never reduced
