Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     expression -> NAME DOTE CAPACITY LPAREN RPAREN
Rule 5     statement -> NAME EQUALS expression SEMI
Rule 6     statement -> NAME EQUALS expression
Rule 7     statement -> NAME EQUALS statement
Rule 8     statement -> WHILE expression RACC bloc LACC
Rule 9     statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
Rule 10    statement -> expression
Rule 11    statement -> expression CONCAT statement
Rule 12    statement -> PRINT CONCAT statement
Rule 13    statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
Rule 14    statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI
Rule 15    statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
Rule 16    statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
Rule 17    statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
Rule 18    statement -> COMMENTS
Rule 19    statement -> IF expression THEN statement
Rule 20    statement -> IF expression THEN RACC bloc LACC
Rule 21    statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 22    statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 23    statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
Rule 24    statement -> IF statement THEN statement
Rule 25    statement -> PRINT LPAREN expression RPAREN SEMI
Rule 26    statement -> PRINT STRING SEMI
Rule 27    statement -> PRINT LPAREN statement RPAREN SEMI
Rule 28    print_params -> expression
Rule 29    print_params -> expression COMMA print_params
Rule 30    statement -> PRINT LPAREN print_params RPAREN SEMI
Rule 31    params -> NAME
Rule 32    params -> NAME COMMA params
Rule 33    statement -> expression INFF statement
Rule 34    statement -> expression SUP statement
Rule 35    statement -> expression and statement
Rule 36    statement -> expression or statement
Rule 37    statement -> expression SEMI
Rule 38    statement -> RETURN expression SEMI
Rule 39    statement -> FUNCTION NAME LPAREN RPAREN START bloc END
Rule 40    statement -> FUNCTION NAME LPAREN params RPAREN START bloc END
Rule 41    statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
Rule 42    statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
Rule 43    statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI
Rule 44    expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI
Rule 45    statement -> NAME RACC expression LACC SEMI
Rule 46    statement -> NAME RACC STRING LACC SEMI
Rule 47    statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI
Rule 48    statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI
Rule 49    statement -> NAME DOTE FETCH LPAREN RPAREN SEMI
Rule 50    statement -> NAME DOTE HTML LPAREN RPAREN SEMI
Rule 51    statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
Rule 52    statement -> NAME DOTE SCAN LPAREN RPAREN SEMI
Rule 53    statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
Rule 54    statement -> params EQUALS param_call SEMI
Rule 55    statement -> NAME LPAREN RPAREN SEMI
Rule 56    statement -> NAME LPAREN param_call RPAREN SEMI
Rule 57    param_call -> expression
Rule 58    param_call -> expression COMMA param_call
Rule 59    statement -> DEFINE NAME EQUALS expression SEMI
Rule 60    expression -> expression PLUS expression
Rule 61    expression -> expression MINUS expression
Rule 62    expression -> expression TIMES expression
Rule 63    expression -> expression DIVIDE expression
Rule 64    expression -> expression or expression
Rule 65    expression -> expression and expression
Rule 66    expression -> expression SUP expression
Rule 67    expression -> expression INFF expression
Rule 68    expression -> expression ISEQUAL expression
Rule 69    expression -> expression NOTEQUAL expression
Rule 70    expression -> expression ET expression
Rule 71    expression -> expression OU expression
Rule 72    statement -> NAME INCR SEMI
Rule 73    statement -> NAME DECR SEMI
Rule 74    statement -> NAME INCR
Rule 75    statement -> NAME DECR
Rule 76    statement -> NAME PLUSEQ NUMBER SEMI
Rule 77    statement -> NAME MINEQ NUMBER SEMI
Rule 78    statement -> NAME PLUSEQ NUMBER
Rule 79    statement -> NAME MINEQ NUMBER
Rule 80    expression -> MINUS expression
Rule 81    expression -> LPAREN expression RPAREN
Rule 82    expression -> NUMBER
Rule 83    expression -> STRING
Rule 84    expression -> NAME
Rule 85    expression -> TRUE
Rule 86    expression -> FALSE

Terminals, with rules where they appear

ALLTITLES            : 48
ALLTXT               : 43
ARRAY                : 14
CAPACITY             : 4 44
COMMA                : 9 13 16 17 29 32 58
COMMENT              : 
COMMENTS             : 18
CONCAT               : 11 12
DECR                 : 73 75
DEFINE               : 59
DIVIDE               : 63
DOTE                 : 4 13 15 16 17 43 44 47 48 49 50 51 52 53
ELSE                 : 21 22 23
ELSEIF               : 21
END                  : 39 40 41 42
EQUALS               : 5 6 7 14 53 54 59
ET                   : 70
FALSE                : 86
FETCH                : 49
FILTER               : 47
FOR                  : 9
FRETURN              : 41 42
FUNCTION             : 39 40 41 42
GET                  : 17
GETALL               : 16
HTML                 : 50
IF                   : 19 20 21 22 23 24
INCLUDE              : 13
INCR                 : 72 74
INFF                 : 33 67
ISEQUAL              : 68
LACC                 : 8 9 20 21 21 21 22 22 23 23 45 46
LPAREN               : 4 9 13 14 15 16 17 25 27 30 39 40 41 42 43 44 47 48 49 50 51 52 53 55 56 81
MINEQ                : 77 79
MINUS                : 61 80
NAME                 : 4 5 6 7 13 13 14 16 16 17 17 31 32 39 40 41 41 42 42 43 44 45 46 47 48 49 50 51 52 53 53 55 56 59 72 73 74 75 76 77 78 79 84
NEWLINE              : 15
NOTEQUAL             : 69
NUMBER               : 15 76 77 78 79 82
OU                   : 71
PLUS                 : 60
PLUSEQ               : 76 78
PRINT                : 12 25 26 27 30
RACC                 : 8 9 20 21 21 21 22 22 23 23 45 46
RETURN               : 38
RPAREN               : 4 9 13 14 15 16 17 25 27 30 39 40 41 42 43 44 47 48 49 50 51 52 53 55 56 81
SCAN                 : 52 53
SEMI                 : 5 13 14 15 16 17 25 26 27 30 37 38 43 44 45 46 47 48 49 50 51 52 53 54 55 56 59 72 73 76 77
START                : 39 40 41 42
STRING               : 13 16 17 26 46 47 51 83
SUP                  : 34 66
TABLEID              : 51
THEN                 : 19 20 21 21 22 23 24
TIMES                : 62
TO                   : 9
TRUE                 : 85
WHILE                : 8
and                  : 35 65
error                : 
or                   : 36 64

Nonterminals, with rules where they appear

bloc                 : 1 2 8 9 20 21 21 21 22 22 23 23 39 40 41 42
expression           : 5 6 8 9 10 11 19 20 21 21 22 25 28 29 33 34 35 36 37 38 45 57 58 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 80 81
param_call           : 54 56 58
params               : 32 40 42 54
print_params         : 29 30
start                : 0
statement            : 2 3 7 9 9 11 12 19 23 24 24 27 33 34 35 36

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    NUMBER          reduce using rule 3 (bloc -> statement .)
    COMMENTS        reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    RETURN          reduce using rule 3 (bloc -> statement .)
    FUNCTION        reduce using rule 3 (bloc -> statement .)
    DEFINE          reduce using rule 3 (bloc -> statement .)
    MINUS           reduce using rule 3 (bloc -> statement .)
    LPAREN          reduce using rule 3 (bloc -> statement .)
    STRING          reduce using rule 3 (bloc -> statement .)
    TRUE            reduce using rule 3 (bloc -> statement .)
    FALSE           reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    LACC            reduce using rule 3 (bloc -> statement .)
    END             reduce using rule 3 (bloc -> statement .)


state 4

    (5) statement -> NAME . EQUALS expression SEMI
    (6) statement -> NAME . EQUALS expression
    (7) statement -> NAME . EQUALS statement
    (13) statement -> NAME . DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> NAME . EQUALS ARRAY LPAREN RPAREN SEMI
    (16) statement -> NAME . DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> NAME . DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (43) statement -> NAME . DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> NAME . RACC expression LACC SEMI
    (46) statement -> NAME . RACC STRING LACC SEMI
    (47) statement -> NAME . DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> NAME . DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> NAME . DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> NAME . DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> NAME . DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> NAME . DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> NAME . EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (55) statement -> NAME . LPAREN RPAREN SEMI
    (56) statement -> NAME . LPAREN param_call RPAREN SEMI
    (72) statement -> NAME . INCR SEMI
    (73) statement -> NAME . DECR SEMI
    (74) statement -> NAME . INCR
    (75) statement -> NAME . DECR
    (76) statement -> NAME . PLUSEQ NUMBER SEMI
    (77) statement -> NAME . MINEQ NUMBER SEMI
    (78) statement -> NAME . PLUSEQ NUMBER
    (79) statement -> NAME . MINEQ NUMBER
    (4) expression -> NAME . DOTE CAPACITY LPAREN RPAREN
    (44) expression -> NAME . DOTE CAPACITY LPAREN RPAREN SEMI
    (84) expression -> NAME .
    (31) params -> NAME .
    (32) params -> NAME . COMMA params

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    EQUALS          shift and go to state 22
    DOTE            shift and go to state 23
    RACC            shift and go to state 26
    LPAREN          shift and go to state 24
    INCR            shift and go to state 27
    DECR            shift and go to state 28
    PLUSEQ          shift and go to state 29
    MINEQ           shift and go to state 30
    CONCAT          reduce using rule 84 (expression -> NAME .)
    INFF            reduce using rule 84 (expression -> NAME .)
    SUP             reduce using rule 84 (expression -> NAME .)
    and             reduce using rule 84 (expression -> NAME .)
    or              reduce using rule 84 (expression -> NAME .)
    SEMI            reduce using rule 84 (expression -> NAME .)
    PLUS            reduce using rule 84 (expression -> NAME .)
    MINUS           reduce using rule 84 (expression -> NAME .)
    TIMES           reduce using rule 84 (expression -> NAME .)
    DIVIDE          reduce using rule 84 (expression -> NAME .)
    ISEQUAL         reduce using rule 84 (expression -> NAME .)
    NOTEQUAL        reduce using rule 84 (expression -> NAME .)
    ET              reduce using rule 84 (expression -> NAME .)
    OU              reduce using rule 84 (expression -> NAME .)
    NAME            reduce using rule 84 (expression -> NAME .)
    WHILE           reduce using rule 84 (expression -> NAME .)
    FOR             reduce using rule 84 (expression -> NAME .)
    PRINT           reduce using rule 84 (expression -> NAME .)
    NUMBER          reduce using rule 84 (expression -> NAME .)
    COMMENTS        reduce using rule 84 (expression -> NAME .)
    IF              reduce using rule 84 (expression -> NAME .)
    RETURN          reduce using rule 84 (expression -> NAME .)
    FUNCTION        reduce using rule 84 (expression -> NAME .)
    DEFINE          reduce using rule 84 (expression -> NAME .)
    STRING          reduce using rule 84 (expression -> NAME .)
    TRUE            reduce using rule 84 (expression -> NAME .)
    FALSE           reduce using rule 84 (expression -> NAME .)
    $end            reduce using rule 84 (expression -> NAME .)
    THEN            reduce using rule 84 (expression -> NAME .)
    TO              reduce using rule 84 (expression -> NAME .)
    RPAREN          reduce using rule 84 (expression -> NAME .)
    LACC            reduce using rule 84 (expression -> NAME .)
    END             reduce using rule 84 (expression -> NAME .)
    COMMA           shift and go to state 25

  ! LPAREN          [ reduce using rule 84 (expression -> NAME .) ]
  ! EQUALS          [ reduce using rule 31 (params -> NAME .) ]


state 5

    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! shift/reduce conflict for MINUS resolved as shift
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    CONCAT          shift and go to state 31
    INFF            shift and go to state 32
    SUP             shift and go to state 33
    and             shift and go to state 34
    or              shift and go to state 35
    SEMI            shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44

  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]


state 6

    (8) statement -> WHILE . expression RACC bloc LACC
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 45

state 7

    (9) statement -> FOR . LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC

    LPAREN          shift and go to state 48


state 8

    (81) expression -> LPAREN . expression RPAREN
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 49

state 9

    (12) statement -> PRINT . CONCAT statement
    (25) statement -> PRINT . LPAREN expression RPAREN SEMI
    (26) statement -> PRINT . STRING SEMI
    (27) statement -> PRINT . LPAREN statement RPAREN SEMI
    (30) statement -> PRINT . LPAREN print_params RPAREN SEMI

    CONCAT          shift and go to state 50
    LPAREN          shift and go to state 51
    STRING          shift and go to state 52


state 10

    (83) expression -> STRING .

    CONCAT          reduce using rule 83 (expression -> STRING .)
    INFF            reduce using rule 83 (expression -> STRING .)
    SUP             reduce using rule 83 (expression -> STRING .)
    and             reduce using rule 83 (expression -> STRING .)
    or              reduce using rule 83 (expression -> STRING .)
    SEMI            reduce using rule 83 (expression -> STRING .)
    PLUS            reduce using rule 83 (expression -> STRING .)
    MINUS           reduce using rule 83 (expression -> STRING .)
    TIMES           reduce using rule 83 (expression -> STRING .)
    DIVIDE          reduce using rule 83 (expression -> STRING .)
    ISEQUAL         reduce using rule 83 (expression -> STRING .)
    NOTEQUAL        reduce using rule 83 (expression -> STRING .)
    ET              reduce using rule 83 (expression -> STRING .)
    OU              reduce using rule 83 (expression -> STRING .)
    NAME            reduce using rule 83 (expression -> STRING .)
    WHILE           reduce using rule 83 (expression -> STRING .)
    FOR             reduce using rule 83 (expression -> STRING .)
    PRINT           reduce using rule 83 (expression -> STRING .)
    NUMBER          reduce using rule 83 (expression -> STRING .)
    COMMENTS        reduce using rule 83 (expression -> STRING .)
    IF              reduce using rule 83 (expression -> STRING .)
    RETURN          reduce using rule 83 (expression -> STRING .)
    FUNCTION        reduce using rule 83 (expression -> STRING .)
    DEFINE          reduce using rule 83 (expression -> STRING .)
    LPAREN          reduce using rule 83 (expression -> STRING .)
    STRING          reduce using rule 83 (expression -> STRING .)
    TRUE            reduce using rule 83 (expression -> STRING .)
    FALSE           reduce using rule 83 (expression -> STRING .)
    $end            reduce using rule 83 (expression -> STRING .)
    RACC            reduce using rule 83 (expression -> STRING .)
    RPAREN          reduce using rule 83 (expression -> STRING .)
    THEN            reduce using rule 83 (expression -> STRING .)
    TO              reduce using rule 83 (expression -> STRING .)
    LACC            reduce using rule 83 (expression -> STRING .)
    END             reduce using rule 83 (expression -> STRING .)
    COMMA           reduce using rule 83 (expression -> STRING .)


state 11

    (15) statement -> NUMBER . DOTE NEWLINE LPAREN RPAREN SEMI
    (82) expression -> NUMBER .

    DOTE            shift and go to state 53
    CONCAT          reduce using rule 82 (expression -> NUMBER .)
    INFF            reduce using rule 82 (expression -> NUMBER .)
    SUP             reduce using rule 82 (expression -> NUMBER .)
    and             reduce using rule 82 (expression -> NUMBER .)
    or              reduce using rule 82 (expression -> NUMBER .)
    SEMI            reduce using rule 82 (expression -> NUMBER .)
    PLUS            reduce using rule 82 (expression -> NUMBER .)
    MINUS           reduce using rule 82 (expression -> NUMBER .)
    TIMES           reduce using rule 82 (expression -> NUMBER .)
    DIVIDE          reduce using rule 82 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 82 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 82 (expression -> NUMBER .)
    ET              reduce using rule 82 (expression -> NUMBER .)
    OU              reduce using rule 82 (expression -> NUMBER .)
    NAME            reduce using rule 82 (expression -> NUMBER .)
    WHILE           reduce using rule 82 (expression -> NUMBER .)
    FOR             reduce using rule 82 (expression -> NUMBER .)
    PRINT           reduce using rule 82 (expression -> NUMBER .)
    NUMBER          reduce using rule 82 (expression -> NUMBER .)
    COMMENTS        reduce using rule 82 (expression -> NUMBER .)
    IF              reduce using rule 82 (expression -> NUMBER .)
    RETURN          reduce using rule 82 (expression -> NUMBER .)
    FUNCTION        reduce using rule 82 (expression -> NUMBER .)
    DEFINE          reduce using rule 82 (expression -> NUMBER .)
    LPAREN          reduce using rule 82 (expression -> NUMBER .)
    STRING          reduce using rule 82 (expression -> NUMBER .)
    TRUE            reduce using rule 82 (expression -> NUMBER .)
    FALSE           reduce using rule 82 (expression -> NUMBER .)
    $end            reduce using rule 82 (expression -> NUMBER .)
    THEN            reduce using rule 82 (expression -> NUMBER .)
    TO              reduce using rule 82 (expression -> NUMBER .)
    RPAREN          reduce using rule 82 (expression -> NUMBER .)
    LACC            reduce using rule 82 (expression -> NUMBER .)
    END             reduce using rule 82 (expression -> NUMBER .)


state 12

    (18) statement -> COMMENTS .

    NAME            reduce using rule 18 (statement -> COMMENTS .)
    WHILE           reduce using rule 18 (statement -> COMMENTS .)
    FOR             reduce using rule 18 (statement -> COMMENTS .)
    PRINT           reduce using rule 18 (statement -> COMMENTS .)
    NUMBER          reduce using rule 18 (statement -> COMMENTS .)
    COMMENTS        reduce using rule 18 (statement -> COMMENTS .)
    IF              reduce using rule 18 (statement -> COMMENTS .)
    RETURN          reduce using rule 18 (statement -> COMMENTS .)
    FUNCTION        reduce using rule 18 (statement -> COMMENTS .)
    DEFINE          reduce using rule 18 (statement -> COMMENTS .)
    MINUS           reduce using rule 18 (statement -> COMMENTS .)
    LPAREN          reduce using rule 18 (statement -> COMMENTS .)
    STRING          reduce using rule 18 (statement -> COMMENTS .)
    TRUE            reduce using rule 18 (statement -> COMMENTS .)
    FALSE           reduce using rule 18 (statement -> COMMENTS .)
    $end            reduce using rule 18 (statement -> COMMENTS .)
    THEN            reduce using rule 18 (statement -> COMMENTS .)
    TO              reduce using rule 18 (statement -> COMMENTS .)
    RPAREN          reduce using rule 18 (statement -> COMMENTS .)
    LACC            reduce using rule 18 (statement -> COMMENTS .)
    END             reduce using rule 18 (statement -> COMMENTS .)


state 13

    (19) statement -> IF . expression THEN statement
    (20) statement -> IF . expression THEN RACC bloc LACC
    (21) statement -> IF . expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> IF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> IF . statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> IF . statement THEN statement
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 56
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 57
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 54
    statement                      shift and go to state 55
    params                         shift and go to state 16

state 14

    (38) statement -> RETURN . expression SEMI
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 58

state 15

    (39) statement -> FUNCTION . NAME LPAREN RPAREN START bloc END
    (40) statement -> FUNCTION . NAME LPAREN params RPAREN START bloc END
    (41) statement -> FUNCTION . NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> FUNCTION . NAME LPAREN params RPAREN FRETURN NAME START bloc END

    NAME            shift and go to state 59


state 16

    (54) statement -> params . EQUALS param_call SEMI

    EQUALS          shift and go to state 60


state 17

    (59) statement -> DEFINE . NAME EQUALS expression SEMI

    NAME            shift and go to state 61


state 18

    (80) expression -> MINUS . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 62

state 19

    (85) expression -> TRUE .

    CONCAT          reduce using rule 85 (expression -> TRUE .)
    INFF            reduce using rule 85 (expression -> TRUE .)
    SUP             reduce using rule 85 (expression -> TRUE .)
    and             reduce using rule 85 (expression -> TRUE .)
    or              reduce using rule 85 (expression -> TRUE .)
    SEMI            reduce using rule 85 (expression -> TRUE .)
    PLUS            reduce using rule 85 (expression -> TRUE .)
    MINUS           reduce using rule 85 (expression -> TRUE .)
    TIMES           reduce using rule 85 (expression -> TRUE .)
    DIVIDE          reduce using rule 85 (expression -> TRUE .)
    ISEQUAL         reduce using rule 85 (expression -> TRUE .)
    NOTEQUAL        reduce using rule 85 (expression -> TRUE .)
    ET              reduce using rule 85 (expression -> TRUE .)
    OU              reduce using rule 85 (expression -> TRUE .)
    NAME            reduce using rule 85 (expression -> TRUE .)
    WHILE           reduce using rule 85 (expression -> TRUE .)
    FOR             reduce using rule 85 (expression -> TRUE .)
    PRINT           reduce using rule 85 (expression -> TRUE .)
    NUMBER          reduce using rule 85 (expression -> TRUE .)
    COMMENTS        reduce using rule 85 (expression -> TRUE .)
    IF              reduce using rule 85 (expression -> TRUE .)
    RETURN          reduce using rule 85 (expression -> TRUE .)
    FUNCTION        reduce using rule 85 (expression -> TRUE .)
    DEFINE          reduce using rule 85 (expression -> TRUE .)
    LPAREN          reduce using rule 85 (expression -> TRUE .)
    STRING          reduce using rule 85 (expression -> TRUE .)
    TRUE            reduce using rule 85 (expression -> TRUE .)
    FALSE           reduce using rule 85 (expression -> TRUE .)
    $end            reduce using rule 85 (expression -> TRUE .)
    RACC            reduce using rule 85 (expression -> TRUE .)
    RPAREN          reduce using rule 85 (expression -> TRUE .)
    THEN            reduce using rule 85 (expression -> TRUE .)
    TO              reduce using rule 85 (expression -> TRUE .)
    LACC            reduce using rule 85 (expression -> TRUE .)
    END             reduce using rule 85 (expression -> TRUE .)
    COMMA           reduce using rule 85 (expression -> TRUE .)


state 20

    (86) expression -> FALSE .

    CONCAT          reduce using rule 86 (expression -> FALSE .)
    INFF            reduce using rule 86 (expression -> FALSE .)
    SUP             reduce using rule 86 (expression -> FALSE .)
    and             reduce using rule 86 (expression -> FALSE .)
    or              reduce using rule 86 (expression -> FALSE .)
    SEMI            reduce using rule 86 (expression -> FALSE .)
    PLUS            reduce using rule 86 (expression -> FALSE .)
    MINUS           reduce using rule 86 (expression -> FALSE .)
    TIMES           reduce using rule 86 (expression -> FALSE .)
    DIVIDE          reduce using rule 86 (expression -> FALSE .)
    ISEQUAL         reduce using rule 86 (expression -> FALSE .)
    NOTEQUAL        reduce using rule 86 (expression -> FALSE .)
    ET              reduce using rule 86 (expression -> FALSE .)
    OU              reduce using rule 86 (expression -> FALSE .)
    NAME            reduce using rule 86 (expression -> FALSE .)
    WHILE           reduce using rule 86 (expression -> FALSE .)
    FOR             reduce using rule 86 (expression -> FALSE .)
    PRINT           reduce using rule 86 (expression -> FALSE .)
    NUMBER          reduce using rule 86 (expression -> FALSE .)
    COMMENTS        reduce using rule 86 (expression -> FALSE .)
    IF              reduce using rule 86 (expression -> FALSE .)
    RETURN          reduce using rule 86 (expression -> FALSE .)
    FUNCTION        reduce using rule 86 (expression -> FALSE .)
    DEFINE          reduce using rule 86 (expression -> FALSE .)
    LPAREN          reduce using rule 86 (expression -> FALSE .)
    STRING          reduce using rule 86 (expression -> FALSE .)
    TRUE            reduce using rule 86 (expression -> FALSE .)
    FALSE           reduce using rule 86 (expression -> FALSE .)
    $end            reduce using rule 86 (expression -> FALSE .)
    RACC            reduce using rule 86 (expression -> FALSE .)
    RPAREN          reduce using rule 86 (expression -> FALSE .)
    THEN            reduce using rule 86 (expression -> FALSE .)
    TO              reduce using rule 86 (expression -> FALSE .)
    LACC            reduce using rule 86 (expression -> FALSE .)
    END             reduce using rule 86 (expression -> FALSE .)
    COMMA           reduce using rule 86 (expression -> FALSE .)


state 21

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    NUMBER          reduce using rule 2 (bloc -> bloc statement .)
    COMMENTS        reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    RETURN          reduce using rule 2 (bloc -> bloc statement .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement .)
    DEFINE          reduce using rule 2 (bloc -> bloc statement .)
    MINUS           reduce using rule 2 (bloc -> bloc statement .)
    LPAREN          reduce using rule 2 (bloc -> bloc statement .)
    STRING          reduce using rule 2 (bloc -> bloc statement .)
    TRUE            reduce using rule 2 (bloc -> bloc statement .)
    FALSE           reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    LACC            reduce using rule 2 (bloc -> bloc statement .)
    END             reduce using rule 2 (bloc -> bloc statement .)


state 22

    (5) statement -> NAME EQUALS . expression SEMI
    (6) statement -> NAME EQUALS . expression
    (7) statement -> NAME EQUALS . statement
    (14) statement -> NAME EQUALS . ARRAY LPAREN RPAREN SEMI
    (53) statement -> NAME EQUALS . NAME DOTE SCAN LPAREN RPAREN SEMI
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    ARRAY           shift and go to state 66
    NAME            shift and go to state 63
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 57
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 64
    statement                      shift and go to state 65
    params                         shift and go to state 16

state 23

    (13) statement -> NAME DOTE . INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (16) statement -> NAME DOTE . GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> NAME DOTE . GET LPAREN NAME COMMA STRING RPAREN SEMI
    (43) statement -> NAME DOTE . ALLTXT LPAREN RPAREN SEMI
    (47) statement -> NAME DOTE . FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> NAME DOTE . ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> NAME DOTE . FETCH LPAREN RPAREN SEMI
    (50) statement -> NAME DOTE . HTML LPAREN RPAREN SEMI
    (51) statement -> NAME DOTE . TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> NAME DOTE . SCAN LPAREN RPAREN SEMI
    (4) expression -> NAME DOTE . CAPACITY LPAREN RPAREN
    (44) expression -> NAME DOTE . CAPACITY LPAREN RPAREN SEMI

    INCLUDE         shift and go to state 67
    GETALL          shift and go to state 68
    GET             shift and go to state 69
    ALLTXT          shift and go to state 70
    FILTER          shift and go to state 71
    ALLTITLES       shift and go to state 72
    FETCH           shift and go to state 73
    HTML            shift and go to state 74
    TABLEID         shift and go to state 75
    SCAN            shift and go to state 76
    CAPACITY        shift and go to state 77


state 24

    (55) statement -> NAME LPAREN . RPAREN SEMI
    (56) statement -> NAME LPAREN . param_call RPAREN SEMI
    (57) param_call -> . expression
    (58) param_call -> . expression COMMA param_call
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    RPAREN          shift and go to state 78
    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    param_call                     shift and go to state 79
    expression                     shift and go to state 80

state 25

    (32) params -> NAME COMMA . params
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 81

    params                         shift and go to state 82

state 26

    (45) statement -> NAME RACC . expression LACC SEMI
    (46) statement -> NAME RACC . STRING LACC SEMI
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    STRING          shift and go to state 84
    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 83

state 27

    (72) statement -> NAME INCR . SEMI
    (74) statement -> NAME INCR .

    SEMI            shift and go to state 85
    NAME            reduce using rule 74 (statement -> NAME INCR .)
    WHILE           reduce using rule 74 (statement -> NAME INCR .)
    FOR             reduce using rule 74 (statement -> NAME INCR .)
    PRINT           reduce using rule 74 (statement -> NAME INCR .)
    NUMBER          reduce using rule 74 (statement -> NAME INCR .)
    COMMENTS        reduce using rule 74 (statement -> NAME INCR .)
    IF              reduce using rule 74 (statement -> NAME INCR .)
    RETURN          reduce using rule 74 (statement -> NAME INCR .)
    FUNCTION        reduce using rule 74 (statement -> NAME INCR .)
    DEFINE          reduce using rule 74 (statement -> NAME INCR .)
    MINUS           reduce using rule 74 (statement -> NAME INCR .)
    LPAREN          reduce using rule 74 (statement -> NAME INCR .)
    STRING          reduce using rule 74 (statement -> NAME INCR .)
    TRUE            reduce using rule 74 (statement -> NAME INCR .)
    FALSE           reduce using rule 74 (statement -> NAME INCR .)
    $end            reduce using rule 74 (statement -> NAME INCR .)
    THEN            reduce using rule 74 (statement -> NAME INCR .)
    TO              reduce using rule 74 (statement -> NAME INCR .)
    RPAREN          reduce using rule 74 (statement -> NAME INCR .)
    LACC            reduce using rule 74 (statement -> NAME INCR .)
    END             reduce using rule 74 (statement -> NAME INCR .)


state 28

    (73) statement -> NAME DECR . SEMI
    (75) statement -> NAME DECR .

    SEMI            shift and go to state 86
    NAME            reduce using rule 75 (statement -> NAME DECR .)
    WHILE           reduce using rule 75 (statement -> NAME DECR .)
    FOR             reduce using rule 75 (statement -> NAME DECR .)
    PRINT           reduce using rule 75 (statement -> NAME DECR .)
    NUMBER          reduce using rule 75 (statement -> NAME DECR .)
    COMMENTS        reduce using rule 75 (statement -> NAME DECR .)
    IF              reduce using rule 75 (statement -> NAME DECR .)
    RETURN          reduce using rule 75 (statement -> NAME DECR .)
    FUNCTION        reduce using rule 75 (statement -> NAME DECR .)
    DEFINE          reduce using rule 75 (statement -> NAME DECR .)
    MINUS           reduce using rule 75 (statement -> NAME DECR .)
    LPAREN          reduce using rule 75 (statement -> NAME DECR .)
    STRING          reduce using rule 75 (statement -> NAME DECR .)
    TRUE            reduce using rule 75 (statement -> NAME DECR .)
    FALSE           reduce using rule 75 (statement -> NAME DECR .)
    $end            reduce using rule 75 (statement -> NAME DECR .)
    THEN            reduce using rule 75 (statement -> NAME DECR .)
    TO              reduce using rule 75 (statement -> NAME DECR .)
    RPAREN          reduce using rule 75 (statement -> NAME DECR .)
    LACC            reduce using rule 75 (statement -> NAME DECR .)
    END             reduce using rule 75 (statement -> NAME DECR .)


state 29

    (76) statement -> NAME PLUSEQ . NUMBER SEMI
    (78) statement -> NAME PLUSEQ . NUMBER

    NUMBER          shift and go to state 87


state 30

    (77) statement -> NAME MINEQ . NUMBER SEMI
    (79) statement -> NAME MINEQ . NUMBER

    NUMBER          shift and go to state 88


state 31

    (11) statement -> expression CONCAT . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 89
    params                         shift and go to state 16

state 32

    (33) statement -> expression INFF . statement
    (67) expression -> expression INFF . expression
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 90
    statement                      shift and go to state 91
    params                         shift and go to state 16

state 33

    (34) statement -> expression SUP . statement
    (66) expression -> expression SUP . expression
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 92
    statement                      shift and go to state 93
    params                         shift and go to state 16

state 34

    (35) statement -> expression and . statement
    (65) expression -> expression and . expression
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 94
    statement                      shift and go to state 95
    params                         shift and go to state 16

state 35

    (36) statement -> expression or . statement
    (64) expression -> expression or . expression
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 96
    statement                      shift and go to state 97
    params                         shift and go to state 16

state 36

    (37) statement -> expression SEMI .

    NAME            reduce using rule 37 (statement -> expression SEMI .)
    WHILE           reduce using rule 37 (statement -> expression SEMI .)
    FOR             reduce using rule 37 (statement -> expression SEMI .)
    PRINT           reduce using rule 37 (statement -> expression SEMI .)
    NUMBER          reduce using rule 37 (statement -> expression SEMI .)
    COMMENTS        reduce using rule 37 (statement -> expression SEMI .)
    IF              reduce using rule 37 (statement -> expression SEMI .)
    RETURN          reduce using rule 37 (statement -> expression SEMI .)
    FUNCTION        reduce using rule 37 (statement -> expression SEMI .)
    DEFINE          reduce using rule 37 (statement -> expression SEMI .)
    MINUS           reduce using rule 37 (statement -> expression SEMI .)
    LPAREN          reduce using rule 37 (statement -> expression SEMI .)
    STRING          reduce using rule 37 (statement -> expression SEMI .)
    TRUE            reduce using rule 37 (statement -> expression SEMI .)
    FALSE           reduce using rule 37 (statement -> expression SEMI .)
    $end            reduce using rule 37 (statement -> expression SEMI .)
    THEN            reduce using rule 37 (statement -> expression SEMI .)
    TO              reduce using rule 37 (statement -> expression SEMI .)
    RPAREN          reduce using rule 37 (statement -> expression SEMI .)
    LACC            reduce using rule 37 (statement -> expression SEMI .)
    END             reduce using rule 37 (statement -> expression SEMI .)


state 37

    (60) expression -> expression PLUS . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 98

state 38

    (61) expression -> expression MINUS . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 99

state 39

    (62) expression -> expression TIMES . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 100

state 40

    (63) expression -> expression DIVIDE . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 101

state 41

    (68) expression -> expression ISEQUAL . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 102

state 42

    (69) expression -> expression NOTEQUAL . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 103

state 43

    (70) expression -> expression ET . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 104

state 44

    (71) expression -> expression OU . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 105

state 45

    (8) statement -> WHILE expression . RACC bloc LACC
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    RACC            shift and go to state 106
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 46

    (4) expression -> NAME . DOTE CAPACITY LPAREN RPAREN
    (44) expression -> NAME . DOTE CAPACITY LPAREN RPAREN SEMI
    (84) expression -> NAME .

    DOTE            shift and go to state 111
    RACC            reduce using rule 84 (expression -> NAME .)
    PLUS            reduce using rule 84 (expression -> NAME .)
    MINUS           reduce using rule 84 (expression -> NAME .)
    TIMES           reduce using rule 84 (expression -> NAME .)
    DIVIDE          reduce using rule 84 (expression -> NAME .)
    or              reduce using rule 84 (expression -> NAME .)
    and             reduce using rule 84 (expression -> NAME .)
    SUP             reduce using rule 84 (expression -> NAME .)
    INFF            reduce using rule 84 (expression -> NAME .)
    ISEQUAL         reduce using rule 84 (expression -> NAME .)
    NOTEQUAL        reduce using rule 84 (expression -> NAME .)
    ET              reduce using rule 84 (expression -> NAME .)
    OU              reduce using rule 84 (expression -> NAME .)
    RPAREN          reduce using rule 84 (expression -> NAME .)
    SEMI            reduce using rule 84 (expression -> NAME .)
    CONCAT          reduce using rule 84 (expression -> NAME .)
    NAME            reduce using rule 84 (expression -> NAME .)
    WHILE           reduce using rule 84 (expression -> NAME .)
    FOR             reduce using rule 84 (expression -> NAME .)
    PRINT           reduce using rule 84 (expression -> NAME .)
    NUMBER          reduce using rule 84 (expression -> NAME .)
    COMMENTS        reduce using rule 84 (expression -> NAME .)
    IF              reduce using rule 84 (expression -> NAME .)
    RETURN          reduce using rule 84 (expression -> NAME .)
    FUNCTION        reduce using rule 84 (expression -> NAME .)
    DEFINE          reduce using rule 84 (expression -> NAME .)
    LPAREN          reduce using rule 84 (expression -> NAME .)
    STRING          reduce using rule 84 (expression -> NAME .)
    TRUE            reduce using rule 84 (expression -> NAME .)
    FALSE           reduce using rule 84 (expression -> NAME .)
    $end            reduce using rule 84 (expression -> NAME .)
    THEN            reduce using rule 84 (expression -> NAME .)
    TO              reduce using rule 84 (expression -> NAME .)
    LACC            reduce using rule 84 (expression -> NAME .)
    END             reduce using rule 84 (expression -> NAME .)
    COMMA           reduce using rule 84 (expression -> NAME .)


state 47

    (82) expression -> NUMBER .

    RACC            reduce using rule 82 (expression -> NUMBER .)
    PLUS            reduce using rule 82 (expression -> NUMBER .)
    MINUS           reduce using rule 82 (expression -> NUMBER .)
    TIMES           reduce using rule 82 (expression -> NUMBER .)
    DIVIDE          reduce using rule 82 (expression -> NUMBER .)
    or              reduce using rule 82 (expression -> NUMBER .)
    and             reduce using rule 82 (expression -> NUMBER .)
    SUP             reduce using rule 82 (expression -> NUMBER .)
    INFF            reduce using rule 82 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 82 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 82 (expression -> NUMBER .)
    ET              reduce using rule 82 (expression -> NUMBER .)
    OU              reduce using rule 82 (expression -> NUMBER .)
    RPAREN          reduce using rule 82 (expression -> NUMBER .)
    SEMI            reduce using rule 82 (expression -> NUMBER .)
    CONCAT          reduce using rule 82 (expression -> NUMBER .)
    NAME            reduce using rule 82 (expression -> NUMBER .)
    WHILE           reduce using rule 82 (expression -> NUMBER .)
    FOR             reduce using rule 82 (expression -> NUMBER .)
    PRINT           reduce using rule 82 (expression -> NUMBER .)
    NUMBER          reduce using rule 82 (expression -> NUMBER .)
    COMMENTS        reduce using rule 82 (expression -> NUMBER .)
    IF              reduce using rule 82 (expression -> NUMBER .)
    RETURN          reduce using rule 82 (expression -> NUMBER .)
    FUNCTION        reduce using rule 82 (expression -> NUMBER .)
    DEFINE          reduce using rule 82 (expression -> NUMBER .)
    LPAREN          reduce using rule 82 (expression -> NUMBER .)
    STRING          reduce using rule 82 (expression -> NUMBER .)
    TRUE            reduce using rule 82 (expression -> NUMBER .)
    FALSE           reduce using rule 82 (expression -> NUMBER .)
    $end            reduce using rule 82 (expression -> NUMBER .)
    THEN            reduce using rule 82 (expression -> NUMBER .)
    TO              reduce using rule 82 (expression -> NUMBER .)
    LACC            reduce using rule 82 (expression -> NUMBER .)
    END             reduce using rule 82 (expression -> NUMBER .)
    COMMA           reduce using rule 82 (expression -> NUMBER .)


state 48

    (9) statement -> FOR LPAREN . statement TO expression COMMA statement RPAREN RACC bloc LACC
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 112
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 49

    (81) expression -> LPAREN expression . RPAREN
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 50

    (12) statement -> PRINT CONCAT . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 114
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 51

    (25) statement -> PRINT LPAREN . expression RPAREN SEMI
    (27) statement -> PRINT LPAREN . statement RPAREN SEMI
    (30) statement -> PRINT LPAREN . print_params RPAREN SEMI
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (28) print_params -> . expression
    (29) print_params -> . expression COMMA print_params
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 56
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 57
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 115
    statement                      shift and go to state 116
    print_params                   shift and go to state 117
    params                         shift and go to state 16

state 52

    (26) statement -> PRINT STRING . SEMI

    SEMI            shift and go to state 118


state 53

    (15) statement -> NUMBER DOTE . NEWLINE LPAREN RPAREN SEMI

    NEWLINE         shift and go to state 119


state 54

    (19) statement -> IF expression . THEN statement
    (20) statement -> IF expression . THEN RACC bloc LACC
    (21) statement -> IF expression . THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> IF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI

  ! shift/reduce conflict for THEN resolved as shift
    THEN            shift and go to state 120
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 121
    and             shift and go to state 122
    SUP             shift and go to state 123
    INFF            shift and go to state 124
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44
    CONCAT          shift and go to state 31
    SEMI            shift and go to state 36

  ! THEN            [ reduce using rule 10 (statement -> expression .) ]


state 55

    (23) statement -> IF statement . THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> IF statement . THEN statement

    THEN            shift and go to state 125


state 56

    (4) expression -> NAME . DOTE CAPACITY LPAREN RPAREN
    (44) expression -> NAME . DOTE CAPACITY LPAREN RPAREN SEMI
    (84) expression -> NAME .
    (5) statement -> NAME . EQUALS expression SEMI
    (6) statement -> NAME . EQUALS expression
    (7) statement -> NAME . EQUALS statement
    (13) statement -> NAME . DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> NAME . EQUALS ARRAY LPAREN RPAREN SEMI
    (16) statement -> NAME . DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> NAME . DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (43) statement -> NAME . DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> NAME . RACC expression LACC SEMI
    (46) statement -> NAME . RACC STRING LACC SEMI
    (47) statement -> NAME . DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> NAME . DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> NAME . DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> NAME . DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> NAME . DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> NAME . DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> NAME . EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (55) statement -> NAME . LPAREN RPAREN SEMI
    (56) statement -> NAME . LPAREN param_call RPAREN SEMI
    (72) statement -> NAME . INCR SEMI
    (73) statement -> NAME . DECR SEMI
    (74) statement -> NAME . INCR
    (75) statement -> NAME . DECR
    (76) statement -> NAME . PLUSEQ NUMBER SEMI
    (77) statement -> NAME . MINEQ NUMBER SEMI
    (78) statement -> NAME . PLUSEQ NUMBER
    (79) statement -> NAME . MINEQ NUMBER
    (31) params -> NAME .
    (32) params -> NAME . COMMA params

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    DOTE            shift and go to state 126
    THEN            reduce using rule 84 (expression -> NAME .)
    PLUS            reduce using rule 84 (expression -> NAME .)
    MINUS           reduce using rule 84 (expression -> NAME .)
    TIMES           reduce using rule 84 (expression -> NAME .)
    DIVIDE          reduce using rule 84 (expression -> NAME .)
    or              reduce using rule 84 (expression -> NAME .)
    and             reduce using rule 84 (expression -> NAME .)
    SUP             reduce using rule 84 (expression -> NAME .)
    INFF            reduce using rule 84 (expression -> NAME .)
    ISEQUAL         reduce using rule 84 (expression -> NAME .)
    NOTEQUAL        reduce using rule 84 (expression -> NAME .)
    ET              reduce using rule 84 (expression -> NAME .)
    OU              reduce using rule 84 (expression -> NAME .)
    CONCAT          reduce using rule 84 (expression -> NAME .)
    SEMI            reduce using rule 84 (expression -> NAME .)
    RPAREN          reduce using rule 84 (expression -> NAME .)
    NAME            reduce using rule 84 (expression -> NAME .)
    WHILE           reduce using rule 84 (expression -> NAME .)
    FOR             reduce using rule 84 (expression -> NAME .)
    PRINT           reduce using rule 84 (expression -> NAME .)
    NUMBER          reduce using rule 84 (expression -> NAME .)
    COMMENTS        reduce using rule 84 (expression -> NAME .)
    IF              reduce using rule 84 (expression -> NAME .)
    RETURN          reduce using rule 84 (expression -> NAME .)
    FUNCTION        reduce using rule 84 (expression -> NAME .)
    DEFINE          reduce using rule 84 (expression -> NAME .)
    STRING          reduce using rule 84 (expression -> NAME .)
    TRUE            reduce using rule 84 (expression -> NAME .)
    FALSE           reduce using rule 84 (expression -> NAME .)
    $end            reduce using rule 84 (expression -> NAME .)
    TO              reduce using rule 84 (expression -> NAME .)
    LACC            reduce using rule 84 (expression -> NAME .)
    END             reduce using rule 84 (expression -> NAME .)
    EQUALS          shift and go to state 22
    RACC            shift and go to state 26
    LPAREN          shift and go to state 24
    INCR            shift and go to state 27
    DECR            shift and go to state 28
    PLUSEQ          shift and go to state 29
    MINEQ           shift and go to state 30
    COMMA           shift and go to state 25

  ! COMMA           [ reduce using rule 84 (expression -> NAME .) ]
  ! LPAREN          [ reduce using rule 84 (expression -> NAME .) ]
  ! EQUALS          [ reduce using rule 31 (params -> NAME .) ]


state 57

    (82) expression -> NUMBER .
    (15) statement -> NUMBER . DOTE NEWLINE LPAREN RPAREN SEMI

    THEN            reduce using rule 82 (expression -> NUMBER .)
    PLUS            reduce using rule 82 (expression -> NUMBER .)
    MINUS           reduce using rule 82 (expression -> NUMBER .)
    TIMES           reduce using rule 82 (expression -> NUMBER .)
    DIVIDE          reduce using rule 82 (expression -> NUMBER .)
    or              reduce using rule 82 (expression -> NUMBER .)
    and             reduce using rule 82 (expression -> NUMBER .)
    SUP             reduce using rule 82 (expression -> NUMBER .)
    INFF            reduce using rule 82 (expression -> NUMBER .)
    ISEQUAL         reduce using rule 82 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 82 (expression -> NUMBER .)
    ET              reduce using rule 82 (expression -> NUMBER .)
    OU              reduce using rule 82 (expression -> NUMBER .)
    CONCAT          reduce using rule 82 (expression -> NUMBER .)
    SEMI            reduce using rule 82 (expression -> NUMBER .)
    NAME            reduce using rule 82 (expression -> NUMBER .)
    WHILE           reduce using rule 82 (expression -> NUMBER .)
    FOR             reduce using rule 82 (expression -> NUMBER .)
    PRINT           reduce using rule 82 (expression -> NUMBER .)
    NUMBER          reduce using rule 82 (expression -> NUMBER .)
    COMMENTS        reduce using rule 82 (expression -> NUMBER .)
    IF              reduce using rule 82 (expression -> NUMBER .)
    RETURN          reduce using rule 82 (expression -> NUMBER .)
    FUNCTION        reduce using rule 82 (expression -> NUMBER .)
    DEFINE          reduce using rule 82 (expression -> NUMBER .)
    LPAREN          reduce using rule 82 (expression -> NUMBER .)
    STRING          reduce using rule 82 (expression -> NUMBER .)
    TRUE            reduce using rule 82 (expression -> NUMBER .)
    FALSE           reduce using rule 82 (expression -> NUMBER .)
    $end            reduce using rule 82 (expression -> NUMBER .)
    TO              reduce using rule 82 (expression -> NUMBER .)
    RPAREN          reduce using rule 82 (expression -> NUMBER .)
    LACC            reduce using rule 82 (expression -> NUMBER .)
    END             reduce using rule 82 (expression -> NUMBER .)
    COMMA           reduce using rule 82 (expression -> NUMBER .)
    DOTE            shift and go to state 53


state 58

    (38) statement -> RETURN expression . SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    SEMI            shift and go to state 127
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 59

    (39) statement -> FUNCTION NAME . LPAREN RPAREN START bloc END
    (40) statement -> FUNCTION NAME . LPAREN params RPAREN START bloc END
    (41) statement -> FUNCTION NAME . LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> FUNCTION NAME . LPAREN params RPAREN FRETURN NAME START bloc END

    LPAREN          shift and go to state 128


state 60

    (54) statement -> params EQUALS . param_call SEMI
    (57) param_call -> . expression
    (58) param_call -> . expression COMMA param_call
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    param_call                     shift and go to state 129
    expression                     shift and go to state 80

state 61

    (59) statement -> DEFINE NAME . EQUALS expression SEMI

    EQUALS          shift and go to state 130


state 62

    (80) expression -> MINUS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    CONCAT          reduce using rule 80 (expression -> MINUS expression .)
    INFF            reduce using rule 80 (expression -> MINUS expression .)
    SUP             reduce using rule 80 (expression -> MINUS expression .)
    and             reduce using rule 80 (expression -> MINUS expression .)
    or              reduce using rule 80 (expression -> MINUS expression .)
    SEMI            reduce using rule 80 (expression -> MINUS expression .)
    PLUS            reduce using rule 80 (expression -> MINUS expression .)
    MINUS           reduce using rule 80 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 80 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 80 (expression -> MINUS expression .)
    ET              reduce using rule 80 (expression -> MINUS expression .)
    OU              reduce using rule 80 (expression -> MINUS expression .)
    NAME            reduce using rule 80 (expression -> MINUS expression .)
    WHILE           reduce using rule 80 (expression -> MINUS expression .)
    FOR             reduce using rule 80 (expression -> MINUS expression .)
    PRINT           reduce using rule 80 (expression -> MINUS expression .)
    NUMBER          reduce using rule 80 (expression -> MINUS expression .)
    COMMENTS        reduce using rule 80 (expression -> MINUS expression .)
    IF              reduce using rule 80 (expression -> MINUS expression .)
    RETURN          reduce using rule 80 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 80 (expression -> MINUS expression .)
    DEFINE          reduce using rule 80 (expression -> MINUS expression .)
    LPAREN          reduce using rule 80 (expression -> MINUS expression .)
    STRING          reduce using rule 80 (expression -> MINUS expression .)
    TRUE            reduce using rule 80 (expression -> MINUS expression .)
    FALSE           reduce using rule 80 (expression -> MINUS expression .)
    $end            reduce using rule 80 (expression -> MINUS expression .)
    RACC            reduce using rule 80 (expression -> MINUS expression .)
    RPAREN          reduce using rule 80 (expression -> MINUS expression .)
    THEN            reduce using rule 80 (expression -> MINUS expression .)
    TO              reduce using rule 80 (expression -> MINUS expression .)
    LACC            reduce using rule 80 (expression -> MINUS expression .)
    END             reduce using rule 80 (expression -> MINUS expression .)
    COMMA           reduce using rule 80 (expression -> MINUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 80 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 80 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! or              [ shift and go to state 107 ]
  ! and             [ shift and go to state 108 ]
  ! SUP             [ shift and go to state 109 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 63

    (53) statement -> NAME EQUALS NAME . DOTE SCAN LPAREN RPAREN SEMI
    (4) expression -> NAME . DOTE CAPACITY LPAREN RPAREN
    (44) expression -> NAME . DOTE CAPACITY LPAREN RPAREN SEMI
    (84) expression -> NAME .
    (5) statement -> NAME . EQUALS expression SEMI
    (6) statement -> NAME . EQUALS expression
    (7) statement -> NAME . EQUALS statement
    (13) statement -> NAME . DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> NAME . EQUALS ARRAY LPAREN RPAREN SEMI
    (16) statement -> NAME . DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> NAME . DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (43) statement -> NAME . DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> NAME . RACC expression LACC SEMI
    (46) statement -> NAME . RACC STRING LACC SEMI
    (47) statement -> NAME . DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> NAME . DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> NAME . DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> NAME . DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> NAME . DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> NAME . DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> NAME . EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (55) statement -> NAME . LPAREN RPAREN SEMI
    (56) statement -> NAME . LPAREN param_call RPAREN SEMI
    (72) statement -> NAME . INCR SEMI
    (73) statement -> NAME . DECR SEMI
    (74) statement -> NAME . INCR
    (75) statement -> NAME . DECR
    (76) statement -> NAME . PLUSEQ NUMBER SEMI
    (77) statement -> NAME . MINEQ NUMBER SEMI
    (78) statement -> NAME . PLUSEQ NUMBER
    (79) statement -> NAME . MINEQ NUMBER
    (31) params -> NAME .
    (32) params -> NAME . COMMA params

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    DOTE            shift and go to state 131
    SEMI            reduce using rule 84 (expression -> NAME .)
    PLUS            reduce using rule 84 (expression -> NAME .)
    MINUS           reduce using rule 84 (expression -> NAME .)
    TIMES           reduce using rule 84 (expression -> NAME .)
    DIVIDE          reduce using rule 84 (expression -> NAME .)
    or              reduce using rule 84 (expression -> NAME .)
    and             reduce using rule 84 (expression -> NAME .)
    SUP             reduce using rule 84 (expression -> NAME .)
    INFF            reduce using rule 84 (expression -> NAME .)
    ISEQUAL         reduce using rule 84 (expression -> NAME .)
    NOTEQUAL        reduce using rule 84 (expression -> NAME .)
    ET              reduce using rule 84 (expression -> NAME .)
    OU              reduce using rule 84 (expression -> NAME .)
    CONCAT          reduce using rule 84 (expression -> NAME .)
    NAME            reduce using rule 84 (expression -> NAME .)
    WHILE           reduce using rule 84 (expression -> NAME .)
    FOR             reduce using rule 84 (expression -> NAME .)
    PRINT           reduce using rule 84 (expression -> NAME .)
    NUMBER          reduce using rule 84 (expression -> NAME .)
    COMMENTS        reduce using rule 84 (expression -> NAME .)
    IF              reduce using rule 84 (expression -> NAME .)
    RETURN          reduce using rule 84 (expression -> NAME .)
    FUNCTION        reduce using rule 84 (expression -> NAME .)
    DEFINE          reduce using rule 84 (expression -> NAME .)
    STRING          reduce using rule 84 (expression -> NAME .)
    TRUE            reduce using rule 84 (expression -> NAME .)
    FALSE           reduce using rule 84 (expression -> NAME .)
    $end            reduce using rule 84 (expression -> NAME .)
    THEN            reduce using rule 84 (expression -> NAME .)
    TO              reduce using rule 84 (expression -> NAME .)
    RPAREN          reduce using rule 84 (expression -> NAME .)
    LACC            reduce using rule 84 (expression -> NAME .)
    END             reduce using rule 84 (expression -> NAME .)
    EQUALS          shift and go to state 22
    RACC            shift and go to state 26
    LPAREN          shift and go to state 24
    INCR            shift and go to state 27
    DECR            shift and go to state 28
    PLUSEQ          shift and go to state 29
    MINEQ           shift and go to state 30
    COMMA           shift and go to state 25

  ! LPAREN          [ reduce using rule 84 (expression -> NAME .) ]
  ! EQUALS          [ reduce using rule 31 (params -> NAME .) ]


state 64

    (5) statement -> NAME EQUALS expression . SEMI
    (6) statement -> NAME EQUALS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for IF resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for $end resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for THEN resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for TO resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for LACC resolved using rule 6 (statement -> NAME EQUALS expression .)
  ! reduce/reduce conflict for END resolved using rule 6 (statement -> NAME EQUALS expression .)
    SEMI            shift and go to state 132
    NAME            reduce using rule 6 (statement -> NAME EQUALS expression .)
    WHILE           reduce using rule 6 (statement -> NAME EQUALS expression .)
    FOR             reduce using rule 6 (statement -> NAME EQUALS expression .)
    PRINT           reduce using rule 6 (statement -> NAME EQUALS expression .)
    NUMBER          reduce using rule 6 (statement -> NAME EQUALS expression .)
    COMMENTS        reduce using rule 6 (statement -> NAME EQUALS expression .)
    IF              reduce using rule 6 (statement -> NAME EQUALS expression .)
    RETURN          reduce using rule 6 (statement -> NAME EQUALS expression .)
    FUNCTION        reduce using rule 6 (statement -> NAME EQUALS expression .)
    DEFINE          reduce using rule 6 (statement -> NAME EQUALS expression .)
    LPAREN          reduce using rule 6 (statement -> NAME EQUALS expression .)
    STRING          reduce using rule 6 (statement -> NAME EQUALS expression .)
    TRUE            reduce using rule 6 (statement -> NAME EQUALS expression .)
    FALSE           reduce using rule 6 (statement -> NAME EQUALS expression .)
    $end            reduce using rule 6 (statement -> NAME EQUALS expression .)
    THEN            reduce using rule 6 (statement -> NAME EQUALS expression .)
    TO              reduce using rule 6 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 6 (statement -> NAME EQUALS expression .)
    LACC            reduce using rule 6 (statement -> NAME EQUALS expression .)
    END             reduce using rule 6 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 121
    and             shift and go to state 122
    SUP             shift and go to state 123
    INFF            shift and go to state 124
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44
    CONCAT          shift and go to state 31

  ! MINUS           [ reduce using rule 6 (statement -> NAME EQUALS expression .) ]
  ! NAME            [ reduce using rule 10 (statement -> expression .) ]
  ! WHILE           [ reduce using rule 10 (statement -> expression .) ]
  ! FOR             [ reduce using rule 10 (statement -> expression .) ]
  ! PRINT           [ reduce using rule 10 (statement -> expression .) ]
  ! NUMBER          [ reduce using rule 10 (statement -> expression .) ]
  ! COMMENTS        [ reduce using rule 10 (statement -> expression .) ]
  ! IF              [ reduce using rule 10 (statement -> expression .) ]
  ! RETURN          [ reduce using rule 10 (statement -> expression .) ]
  ! FUNCTION        [ reduce using rule 10 (statement -> expression .) ]
  ! DEFINE          [ reduce using rule 10 (statement -> expression .) ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]
  ! LPAREN          [ reduce using rule 10 (statement -> expression .) ]
  ! STRING          [ reduce using rule 10 (statement -> expression .) ]
  ! TRUE            [ reduce using rule 10 (statement -> expression .) ]
  ! FALSE           [ reduce using rule 10 (statement -> expression .) ]
  ! $end            [ reduce using rule 10 (statement -> expression .) ]
  ! THEN            [ reduce using rule 10 (statement -> expression .) ]
  ! TO              [ reduce using rule 10 (statement -> expression .) ]
  ! RPAREN          [ reduce using rule 10 (statement -> expression .) ]
  ! LACC            [ reduce using rule 10 (statement -> expression .) ]
  ! END             [ reduce using rule 10 (statement -> expression .) ]


state 65

    (7) statement -> NAME EQUALS statement .

    NAME            reduce using rule 7 (statement -> NAME EQUALS statement .)
    WHILE           reduce using rule 7 (statement -> NAME EQUALS statement .)
    FOR             reduce using rule 7 (statement -> NAME EQUALS statement .)
    PRINT           reduce using rule 7 (statement -> NAME EQUALS statement .)
    NUMBER          reduce using rule 7 (statement -> NAME EQUALS statement .)
    COMMENTS        reduce using rule 7 (statement -> NAME EQUALS statement .)
    IF              reduce using rule 7 (statement -> NAME EQUALS statement .)
    RETURN          reduce using rule 7 (statement -> NAME EQUALS statement .)
    FUNCTION        reduce using rule 7 (statement -> NAME EQUALS statement .)
    DEFINE          reduce using rule 7 (statement -> NAME EQUALS statement .)
    MINUS           reduce using rule 7 (statement -> NAME EQUALS statement .)
    LPAREN          reduce using rule 7 (statement -> NAME EQUALS statement .)
    STRING          reduce using rule 7 (statement -> NAME EQUALS statement .)
    TRUE            reduce using rule 7 (statement -> NAME EQUALS statement .)
    FALSE           reduce using rule 7 (statement -> NAME EQUALS statement .)
    $end            reduce using rule 7 (statement -> NAME EQUALS statement .)
    THEN            reduce using rule 7 (statement -> NAME EQUALS statement .)
    TO              reduce using rule 7 (statement -> NAME EQUALS statement .)
    RPAREN          reduce using rule 7 (statement -> NAME EQUALS statement .)
    LACC            reduce using rule 7 (statement -> NAME EQUALS statement .)
    END             reduce using rule 7 (statement -> NAME EQUALS statement .)


state 66

    (14) statement -> NAME EQUALS ARRAY . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 133


state 67

    (13) statement -> NAME DOTE INCLUDE . LPAREN NAME COMMA STRING RPAREN SEMI

    LPAREN          shift and go to state 134


state 68

    (16) statement -> NAME DOTE GETALL . LPAREN NAME COMMA STRING RPAREN SEMI

    LPAREN          shift and go to state 135


state 69

    (17) statement -> NAME DOTE GET . LPAREN NAME COMMA STRING RPAREN SEMI

    LPAREN          shift and go to state 136


state 70

    (43) statement -> NAME DOTE ALLTXT . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 137


state 71

    (47) statement -> NAME DOTE FILTER . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 138


state 72

    (48) statement -> NAME DOTE ALLTITLES . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 139


state 73

    (49) statement -> NAME DOTE FETCH . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 140


state 74

    (50) statement -> NAME DOTE HTML . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 141


state 75

    (51) statement -> NAME DOTE TABLEID . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 142


state 76

    (52) statement -> NAME DOTE SCAN . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 143


state 77

    (4) expression -> NAME DOTE CAPACITY . LPAREN RPAREN
    (44) expression -> NAME DOTE CAPACITY . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 144


state 78

    (55) statement -> NAME LPAREN RPAREN . SEMI

    SEMI            shift and go to state 145


state 79

    (56) statement -> NAME LPAREN param_call . RPAREN SEMI

    RPAREN          shift and go to state 146


state 80

    (57) param_call -> expression .
    (58) param_call -> expression . COMMA param_call
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    RPAREN          reduce using rule 57 (param_call -> expression .)
    SEMI            reduce using rule 57 (param_call -> expression .)
    COMMA           shift and go to state 147
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 81

    (31) params -> NAME .
    (32) params -> NAME . COMMA params

    EQUALS          reduce using rule 31 (params -> NAME .)
    RPAREN          reduce using rule 31 (params -> NAME .)
    COMMA           shift and go to state 25


state 82

    (32) params -> NAME COMMA params .

    EQUALS          reduce using rule 32 (params -> NAME COMMA params .)
    RPAREN          reduce using rule 32 (params -> NAME COMMA params .)


state 83

    (45) statement -> NAME RACC expression . LACC SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    LACC            shift and go to state 148
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 84

    (46) statement -> NAME RACC STRING . LACC SEMI
    (83) expression -> STRING .

  ! shift/reduce conflict for LACC resolved as shift
    LACC            shift and go to state 149
    PLUS            reduce using rule 83 (expression -> STRING .)
    MINUS           reduce using rule 83 (expression -> STRING .)
    TIMES           reduce using rule 83 (expression -> STRING .)
    DIVIDE          reduce using rule 83 (expression -> STRING .)
    or              reduce using rule 83 (expression -> STRING .)
    and             reduce using rule 83 (expression -> STRING .)
    SUP             reduce using rule 83 (expression -> STRING .)
    INFF            reduce using rule 83 (expression -> STRING .)
    ISEQUAL         reduce using rule 83 (expression -> STRING .)
    NOTEQUAL        reduce using rule 83 (expression -> STRING .)
    ET              reduce using rule 83 (expression -> STRING .)
    OU              reduce using rule 83 (expression -> STRING .)

  ! LACC            [ reduce using rule 83 (expression -> STRING .) ]


state 85

    (72) statement -> NAME INCR SEMI .

    NAME            reduce using rule 72 (statement -> NAME INCR SEMI .)
    WHILE           reduce using rule 72 (statement -> NAME INCR SEMI .)
    FOR             reduce using rule 72 (statement -> NAME INCR SEMI .)
    PRINT           reduce using rule 72 (statement -> NAME INCR SEMI .)
    NUMBER          reduce using rule 72 (statement -> NAME INCR SEMI .)
    COMMENTS        reduce using rule 72 (statement -> NAME INCR SEMI .)
    IF              reduce using rule 72 (statement -> NAME INCR SEMI .)
    RETURN          reduce using rule 72 (statement -> NAME INCR SEMI .)
    FUNCTION        reduce using rule 72 (statement -> NAME INCR SEMI .)
    DEFINE          reduce using rule 72 (statement -> NAME INCR SEMI .)
    MINUS           reduce using rule 72 (statement -> NAME INCR SEMI .)
    LPAREN          reduce using rule 72 (statement -> NAME INCR SEMI .)
    STRING          reduce using rule 72 (statement -> NAME INCR SEMI .)
    TRUE            reduce using rule 72 (statement -> NAME INCR SEMI .)
    FALSE           reduce using rule 72 (statement -> NAME INCR SEMI .)
    $end            reduce using rule 72 (statement -> NAME INCR SEMI .)
    THEN            reduce using rule 72 (statement -> NAME INCR SEMI .)
    TO              reduce using rule 72 (statement -> NAME INCR SEMI .)
    RPAREN          reduce using rule 72 (statement -> NAME INCR SEMI .)
    LACC            reduce using rule 72 (statement -> NAME INCR SEMI .)
    END             reduce using rule 72 (statement -> NAME INCR SEMI .)


state 86

    (73) statement -> NAME DECR SEMI .

    NAME            reduce using rule 73 (statement -> NAME DECR SEMI .)
    WHILE           reduce using rule 73 (statement -> NAME DECR SEMI .)
    FOR             reduce using rule 73 (statement -> NAME DECR SEMI .)
    PRINT           reduce using rule 73 (statement -> NAME DECR SEMI .)
    NUMBER          reduce using rule 73 (statement -> NAME DECR SEMI .)
    COMMENTS        reduce using rule 73 (statement -> NAME DECR SEMI .)
    IF              reduce using rule 73 (statement -> NAME DECR SEMI .)
    RETURN          reduce using rule 73 (statement -> NAME DECR SEMI .)
    FUNCTION        reduce using rule 73 (statement -> NAME DECR SEMI .)
    DEFINE          reduce using rule 73 (statement -> NAME DECR SEMI .)
    MINUS           reduce using rule 73 (statement -> NAME DECR SEMI .)
    LPAREN          reduce using rule 73 (statement -> NAME DECR SEMI .)
    STRING          reduce using rule 73 (statement -> NAME DECR SEMI .)
    TRUE            reduce using rule 73 (statement -> NAME DECR SEMI .)
    FALSE           reduce using rule 73 (statement -> NAME DECR SEMI .)
    $end            reduce using rule 73 (statement -> NAME DECR SEMI .)
    THEN            reduce using rule 73 (statement -> NAME DECR SEMI .)
    TO              reduce using rule 73 (statement -> NAME DECR SEMI .)
    RPAREN          reduce using rule 73 (statement -> NAME DECR SEMI .)
    LACC            reduce using rule 73 (statement -> NAME DECR SEMI .)
    END             reduce using rule 73 (statement -> NAME DECR SEMI .)


state 87

    (76) statement -> NAME PLUSEQ NUMBER . SEMI
    (78) statement -> NAME PLUSEQ NUMBER .

    SEMI            shift and go to state 150
    NAME            reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    WHILE           reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    FOR             reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    PRINT           reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    NUMBER          reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    COMMENTS        reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    IF              reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    RETURN          reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    FUNCTION        reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    DEFINE          reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    MINUS           reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    LPAREN          reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    STRING          reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    TRUE            reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    FALSE           reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    $end            reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    THEN            reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    TO              reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    RPAREN          reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    LACC            reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)
    END             reduce using rule 78 (statement -> NAME PLUSEQ NUMBER .)


state 88

    (77) statement -> NAME MINEQ NUMBER . SEMI
    (79) statement -> NAME MINEQ NUMBER .

    SEMI            shift and go to state 151
    NAME            reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    WHILE           reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    FOR             reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    PRINT           reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    NUMBER          reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    COMMENTS        reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    IF              reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    RETURN          reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    FUNCTION        reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    DEFINE          reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    MINUS           reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    LPAREN          reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    STRING          reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    TRUE            reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    FALSE           reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    $end            reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    THEN            reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    TO              reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    RPAREN          reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    LACC            reduce using rule 79 (statement -> NAME MINEQ NUMBER .)
    END             reduce using rule 79 (statement -> NAME MINEQ NUMBER .)


state 89

    (11) statement -> expression CONCAT statement .

    NAME            reduce using rule 11 (statement -> expression CONCAT statement .)
    WHILE           reduce using rule 11 (statement -> expression CONCAT statement .)
    FOR             reduce using rule 11 (statement -> expression CONCAT statement .)
    PRINT           reduce using rule 11 (statement -> expression CONCAT statement .)
    NUMBER          reduce using rule 11 (statement -> expression CONCAT statement .)
    COMMENTS        reduce using rule 11 (statement -> expression CONCAT statement .)
    IF              reduce using rule 11 (statement -> expression CONCAT statement .)
    RETURN          reduce using rule 11 (statement -> expression CONCAT statement .)
    FUNCTION        reduce using rule 11 (statement -> expression CONCAT statement .)
    DEFINE          reduce using rule 11 (statement -> expression CONCAT statement .)
    MINUS           reduce using rule 11 (statement -> expression CONCAT statement .)
    LPAREN          reduce using rule 11 (statement -> expression CONCAT statement .)
    STRING          reduce using rule 11 (statement -> expression CONCAT statement .)
    TRUE            reduce using rule 11 (statement -> expression CONCAT statement .)
    FALSE           reduce using rule 11 (statement -> expression CONCAT statement .)
    $end            reduce using rule 11 (statement -> expression CONCAT statement .)
    THEN            reduce using rule 11 (statement -> expression CONCAT statement .)
    TO              reduce using rule 11 (statement -> expression CONCAT statement .)
    RPAREN          reduce using rule 11 (statement -> expression CONCAT statement .)
    LACC            reduce using rule 11 (statement -> expression CONCAT statement .)
    END             reduce using rule 11 (statement -> expression CONCAT statement .)


state 90

    (67) expression -> expression INFF expression .
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for CONCAT resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    CONCAT          shift and go to state 31
    INFF            shift and go to state 32
    SUP             shift and go to state 33
    and             shift and go to state 34
    or              shift and go to state 35
    SEMI            shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44

  ! CONCAT          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! SEMI            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! PLUS            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! NAME            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! WHILE           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! FOR             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! PRINT           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! NUMBER          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! COMMENTS        [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! IF              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! RETURN          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! FUNCTION        [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! DEFINE          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! LPAREN          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! STRING          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! TRUE            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! FALSE           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! $end            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! THEN            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! TO              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! RPAREN          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! LACC            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! END             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]


state 91

    (33) statement -> expression INFF statement .

    NAME            reduce using rule 33 (statement -> expression INFF statement .)
    WHILE           reduce using rule 33 (statement -> expression INFF statement .)
    FOR             reduce using rule 33 (statement -> expression INFF statement .)
    PRINT           reduce using rule 33 (statement -> expression INFF statement .)
    NUMBER          reduce using rule 33 (statement -> expression INFF statement .)
    COMMENTS        reduce using rule 33 (statement -> expression INFF statement .)
    IF              reduce using rule 33 (statement -> expression INFF statement .)
    RETURN          reduce using rule 33 (statement -> expression INFF statement .)
    FUNCTION        reduce using rule 33 (statement -> expression INFF statement .)
    DEFINE          reduce using rule 33 (statement -> expression INFF statement .)
    MINUS           reduce using rule 33 (statement -> expression INFF statement .)
    LPAREN          reduce using rule 33 (statement -> expression INFF statement .)
    STRING          reduce using rule 33 (statement -> expression INFF statement .)
    TRUE            reduce using rule 33 (statement -> expression INFF statement .)
    FALSE           reduce using rule 33 (statement -> expression INFF statement .)
    $end            reduce using rule 33 (statement -> expression INFF statement .)
    THEN            reduce using rule 33 (statement -> expression INFF statement .)
    TO              reduce using rule 33 (statement -> expression INFF statement .)
    RPAREN          reduce using rule 33 (statement -> expression INFF statement .)
    LACC            reduce using rule 33 (statement -> expression INFF statement .)
    END             reduce using rule 33 (statement -> expression INFF statement .)


state 92

    (66) expression -> expression SUP expression .
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
    CONCAT          reduce using rule 66 (expression -> expression SUP expression .)
    INFF            reduce using rule 66 (expression -> expression SUP expression .)
    and             reduce using rule 66 (expression -> expression SUP expression .)
    or              reduce using rule 66 (expression -> expression SUP expression .)
    SEMI            reduce using rule 66 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 66 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 66 (expression -> expression SUP expression .)
    ET              reduce using rule 66 (expression -> expression SUP expression .)
    OU              reduce using rule 66 (expression -> expression SUP expression .)
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    SUP             shift and go to state 33

  ! SUP             [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! PLUS            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! NAME            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! WHILE           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! FOR             [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! PRINT           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! NUMBER          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! COMMENTS        [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! IF              [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! RETURN          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! FUNCTION        [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! DEFINE          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! LPAREN          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! STRING          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! TRUE            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! FALSE           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! $end            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! THEN            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! TO              [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! RPAREN          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! LACC            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! END             [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 31 ]
  ! INFF            [ shift and go to state 32 ]
  ! and             [ shift and go to state 34 ]
  ! or              [ shift and go to state 35 ]
  ! SEMI            [ shift and go to state 36 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 93

    (34) statement -> expression SUP statement .

    NAME            reduce using rule 34 (statement -> expression SUP statement .)
    WHILE           reduce using rule 34 (statement -> expression SUP statement .)
    FOR             reduce using rule 34 (statement -> expression SUP statement .)
    PRINT           reduce using rule 34 (statement -> expression SUP statement .)
    NUMBER          reduce using rule 34 (statement -> expression SUP statement .)
    COMMENTS        reduce using rule 34 (statement -> expression SUP statement .)
    IF              reduce using rule 34 (statement -> expression SUP statement .)
    RETURN          reduce using rule 34 (statement -> expression SUP statement .)
    FUNCTION        reduce using rule 34 (statement -> expression SUP statement .)
    DEFINE          reduce using rule 34 (statement -> expression SUP statement .)
    MINUS           reduce using rule 34 (statement -> expression SUP statement .)
    LPAREN          reduce using rule 34 (statement -> expression SUP statement .)
    STRING          reduce using rule 34 (statement -> expression SUP statement .)
    TRUE            reduce using rule 34 (statement -> expression SUP statement .)
    FALSE           reduce using rule 34 (statement -> expression SUP statement .)
    $end            reduce using rule 34 (statement -> expression SUP statement .)
    THEN            reduce using rule 34 (statement -> expression SUP statement .)
    TO              reduce using rule 34 (statement -> expression SUP statement .)
    RPAREN          reduce using rule 34 (statement -> expression SUP statement .)
    LACC            reduce using rule 34 (statement -> expression SUP statement .)
    END             reduce using rule 34 (statement -> expression SUP statement .)


state 94

    (65) expression -> expression and expression .
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
    CONCAT          reduce using rule 65 (expression -> expression and expression .)
    INFF            reduce using rule 65 (expression -> expression and expression .)
    and             reduce using rule 65 (expression -> expression and expression .)
    or              reduce using rule 65 (expression -> expression and expression .)
    SEMI            reduce using rule 65 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 65 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 65 (expression -> expression and expression .)
    ET              reduce using rule 65 (expression -> expression and expression .)
    OU              reduce using rule 65 (expression -> expression and expression .)
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    SUP             shift and go to state 33
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! SUP             [ reduce using rule 65 (expression -> expression and expression .) ]
  ! PLUS            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! NAME            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! WHILE           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! FOR             [ reduce using rule 65 (expression -> expression and expression .) ]
  ! PRINT           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! NUMBER          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! COMMENTS        [ reduce using rule 65 (expression -> expression and expression .) ]
  ! IF              [ reduce using rule 65 (expression -> expression and expression .) ]
  ! RETURN          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! FUNCTION        [ reduce using rule 65 (expression -> expression and expression .) ]
  ! DEFINE          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! LPAREN          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! STRING          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! TRUE            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! FALSE           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! $end            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! THEN            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! TO              [ reduce using rule 65 (expression -> expression and expression .) ]
  ! RPAREN          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! LACC            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! END             [ reduce using rule 65 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 31 ]
  ! INFF            [ shift and go to state 32 ]
  ! and             [ shift and go to state 34 ]
  ! or              [ shift and go to state 35 ]
  ! SEMI            [ shift and go to state 36 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 95

    (35) statement -> expression and statement .

    NAME            reduce using rule 35 (statement -> expression and statement .)
    WHILE           reduce using rule 35 (statement -> expression and statement .)
    FOR             reduce using rule 35 (statement -> expression and statement .)
    PRINT           reduce using rule 35 (statement -> expression and statement .)
    NUMBER          reduce using rule 35 (statement -> expression and statement .)
    COMMENTS        reduce using rule 35 (statement -> expression and statement .)
    IF              reduce using rule 35 (statement -> expression and statement .)
    RETURN          reduce using rule 35 (statement -> expression and statement .)
    FUNCTION        reduce using rule 35 (statement -> expression and statement .)
    DEFINE          reduce using rule 35 (statement -> expression and statement .)
    MINUS           reduce using rule 35 (statement -> expression and statement .)
    LPAREN          reduce using rule 35 (statement -> expression and statement .)
    STRING          reduce using rule 35 (statement -> expression and statement .)
    TRUE            reduce using rule 35 (statement -> expression and statement .)
    FALSE           reduce using rule 35 (statement -> expression and statement .)
    $end            reduce using rule 35 (statement -> expression and statement .)
    THEN            reduce using rule 35 (statement -> expression and statement .)
    TO              reduce using rule 35 (statement -> expression and statement .)
    RPAREN          reduce using rule 35 (statement -> expression and statement .)
    LACC            reduce using rule 35 (statement -> expression and statement .)
    END             reduce using rule 35 (statement -> expression and statement .)


state 96

    (64) expression -> expression or expression .
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
    CONCAT          reduce using rule 64 (expression -> expression or expression .)
    INFF            reduce using rule 64 (expression -> expression or expression .)
    or              reduce using rule 64 (expression -> expression or expression .)
    SEMI            reduce using rule 64 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 64 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 64 (expression -> expression or expression .)
    ET              reduce using rule 64 (expression -> expression or expression .)
    OU              reduce using rule 64 (expression -> expression or expression .)
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    SUP             shift and go to state 33
    and             shift and go to state 34
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! SUP             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! PLUS            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! NAME            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! WHILE           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! FOR             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! PRINT           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! NUMBER          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! COMMENTS        [ reduce using rule 64 (expression -> expression or expression .) ]
  ! IF              [ reduce using rule 64 (expression -> expression or expression .) ]
  ! RETURN          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! FUNCTION        [ reduce using rule 64 (expression -> expression or expression .) ]
  ! DEFINE          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! LPAREN          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! STRING          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! TRUE            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! FALSE           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! $end            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! THEN            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! TO              [ reduce using rule 64 (expression -> expression or expression .) ]
  ! RPAREN          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! LACC            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! END             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 31 ]
  ! INFF            [ shift and go to state 32 ]
  ! or              [ shift and go to state 35 ]
  ! SEMI            [ shift and go to state 36 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 97

    (36) statement -> expression or statement .

    NAME            reduce using rule 36 (statement -> expression or statement .)
    WHILE           reduce using rule 36 (statement -> expression or statement .)
    FOR             reduce using rule 36 (statement -> expression or statement .)
    PRINT           reduce using rule 36 (statement -> expression or statement .)
    NUMBER          reduce using rule 36 (statement -> expression or statement .)
    COMMENTS        reduce using rule 36 (statement -> expression or statement .)
    IF              reduce using rule 36 (statement -> expression or statement .)
    RETURN          reduce using rule 36 (statement -> expression or statement .)
    FUNCTION        reduce using rule 36 (statement -> expression or statement .)
    DEFINE          reduce using rule 36 (statement -> expression or statement .)
    MINUS           reduce using rule 36 (statement -> expression or statement .)
    LPAREN          reduce using rule 36 (statement -> expression or statement .)
    STRING          reduce using rule 36 (statement -> expression or statement .)
    TRUE            reduce using rule 36 (statement -> expression or statement .)
    FALSE           reduce using rule 36 (statement -> expression or statement .)
    $end            reduce using rule 36 (statement -> expression or statement .)
    THEN            reduce using rule 36 (statement -> expression or statement .)
    TO              reduce using rule 36 (statement -> expression or statement .)
    RPAREN          reduce using rule 36 (statement -> expression or statement .)
    LACC            reduce using rule 36 (statement -> expression or statement .)
    END             reduce using rule 36 (statement -> expression or statement .)


state 98

    (60) expression -> expression PLUS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    CONCAT          reduce using rule 60 (expression -> expression PLUS expression .)
    INFF            reduce using rule 60 (expression -> expression PLUS expression .)
    SUP             reduce using rule 60 (expression -> expression PLUS expression .)
    and             reduce using rule 60 (expression -> expression PLUS expression .)
    or              reduce using rule 60 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 60 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 60 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 60 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 60 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 60 (expression -> expression PLUS expression .)
    ET              reduce using rule 60 (expression -> expression PLUS expression .)
    OU              reduce using rule 60 (expression -> expression PLUS expression .)
    NAME            reduce using rule 60 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 60 (expression -> expression PLUS expression .)
    FOR             reduce using rule 60 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 60 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 60 (expression -> expression PLUS expression .)
    COMMENTS        reduce using rule 60 (expression -> expression PLUS expression .)
    IF              reduce using rule 60 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 60 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 60 (expression -> expression PLUS expression .)
    DEFINE          reduce using rule 60 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 60 (expression -> expression PLUS expression .)
    STRING          reduce using rule 60 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 60 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 60 (expression -> expression PLUS expression .)
    $end            reduce using rule 60 (expression -> expression PLUS expression .)
    RACC            reduce using rule 60 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 60 (expression -> expression PLUS expression .)
    THEN            reduce using rule 60 (expression -> expression PLUS expression .)
    TO              reduce using rule 60 (expression -> expression PLUS expression .)
    LACC            reduce using rule 60 (expression -> expression PLUS expression .)
    END             reduce using rule 60 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 60 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! or              [ shift and go to state 107 ]
  ! and             [ shift and go to state 108 ]
  ! SUP             [ shift and go to state 109 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 99

    (61) expression -> expression MINUS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    CONCAT          reduce using rule 61 (expression -> expression MINUS expression .)
    INFF            reduce using rule 61 (expression -> expression MINUS expression .)
    SUP             reduce using rule 61 (expression -> expression MINUS expression .)
    and             reduce using rule 61 (expression -> expression MINUS expression .)
    or              reduce using rule 61 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 61 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 61 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 61 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 61 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 61 (expression -> expression MINUS expression .)
    ET              reduce using rule 61 (expression -> expression MINUS expression .)
    OU              reduce using rule 61 (expression -> expression MINUS expression .)
    NAME            reduce using rule 61 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 61 (expression -> expression MINUS expression .)
    FOR             reduce using rule 61 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 61 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 61 (expression -> expression MINUS expression .)
    COMMENTS        reduce using rule 61 (expression -> expression MINUS expression .)
    IF              reduce using rule 61 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 61 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 61 (expression -> expression MINUS expression .)
    DEFINE          reduce using rule 61 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 61 (expression -> expression MINUS expression .)
    STRING          reduce using rule 61 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 61 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 61 (expression -> expression MINUS expression .)
    $end            reduce using rule 61 (expression -> expression MINUS expression .)
    RACC            reduce using rule 61 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 61 (expression -> expression MINUS expression .)
    THEN            reduce using rule 61 (expression -> expression MINUS expression .)
    TO              reduce using rule 61 (expression -> expression MINUS expression .)
    LACC            reduce using rule 61 (expression -> expression MINUS expression .)
    END             reduce using rule 61 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 61 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! or              [ shift and go to state 107 ]
  ! and             [ shift and go to state 108 ]
  ! SUP             [ shift and go to state 109 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 100

    (62) expression -> expression TIMES expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    CONCAT          reduce using rule 62 (expression -> expression TIMES expression .)
    INFF            reduce using rule 62 (expression -> expression TIMES expression .)
    SUP             reduce using rule 62 (expression -> expression TIMES expression .)
    and             reduce using rule 62 (expression -> expression TIMES expression .)
    or              reduce using rule 62 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 62 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 62 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 62 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 62 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 62 (expression -> expression TIMES expression .)
    ISEQUAL         reduce using rule 62 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 62 (expression -> expression TIMES expression .)
    ET              reduce using rule 62 (expression -> expression TIMES expression .)
    OU              reduce using rule 62 (expression -> expression TIMES expression .)
    NAME            reduce using rule 62 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 62 (expression -> expression TIMES expression .)
    FOR             reduce using rule 62 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 62 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 62 (expression -> expression TIMES expression .)
    COMMENTS        reduce using rule 62 (expression -> expression TIMES expression .)
    IF              reduce using rule 62 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 62 (expression -> expression TIMES expression .)
    FUNCTION        reduce using rule 62 (expression -> expression TIMES expression .)
    DEFINE          reduce using rule 62 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 62 (expression -> expression TIMES expression .)
    STRING          reduce using rule 62 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 62 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 62 (expression -> expression TIMES expression .)
    $end            reduce using rule 62 (expression -> expression TIMES expression .)
    RACC            reduce using rule 62 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 62 (expression -> expression TIMES expression .)
    THEN            reduce using rule 62 (expression -> expression TIMES expression .)
    TO              reduce using rule 62 (expression -> expression TIMES expression .)
    LACC            reduce using rule 62 (expression -> expression TIMES expression .)
    END             reduce using rule 62 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 62 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! or              [ shift and go to state 107 ]
  ! and             [ shift and go to state 108 ]
  ! SUP             [ shift and go to state 109 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 101

    (63) expression -> expression DIVIDE expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    CONCAT          reduce using rule 63 (expression -> expression DIVIDE expression .)
    INFF            reduce using rule 63 (expression -> expression DIVIDE expression .)
    SUP             reduce using rule 63 (expression -> expression DIVIDE expression .)
    and             reduce using rule 63 (expression -> expression DIVIDE expression .)
    or              reduce using rule 63 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 63 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 63 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 63 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 63 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 63 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 63 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 63 (expression -> expression DIVIDE expression .)
    ET              reduce using rule 63 (expression -> expression DIVIDE expression .)
    OU              reduce using rule 63 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 63 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 63 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 63 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 63 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 63 (expression -> expression DIVIDE expression .)
    COMMENTS        reduce using rule 63 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 63 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 63 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 63 (expression -> expression DIVIDE expression .)
    DEFINE          reduce using rule 63 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 63 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 63 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 63 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 63 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 63 (expression -> expression DIVIDE expression .)
    RACC            reduce using rule 63 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 63 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 63 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 63 (expression -> expression DIVIDE expression .)
    LACC            reduce using rule 63 (expression -> expression DIVIDE expression .)
    END             reduce using rule 63 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 63 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! or              [ shift and go to state 107 ]
  ! and             [ shift and go to state 108 ]
  ! SUP             [ shift and go to state 109 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 102

    (68) expression -> expression ISEQUAL expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 68 (expression -> expression ISEQUAL expression .)
    SEMI            reduce using rule 68 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 68 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 68 (expression -> expression ISEQUAL expression .)
    FOR             reduce using rule 68 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 68 (expression -> expression ISEQUAL expression .)
    NUMBER          reduce using rule 68 (expression -> expression ISEQUAL expression .)
    COMMENTS        reduce using rule 68 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 68 (expression -> expression ISEQUAL expression .)
    RETURN          reduce using rule 68 (expression -> expression ISEQUAL expression .)
    FUNCTION        reduce using rule 68 (expression -> expression ISEQUAL expression .)
    DEFINE          reduce using rule 68 (expression -> expression ISEQUAL expression .)
    LPAREN          reduce using rule 68 (expression -> expression ISEQUAL expression .)
    STRING          reduce using rule 68 (expression -> expression ISEQUAL expression .)
    TRUE            reduce using rule 68 (expression -> expression ISEQUAL expression .)
    FALSE           reduce using rule 68 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 68 (expression -> expression ISEQUAL expression .)
    RACC            reduce using rule 68 (expression -> expression ISEQUAL expression .)
    RPAREN          reduce using rule 68 (expression -> expression ISEQUAL expression .)
    THEN            reduce using rule 68 (expression -> expression ISEQUAL expression .)
    TO              reduce using rule 68 (expression -> expression ISEQUAL expression .)
    LACC            reduce using rule 68 (expression -> expression ISEQUAL expression .)
    END             reduce using rule 68 (expression -> expression ISEQUAL expression .)
    COMMA           reduce using rule 68 (expression -> expression ISEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44

  ! INFF            [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! SUP             [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! and             [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! or              [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! PLUS            [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! TIMES           [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! ET              [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]
  ! OU              [ reduce using rule 68 (expression -> expression ISEQUAL expression .) ]


state 103

    (69) expression -> expression NOTEQUAL expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    SEMI            reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    COMMENTS        reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    FUNCTION        reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    DEFINE          reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    STRING          reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    TRUE            reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    FALSE           reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    RACC            reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    THEN            reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    TO              reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    LACC            reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    END             reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 69 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44

  ! INFF            [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! SUP             [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! and             [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! or              [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! ET              [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]
  ! OU              [ reduce using rule 69 (expression -> expression NOTEQUAL expression .) ]


state 104

    (70) expression -> expression ET expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 70 (expression -> expression ET expression .)
    SEMI            reduce using rule 70 (expression -> expression ET expression .)
    NAME            reduce using rule 70 (expression -> expression ET expression .)
    WHILE           reduce using rule 70 (expression -> expression ET expression .)
    FOR             reduce using rule 70 (expression -> expression ET expression .)
    PRINT           reduce using rule 70 (expression -> expression ET expression .)
    NUMBER          reduce using rule 70 (expression -> expression ET expression .)
    COMMENTS        reduce using rule 70 (expression -> expression ET expression .)
    IF              reduce using rule 70 (expression -> expression ET expression .)
    RETURN          reduce using rule 70 (expression -> expression ET expression .)
    FUNCTION        reduce using rule 70 (expression -> expression ET expression .)
    DEFINE          reduce using rule 70 (expression -> expression ET expression .)
    LPAREN          reduce using rule 70 (expression -> expression ET expression .)
    STRING          reduce using rule 70 (expression -> expression ET expression .)
    TRUE            reduce using rule 70 (expression -> expression ET expression .)
    FALSE           reduce using rule 70 (expression -> expression ET expression .)
    $end            reduce using rule 70 (expression -> expression ET expression .)
    RACC            reduce using rule 70 (expression -> expression ET expression .)
    RPAREN          reduce using rule 70 (expression -> expression ET expression .)
    THEN            reduce using rule 70 (expression -> expression ET expression .)
    TO              reduce using rule 70 (expression -> expression ET expression .)
    LACC            reduce using rule 70 (expression -> expression ET expression .)
    END             reduce using rule 70 (expression -> expression ET expression .)
    COMMA           reduce using rule 70 (expression -> expression ET expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44

  ! INFF            [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! SUP             [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! and             [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! or              [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! PLUS            [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! TIMES           [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! ISEQUAL         [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! NOTEQUAL        [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! ET              [ reduce using rule 70 (expression -> expression ET expression .) ]
  ! OU              [ reduce using rule 70 (expression -> expression ET expression .) ]


state 105

    (71) expression -> expression OU expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    CONCAT          reduce using rule 71 (expression -> expression OU expression .)
    SEMI            reduce using rule 71 (expression -> expression OU expression .)
    NAME            reduce using rule 71 (expression -> expression OU expression .)
    WHILE           reduce using rule 71 (expression -> expression OU expression .)
    FOR             reduce using rule 71 (expression -> expression OU expression .)
    PRINT           reduce using rule 71 (expression -> expression OU expression .)
    NUMBER          reduce using rule 71 (expression -> expression OU expression .)
    COMMENTS        reduce using rule 71 (expression -> expression OU expression .)
    IF              reduce using rule 71 (expression -> expression OU expression .)
    RETURN          reduce using rule 71 (expression -> expression OU expression .)
    FUNCTION        reduce using rule 71 (expression -> expression OU expression .)
    DEFINE          reduce using rule 71 (expression -> expression OU expression .)
    LPAREN          reduce using rule 71 (expression -> expression OU expression .)
    STRING          reduce using rule 71 (expression -> expression OU expression .)
    TRUE            reduce using rule 71 (expression -> expression OU expression .)
    FALSE           reduce using rule 71 (expression -> expression OU expression .)
    $end            reduce using rule 71 (expression -> expression OU expression .)
    RACC            reduce using rule 71 (expression -> expression OU expression .)
    RPAREN          reduce using rule 71 (expression -> expression OU expression .)
    THEN            reduce using rule 71 (expression -> expression OU expression .)
    TO              reduce using rule 71 (expression -> expression OU expression .)
    LACC            reduce using rule 71 (expression -> expression OU expression .)
    END             reduce using rule 71 (expression -> expression OU expression .)
    COMMA           reduce using rule 71 (expression -> expression OU expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44

  ! INFF            [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! SUP             [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! and             [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! or              [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! PLUS            [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! TIMES           [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! DIVIDE          [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! ISEQUAL         [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! NOTEQUAL        [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! ET              [ reduce using rule 71 (expression -> expression OU expression .) ]
  ! OU              [ reduce using rule 71 (expression -> expression OU expression .) ]


state 106

    (8) statement -> WHILE expression RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 152
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 107

    (64) expression -> expression or . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 153

state 108

    (65) expression -> expression and . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 154

state 109

    (66) expression -> expression SUP . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 155

state 110

    (67) expression -> expression INFF . expression
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 156

state 111

    (4) expression -> NAME DOTE . CAPACITY LPAREN RPAREN
    (44) expression -> NAME DOTE . CAPACITY LPAREN RPAREN SEMI

    CAPACITY        shift and go to state 77


state 112

    (9) statement -> FOR LPAREN statement . TO expression COMMA statement RPAREN RACC bloc LACC

    TO              shift and go to state 157


state 113

    (81) expression -> LPAREN expression RPAREN .

    CONCAT          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    INFF            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    SUP             reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    ET              reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    OU              reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    COMMENTS        reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    DEFINE          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    RACC            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    LACC            reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 81 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 81 (expression -> LPAREN expression RPAREN .)


state 114

    (12) statement -> PRINT CONCAT statement .

    NAME            reduce using rule 12 (statement -> PRINT CONCAT statement .)
    WHILE           reduce using rule 12 (statement -> PRINT CONCAT statement .)
    FOR             reduce using rule 12 (statement -> PRINT CONCAT statement .)
    PRINT           reduce using rule 12 (statement -> PRINT CONCAT statement .)
    NUMBER          reduce using rule 12 (statement -> PRINT CONCAT statement .)
    COMMENTS        reduce using rule 12 (statement -> PRINT CONCAT statement .)
    IF              reduce using rule 12 (statement -> PRINT CONCAT statement .)
    RETURN          reduce using rule 12 (statement -> PRINT CONCAT statement .)
    FUNCTION        reduce using rule 12 (statement -> PRINT CONCAT statement .)
    DEFINE          reduce using rule 12 (statement -> PRINT CONCAT statement .)
    MINUS           reduce using rule 12 (statement -> PRINT CONCAT statement .)
    LPAREN          reduce using rule 12 (statement -> PRINT CONCAT statement .)
    STRING          reduce using rule 12 (statement -> PRINT CONCAT statement .)
    TRUE            reduce using rule 12 (statement -> PRINT CONCAT statement .)
    FALSE           reduce using rule 12 (statement -> PRINT CONCAT statement .)
    $end            reduce using rule 12 (statement -> PRINT CONCAT statement .)
    THEN            reduce using rule 12 (statement -> PRINT CONCAT statement .)
    TO              reduce using rule 12 (statement -> PRINT CONCAT statement .)
    RPAREN          reduce using rule 12 (statement -> PRINT CONCAT statement .)
    LACC            reduce using rule 12 (statement -> PRINT CONCAT statement .)
    END             reduce using rule 12 (statement -> PRINT CONCAT statement .)


state 115

    (25) statement -> PRINT LPAREN expression . RPAREN SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI
    (28) print_params -> expression .
    (29) print_params -> expression . COMMA print_params

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 158
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 121
    and             shift and go to state 122
    SUP             shift and go to state 123
    INFF            shift and go to state 124
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44
    CONCAT          shift and go to state 31
    SEMI            shift and go to state 36
    COMMA           shift and go to state 159

  ! RPAREN          [ reduce using rule 10 (statement -> expression .) ]
  ! RPAREN          [ reduce using rule 28 (print_params -> expression .) ]


state 116

    (27) statement -> PRINT LPAREN statement . RPAREN SEMI

    RPAREN          shift and go to state 160


state 117

    (30) statement -> PRINT LPAREN print_params . RPAREN SEMI

    RPAREN          shift and go to state 161


state 118

    (26) statement -> PRINT STRING SEMI .

    NAME            reduce using rule 26 (statement -> PRINT STRING SEMI .)
    WHILE           reduce using rule 26 (statement -> PRINT STRING SEMI .)
    FOR             reduce using rule 26 (statement -> PRINT STRING SEMI .)
    PRINT           reduce using rule 26 (statement -> PRINT STRING SEMI .)
    NUMBER          reduce using rule 26 (statement -> PRINT STRING SEMI .)
    COMMENTS        reduce using rule 26 (statement -> PRINT STRING SEMI .)
    IF              reduce using rule 26 (statement -> PRINT STRING SEMI .)
    RETURN          reduce using rule 26 (statement -> PRINT STRING SEMI .)
    FUNCTION        reduce using rule 26 (statement -> PRINT STRING SEMI .)
    DEFINE          reduce using rule 26 (statement -> PRINT STRING SEMI .)
    MINUS           reduce using rule 26 (statement -> PRINT STRING SEMI .)
    LPAREN          reduce using rule 26 (statement -> PRINT STRING SEMI .)
    STRING          reduce using rule 26 (statement -> PRINT STRING SEMI .)
    TRUE            reduce using rule 26 (statement -> PRINT STRING SEMI .)
    FALSE           reduce using rule 26 (statement -> PRINT STRING SEMI .)
    $end            reduce using rule 26 (statement -> PRINT STRING SEMI .)
    THEN            reduce using rule 26 (statement -> PRINT STRING SEMI .)
    TO              reduce using rule 26 (statement -> PRINT STRING SEMI .)
    RPAREN          reduce using rule 26 (statement -> PRINT STRING SEMI .)
    LACC            reduce using rule 26 (statement -> PRINT STRING SEMI .)
    END             reduce using rule 26 (statement -> PRINT STRING SEMI .)


state 119

    (15) statement -> NUMBER DOTE NEWLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 162


state 120

    (19) statement -> IF expression THEN . statement
    (20) statement -> IF expression THEN . RACC bloc LACC
    (21) statement -> IF expression THEN . RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> IF expression THEN . RACC bloc LACC ELSE RACC bloc LACC
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    RACC            shift and go to state 164
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 163
    params                         shift and go to state 16

state 121

    (64) expression -> expression or . expression
    (36) statement -> expression or . statement
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 56
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 57
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 165
    statement                      shift and go to state 97
    params                         shift and go to state 16

state 122

    (65) expression -> expression and . expression
    (35) statement -> expression and . statement
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 56
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 57
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 166
    statement                      shift and go to state 95
    params                         shift and go to state 16

state 123

    (66) expression -> expression SUP . expression
    (34) statement -> expression SUP . statement
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 56
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 57
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 167
    statement                      shift and go to state 93
    params                         shift and go to state 16

state 124

    (67) expression -> expression INFF . expression
    (33) statement -> expression INFF . statement
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 56
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 57
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17

    expression                     shift and go to state 168
    statement                      shift and go to state 91
    params                         shift and go to state 16

state 125

    (23) statement -> IF statement THEN . RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> IF statement THEN . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    RACC            shift and go to state 170
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 169
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 126

    (4) expression -> NAME DOTE . CAPACITY LPAREN RPAREN
    (44) expression -> NAME DOTE . CAPACITY LPAREN RPAREN SEMI
    (13) statement -> NAME DOTE . INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (16) statement -> NAME DOTE . GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> NAME DOTE . GET LPAREN NAME COMMA STRING RPAREN SEMI
    (43) statement -> NAME DOTE . ALLTXT LPAREN RPAREN SEMI
    (47) statement -> NAME DOTE . FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> NAME DOTE . ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> NAME DOTE . FETCH LPAREN RPAREN SEMI
    (50) statement -> NAME DOTE . HTML LPAREN RPAREN SEMI
    (51) statement -> NAME DOTE . TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> NAME DOTE . SCAN LPAREN RPAREN SEMI

    CAPACITY        shift and go to state 77
    INCLUDE         shift and go to state 67
    GETALL          shift and go to state 68
    GET             shift and go to state 69
    ALLTXT          shift and go to state 70
    FILTER          shift and go to state 71
    ALLTITLES       shift and go to state 72
    FETCH           shift and go to state 73
    HTML            shift and go to state 74
    TABLEID         shift and go to state 75
    SCAN            shift and go to state 76


state 127

    (38) statement -> RETURN expression SEMI .

    NAME            reduce using rule 38 (statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 38 (statement -> RETURN expression SEMI .)
    FOR             reduce using rule 38 (statement -> RETURN expression SEMI .)
    PRINT           reduce using rule 38 (statement -> RETURN expression SEMI .)
    NUMBER          reduce using rule 38 (statement -> RETURN expression SEMI .)
    COMMENTS        reduce using rule 38 (statement -> RETURN expression SEMI .)
    IF              reduce using rule 38 (statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 38 (statement -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 38 (statement -> RETURN expression SEMI .)
    DEFINE          reduce using rule 38 (statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 38 (statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 38 (statement -> RETURN expression SEMI .)
    STRING          reduce using rule 38 (statement -> RETURN expression SEMI .)
    TRUE            reduce using rule 38 (statement -> RETURN expression SEMI .)
    FALSE           reduce using rule 38 (statement -> RETURN expression SEMI .)
    $end            reduce using rule 38 (statement -> RETURN expression SEMI .)
    THEN            reduce using rule 38 (statement -> RETURN expression SEMI .)
    TO              reduce using rule 38 (statement -> RETURN expression SEMI .)
    RPAREN          reduce using rule 38 (statement -> RETURN expression SEMI .)
    LACC            reduce using rule 38 (statement -> RETURN expression SEMI .)
    END             reduce using rule 38 (statement -> RETURN expression SEMI .)


state 128

    (39) statement -> FUNCTION NAME LPAREN . RPAREN START bloc END
    (40) statement -> FUNCTION NAME LPAREN . params RPAREN START bloc END
    (41) statement -> FUNCTION NAME LPAREN . RPAREN FRETURN NAME START bloc END
    (42) statement -> FUNCTION NAME LPAREN . params RPAREN FRETURN NAME START bloc END
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    RPAREN          shift and go to state 171
    NAME            shift and go to state 81

    params                         shift and go to state 172

state 129

    (54) statement -> params EQUALS param_call . SEMI

    SEMI            shift and go to state 173


state 130

    (59) statement -> DEFINE NAME EQUALS . expression SEMI
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 174

state 131

    (53) statement -> NAME EQUALS NAME DOTE . SCAN LPAREN RPAREN SEMI
    (4) expression -> NAME DOTE . CAPACITY LPAREN RPAREN
    (44) expression -> NAME DOTE . CAPACITY LPAREN RPAREN SEMI
    (13) statement -> NAME DOTE . INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (16) statement -> NAME DOTE . GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> NAME DOTE . GET LPAREN NAME COMMA STRING RPAREN SEMI
    (43) statement -> NAME DOTE . ALLTXT LPAREN RPAREN SEMI
    (47) statement -> NAME DOTE . FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> NAME DOTE . ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> NAME DOTE . FETCH LPAREN RPAREN SEMI
    (50) statement -> NAME DOTE . HTML LPAREN RPAREN SEMI
    (51) statement -> NAME DOTE . TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> NAME DOTE . SCAN LPAREN RPAREN SEMI

    SCAN            shift and go to state 175
    CAPACITY        shift and go to state 77
    INCLUDE         shift and go to state 67
    GETALL          shift and go to state 68
    GET             shift and go to state 69
    ALLTXT          shift and go to state 70
    FILTER          shift and go to state 71
    ALLTITLES       shift and go to state 72
    FETCH           shift and go to state 73
    HTML            shift and go to state 74
    TABLEID         shift and go to state 75


state 132

    (5) statement -> NAME EQUALS expression SEMI .
    (37) statement -> expression SEMI .

  ! reduce/reduce conflict for NAME resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for NUMBER resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for IF resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for DEFINE resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for MINUS resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for LPAREN resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for STRING resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for TRUE resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for FALSE resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for THEN resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for TO resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for LACC resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
  ! reduce/reduce conflict for END resolved using rule 5 (statement -> NAME EQUALS expression SEMI .)
    NAME            reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    FOR             reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    IF              reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    STRING          reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    TRUE            reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    FALSE           reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    $end            reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    THEN            reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    TO              reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    LACC            reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)
    END             reduce using rule 5 (statement -> NAME EQUALS expression SEMI .)

  ! NAME            [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! WHILE           [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! FOR             [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! PRINT           [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! NUMBER          [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! COMMENTS        [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! IF              [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! RETURN          [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! FUNCTION        [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! DEFINE          [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! MINUS           [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! LPAREN          [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! STRING          [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! TRUE            [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! FALSE           [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! $end            [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! THEN            [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! TO              [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! RPAREN          [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! LACC            [ reduce using rule 37 (statement -> expression SEMI .) ]
  ! END             [ reduce using rule 37 (statement -> expression SEMI .) ]


state 133

    (14) statement -> NAME EQUALS ARRAY LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 176


state 134

    (13) statement -> NAME DOTE INCLUDE LPAREN . NAME COMMA STRING RPAREN SEMI

    NAME            shift and go to state 177


state 135

    (16) statement -> NAME DOTE GETALL LPAREN . NAME COMMA STRING RPAREN SEMI

    NAME            shift and go to state 178


state 136

    (17) statement -> NAME DOTE GET LPAREN . NAME COMMA STRING RPAREN SEMI

    NAME            shift and go to state 179


state 137

    (43) statement -> NAME DOTE ALLTXT LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 180


state 138

    (47) statement -> NAME DOTE FILTER LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 181


state 139

    (48) statement -> NAME DOTE ALLTITLES LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 182


state 140

    (49) statement -> NAME DOTE FETCH LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 183


state 141

    (50) statement -> NAME DOTE HTML LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 184


state 142

    (51) statement -> NAME DOTE TABLEID LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 185


state 143

    (52) statement -> NAME DOTE SCAN LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 186


state 144

    (4) expression -> NAME DOTE CAPACITY LPAREN . RPAREN
    (44) expression -> NAME DOTE CAPACITY LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 187


state 145

    (55) statement -> NAME LPAREN RPAREN SEMI .

    NAME            reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    FOR             reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    IF              reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    STRING          reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    $end            reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    THEN            reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    TO              reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    LACC            reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)
    END             reduce using rule 55 (statement -> NAME LPAREN RPAREN SEMI .)


state 146

    (56) statement -> NAME LPAREN param_call RPAREN . SEMI

    SEMI            shift and go to state 188


state 147

    (58) param_call -> expression COMMA . param_call
    (57) param_call -> . expression
    (58) param_call -> . expression COMMA param_call
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 80
    param_call                     shift and go to state 189

state 148

    (45) statement -> NAME RACC expression LACC . SEMI

    SEMI            shift and go to state 190


state 149

    (46) statement -> NAME RACC STRING LACC . SEMI

    SEMI            shift and go to state 191


state 150

    (76) statement -> NAME PLUSEQ NUMBER SEMI .

    NAME            reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    WHILE           reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FOR             reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    PRINT           reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    NUMBER          reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    IF              reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RETURN          reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    DEFINE          reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    MINUS           reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LPAREN          reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    STRING          reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TRUE            reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    FALSE           reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    $end            reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    THEN            reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    TO              reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    RPAREN          reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    LACC            reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)
    END             reduce using rule 76 (statement -> NAME PLUSEQ NUMBER SEMI .)


state 151

    (77) statement -> NAME MINEQ NUMBER SEMI .

    NAME            reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    WHILE           reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    FOR             reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    PRINT           reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    NUMBER          reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    COMMENTS        reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    IF              reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    RETURN          reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    FUNCTION        reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    DEFINE          reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    MINUS           reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    LPAREN          reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    STRING          reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    TRUE            reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    FALSE           reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    $end            reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    THEN            reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    TO              reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    RPAREN          reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    LACC            reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)
    END             reduce using rule 77 (statement -> NAME MINEQ NUMBER SEMI .)


state 152

    (8) statement -> WHILE expression RACC bloc . LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 192
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 153

    (64) expression -> expression or expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    RACC            reduce using rule 64 (expression -> expression or expression .)
    or              reduce using rule 64 (expression -> expression or expression .)
    INFF            reduce using rule 64 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 64 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 64 (expression -> expression or expression .)
    ET              reduce using rule 64 (expression -> expression or expression .)
    OU              reduce using rule 64 (expression -> expression or expression .)
    RPAREN          reduce using rule 64 (expression -> expression or expression .)
    SEMI            reduce using rule 64 (expression -> expression or expression .)
    CONCAT          reduce using rule 64 (expression -> expression or expression .)
    NAME            reduce using rule 64 (expression -> expression or expression .)
    WHILE           reduce using rule 64 (expression -> expression or expression .)
    FOR             reduce using rule 64 (expression -> expression or expression .)
    PRINT           reduce using rule 64 (expression -> expression or expression .)
    NUMBER          reduce using rule 64 (expression -> expression or expression .)
    COMMENTS        reduce using rule 64 (expression -> expression or expression .)
    IF              reduce using rule 64 (expression -> expression or expression .)
    RETURN          reduce using rule 64 (expression -> expression or expression .)
    FUNCTION        reduce using rule 64 (expression -> expression or expression .)
    DEFINE          reduce using rule 64 (expression -> expression or expression .)
    LPAREN          reduce using rule 64 (expression -> expression or expression .)
    STRING          reduce using rule 64 (expression -> expression or expression .)
    TRUE            reduce using rule 64 (expression -> expression or expression .)
    FALSE           reduce using rule 64 (expression -> expression or expression .)
    $end            reduce using rule 64 (expression -> expression or expression .)
    THEN            reduce using rule 64 (expression -> expression or expression .)
    TO              reduce using rule 64 (expression -> expression or expression .)
    LACC            reduce using rule 64 (expression -> expression or expression .)
    END             reduce using rule 64 (expression -> expression or expression .)
    COMMA           reduce using rule 64 (expression -> expression or expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    and             shift and go to state 108
    SUP             shift and go to state 109

  ! PLUS            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 107 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 154

    (65) expression -> expression and expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    RACC            reduce using rule 65 (expression -> expression and expression .)
    or              reduce using rule 65 (expression -> expression and expression .)
    and             reduce using rule 65 (expression -> expression and expression .)
    INFF            reduce using rule 65 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 65 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 65 (expression -> expression and expression .)
    ET              reduce using rule 65 (expression -> expression and expression .)
    OU              reduce using rule 65 (expression -> expression and expression .)
    RPAREN          reduce using rule 65 (expression -> expression and expression .)
    SEMI            reduce using rule 65 (expression -> expression and expression .)
    CONCAT          reduce using rule 65 (expression -> expression and expression .)
    NAME            reduce using rule 65 (expression -> expression and expression .)
    WHILE           reduce using rule 65 (expression -> expression and expression .)
    FOR             reduce using rule 65 (expression -> expression and expression .)
    PRINT           reduce using rule 65 (expression -> expression and expression .)
    NUMBER          reduce using rule 65 (expression -> expression and expression .)
    COMMENTS        reduce using rule 65 (expression -> expression and expression .)
    IF              reduce using rule 65 (expression -> expression and expression .)
    RETURN          reduce using rule 65 (expression -> expression and expression .)
    FUNCTION        reduce using rule 65 (expression -> expression and expression .)
    DEFINE          reduce using rule 65 (expression -> expression and expression .)
    LPAREN          reduce using rule 65 (expression -> expression and expression .)
    STRING          reduce using rule 65 (expression -> expression and expression .)
    TRUE            reduce using rule 65 (expression -> expression and expression .)
    FALSE           reduce using rule 65 (expression -> expression and expression .)
    $end            reduce using rule 65 (expression -> expression and expression .)
    THEN            reduce using rule 65 (expression -> expression and expression .)
    TO              reduce using rule 65 (expression -> expression and expression .)
    LACC            reduce using rule 65 (expression -> expression and expression .)
    END             reduce using rule 65 (expression -> expression and expression .)
    COMMA           reduce using rule 65 (expression -> expression and expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    SUP             shift and go to state 109

  ! PLUS            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 65 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 107 ]
  ! and             [ shift and go to state 108 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 155

    (66) expression -> expression SUP expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    RACC            reduce using rule 66 (expression -> expression SUP expression .)
    or              reduce using rule 66 (expression -> expression SUP expression .)
    and             reduce using rule 66 (expression -> expression SUP expression .)
    SUP             reduce using rule 66 (expression -> expression SUP expression .)
    INFF            reduce using rule 66 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 66 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 66 (expression -> expression SUP expression .)
    ET              reduce using rule 66 (expression -> expression SUP expression .)
    OU              reduce using rule 66 (expression -> expression SUP expression .)
    RPAREN          reduce using rule 66 (expression -> expression SUP expression .)
    SEMI            reduce using rule 66 (expression -> expression SUP expression .)
    CONCAT          reduce using rule 66 (expression -> expression SUP expression .)
    NAME            reduce using rule 66 (expression -> expression SUP expression .)
    WHILE           reduce using rule 66 (expression -> expression SUP expression .)
    FOR             reduce using rule 66 (expression -> expression SUP expression .)
    PRINT           reduce using rule 66 (expression -> expression SUP expression .)
    NUMBER          reduce using rule 66 (expression -> expression SUP expression .)
    COMMENTS        reduce using rule 66 (expression -> expression SUP expression .)
    IF              reduce using rule 66 (expression -> expression SUP expression .)
    RETURN          reduce using rule 66 (expression -> expression SUP expression .)
    FUNCTION        reduce using rule 66 (expression -> expression SUP expression .)
    DEFINE          reduce using rule 66 (expression -> expression SUP expression .)
    LPAREN          reduce using rule 66 (expression -> expression SUP expression .)
    STRING          reduce using rule 66 (expression -> expression SUP expression .)
    TRUE            reduce using rule 66 (expression -> expression SUP expression .)
    FALSE           reduce using rule 66 (expression -> expression SUP expression .)
    $end            reduce using rule 66 (expression -> expression SUP expression .)
    THEN            reduce using rule 66 (expression -> expression SUP expression .)
    TO              reduce using rule 66 (expression -> expression SUP expression .)
    LACC            reduce using rule 66 (expression -> expression SUP expression .)
    END             reduce using rule 66 (expression -> expression SUP expression .)
    COMMA           reduce using rule 66 (expression -> expression SUP expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! PLUS            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 107 ]
  ! and             [ shift and go to state 108 ]
  ! SUP             [ shift and go to state 109 ]
  ! INFF            [ shift and go to state 110 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]


state 156

    (67) expression -> expression INFF expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
    RACC            reduce using rule 67 (expression -> expression INFF expression .)
    RPAREN          reduce using rule 67 (expression -> expression INFF expression .)
    SEMI            reduce using rule 67 (expression -> expression INFF expression .)
    CONCAT          reduce using rule 67 (expression -> expression INFF expression .)
    NAME            reduce using rule 67 (expression -> expression INFF expression .)
    WHILE           reduce using rule 67 (expression -> expression INFF expression .)
    FOR             reduce using rule 67 (expression -> expression INFF expression .)
    PRINT           reduce using rule 67 (expression -> expression INFF expression .)
    NUMBER          reduce using rule 67 (expression -> expression INFF expression .)
    COMMENTS        reduce using rule 67 (expression -> expression INFF expression .)
    IF              reduce using rule 67 (expression -> expression INFF expression .)
    RETURN          reduce using rule 67 (expression -> expression INFF expression .)
    FUNCTION        reduce using rule 67 (expression -> expression INFF expression .)
    DEFINE          reduce using rule 67 (expression -> expression INFF expression .)
    LPAREN          reduce using rule 67 (expression -> expression INFF expression .)
    STRING          reduce using rule 67 (expression -> expression INFF expression .)
    TRUE            reduce using rule 67 (expression -> expression INFF expression .)
    FALSE           reduce using rule 67 (expression -> expression INFF expression .)
    $end            reduce using rule 67 (expression -> expression INFF expression .)
    THEN            reduce using rule 67 (expression -> expression INFF expression .)
    TO              reduce using rule 67 (expression -> expression INFF expression .)
    LACC            reduce using rule 67 (expression -> expression INFF expression .)
    END             reduce using rule 67 (expression -> expression INFF expression .)
    COMMA           reduce using rule 67 (expression -> expression INFF expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44

  ! PLUS            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 67 (expression -> expression INFF expression .) ]


state 157

    (9) statement -> FOR LPAREN statement TO . expression COMMA statement RPAREN RACC bloc LACC
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 193

state 158

    (25) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 194


state 159

    (29) print_params -> expression COMMA . print_params
    (28) print_params -> . expression
    (29) print_params -> . expression COMMA print_params
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 195
    print_params                   shift and go to state 196

state 160

    (27) statement -> PRINT LPAREN statement RPAREN . SEMI

    SEMI            shift and go to state 197


state 161

    (30) statement -> PRINT LPAREN print_params RPAREN . SEMI

    SEMI            shift and go to state 198


state 162

    (15) statement -> NUMBER DOTE NEWLINE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 199


state 163

    (19) statement -> IF expression THEN statement .

    NAME            reduce using rule 19 (statement -> IF expression THEN statement .)
    WHILE           reduce using rule 19 (statement -> IF expression THEN statement .)
    FOR             reduce using rule 19 (statement -> IF expression THEN statement .)
    PRINT           reduce using rule 19 (statement -> IF expression THEN statement .)
    NUMBER          reduce using rule 19 (statement -> IF expression THEN statement .)
    COMMENTS        reduce using rule 19 (statement -> IF expression THEN statement .)
    IF              reduce using rule 19 (statement -> IF expression THEN statement .)
    RETURN          reduce using rule 19 (statement -> IF expression THEN statement .)
    FUNCTION        reduce using rule 19 (statement -> IF expression THEN statement .)
    DEFINE          reduce using rule 19 (statement -> IF expression THEN statement .)
    MINUS           reduce using rule 19 (statement -> IF expression THEN statement .)
    LPAREN          reduce using rule 19 (statement -> IF expression THEN statement .)
    STRING          reduce using rule 19 (statement -> IF expression THEN statement .)
    TRUE            reduce using rule 19 (statement -> IF expression THEN statement .)
    FALSE           reduce using rule 19 (statement -> IF expression THEN statement .)
    $end            reduce using rule 19 (statement -> IF expression THEN statement .)
    THEN            reduce using rule 19 (statement -> IF expression THEN statement .)
    TO              reduce using rule 19 (statement -> IF expression THEN statement .)
    RPAREN          reduce using rule 19 (statement -> IF expression THEN statement .)
    LACC            reduce using rule 19 (statement -> IF expression THEN statement .)
    END             reduce using rule 19 (statement -> IF expression THEN statement .)


state 164

    (20) statement -> IF expression THEN RACC . bloc LACC
    (21) statement -> IF expression THEN RACC . bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> IF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 200
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 165

    (64) expression -> expression or expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
    or              reduce using rule 64 (expression -> expression or expression .)
    INFF            reduce using rule 64 (expression -> expression or expression .)
    ISEQUAL         reduce using rule 64 (expression -> expression or expression .)
    NOTEQUAL        reduce using rule 64 (expression -> expression or expression .)
    ET              reduce using rule 64 (expression -> expression or expression .)
    OU              reduce using rule 64 (expression -> expression or expression .)
    CONCAT          reduce using rule 64 (expression -> expression or expression .)
    SEMI            reduce using rule 64 (expression -> expression or expression .)
    COMMA           reduce using rule 64 (expression -> expression or expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    and             shift and go to state 122
    SUP             shift and go to state 123
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)

  ! THEN            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! PLUS            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! and             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! SUP             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! NAME            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! WHILE           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! FOR             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! PRINT           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! NUMBER          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! COMMENTS        [ reduce using rule 64 (expression -> expression or expression .) ]
  ! IF              [ reduce using rule 64 (expression -> expression or expression .) ]
  ! RETURN          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! FUNCTION        [ reduce using rule 64 (expression -> expression or expression .) ]
  ! DEFINE          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! LPAREN          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! STRING          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! TRUE            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! FALSE           [ reduce using rule 64 (expression -> expression or expression .) ]
  ! $end            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! TO              [ reduce using rule 64 (expression -> expression or expression .) ]
  ! RPAREN          [ reduce using rule 64 (expression -> expression or expression .) ]
  ! LACC            [ reduce using rule 64 (expression -> expression or expression .) ]
  ! END             [ reduce using rule 64 (expression -> expression or expression .) ]
  ! or              [ shift and go to state 121 ]
  ! INFF            [ shift and go to state 124 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 31 ]
  ! SEMI            [ shift and go to state 36 ]


state 166

    (65) expression -> expression and expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
    or              reduce using rule 65 (expression -> expression and expression .)
    and             reduce using rule 65 (expression -> expression and expression .)
    INFF            reduce using rule 65 (expression -> expression and expression .)
    ISEQUAL         reduce using rule 65 (expression -> expression and expression .)
    NOTEQUAL        reduce using rule 65 (expression -> expression and expression .)
    ET              reduce using rule 65 (expression -> expression and expression .)
    OU              reduce using rule 65 (expression -> expression and expression .)
    CONCAT          reduce using rule 65 (expression -> expression and expression .)
    SEMI            reduce using rule 65 (expression -> expression and expression .)
    COMMA           reduce using rule 65 (expression -> expression and expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    SUP             shift and go to state 123
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)

  ! THEN            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! PLUS            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! TIMES           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! SUP             [ reduce using rule 65 (expression -> expression and expression .) ]
  ! NAME            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! WHILE           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! FOR             [ reduce using rule 65 (expression -> expression and expression .) ]
  ! PRINT           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! NUMBER          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! COMMENTS        [ reduce using rule 65 (expression -> expression and expression .) ]
  ! IF              [ reduce using rule 65 (expression -> expression and expression .) ]
  ! RETURN          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! FUNCTION        [ reduce using rule 65 (expression -> expression and expression .) ]
  ! DEFINE          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! LPAREN          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! STRING          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! TRUE            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! FALSE           [ reduce using rule 65 (expression -> expression and expression .) ]
  ! $end            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! TO              [ reduce using rule 65 (expression -> expression and expression .) ]
  ! RPAREN          [ reduce using rule 65 (expression -> expression and expression .) ]
  ! LACC            [ reduce using rule 65 (expression -> expression and expression .) ]
  ! END             [ reduce using rule 65 (expression -> expression and expression .) ]
  ! or              [ shift and go to state 121 ]
  ! and             [ shift and go to state 122 ]
  ! INFF            [ shift and go to state 124 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 31 ]
  ! SEMI            [ shift and go to state 36 ]


state 167

    (66) expression -> expression SUP expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI

  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
    or              reduce using rule 66 (expression -> expression SUP expression .)
    and             reduce using rule 66 (expression -> expression SUP expression .)
    INFF            reduce using rule 66 (expression -> expression SUP expression .)
    ISEQUAL         reduce using rule 66 (expression -> expression SUP expression .)
    NOTEQUAL        reduce using rule 66 (expression -> expression SUP expression .)
    ET              reduce using rule 66 (expression -> expression SUP expression .)
    OU              reduce using rule 66 (expression -> expression SUP expression .)
    CONCAT          reduce using rule 66 (expression -> expression SUP expression .)
    SEMI            reduce using rule 66 (expression -> expression SUP expression .)
    COMMA           reduce using rule 66 (expression -> expression SUP expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    SUP             shift and go to state 123

  ! THEN            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! PLUS            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! TIMES           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! SUP             [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! NAME            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! WHILE           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! FOR             [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! PRINT           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! NUMBER          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! COMMENTS        [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! IF              [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! RETURN          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! FUNCTION        [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! DEFINE          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! LPAREN          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! STRING          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! TRUE            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! FALSE           [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! $end            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! TO              [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! RPAREN          [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! LACC            [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! END             [ reduce using rule 66 (expression -> expression SUP expression .) ]
  ! or              [ shift and go to state 121 ]
  ! and             [ shift and go to state 122 ]
  ! INFF            [ shift and go to state 124 ]
  ! ISEQUAL         [ shift and go to state 41 ]
  ! NOTEQUAL        [ shift and go to state 42 ]
  ! ET              [ shift and go to state 43 ]
  ! OU              [ shift and go to state 44 ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]
  ! CONCAT          [ shift and go to state 31 ]
  ! SEMI            [ shift and go to state 36 ]


state 168

    (67) expression -> expression INFF expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression
    (10) statement -> expression .
    (11) statement -> expression . CONCAT statement
    (33) statement -> expression . INFF statement
    (34) statement -> expression . SUP statement
    (35) statement -> expression . and statement
    (36) statement -> expression . or statement
    (37) statement -> expression . SEMI

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for SUP resolved as shift
  ! shift/reduce conflict for INFF resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ET resolved as shift
  ! shift/reduce conflict for OU resolved as shift
  ! reduce/reduce conflict for NAME resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for IF resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for DEFINE resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for THEN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for TO resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for LACC resolved using rule 10 (statement -> expression .)
  ! reduce/reduce conflict for END resolved using rule 10 (statement -> expression .)
  ! shift/reduce conflict for CONCAT resolved as shift
  ! shift/reduce conflict for SEMI resolved as shift
    COMMA           reduce using rule 67 (expression -> expression INFF expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 121
    and             shift and go to state 122
    SUP             shift and go to state 123
    INFF            shift and go to state 124
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44
    NAME            reduce using rule 10 (statement -> expression .)
    WHILE           reduce using rule 10 (statement -> expression .)
    FOR             reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    COMMENTS        reduce using rule 10 (statement -> expression .)
    IF              reduce using rule 10 (statement -> expression .)
    RETURN          reduce using rule 10 (statement -> expression .)
    FUNCTION        reduce using rule 10 (statement -> expression .)
    DEFINE          reduce using rule 10 (statement -> expression .)
    LPAREN          reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    TRUE            reduce using rule 10 (statement -> expression .)
    FALSE           reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    THEN            reduce using rule 10 (statement -> expression .)
    TO              reduce using rule 10 (statement -> expression .)
    RPAREN          reduce using rule 10 (statement -> expression .)
    LACC            reduce using rule 10 (statement -> expression .)
    END             reduce using rule 10 (statement -> expression .)
    CONCAT          shift and go to state 31
    SEMI            shift and go to state 36

  ! THEN            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! PLUS            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! TIMES           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! or              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! and             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! SUP             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! INFF            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! ISEQUAL         [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! NOTEQUAL        [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! ET              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! OU              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! CONCAT          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! SEMI            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! NAME            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! WHILE           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! FOR             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! PRINT           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! NUMBER          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! COMMENTS        [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! IF              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! RETURN          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! FUNCTION        [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! DEFINE          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! LPAREN          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! STRING          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! TRUE            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! FALSE           [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! $end            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! TO              [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! RPAREN          [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! LACC            [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! END             [ reduce using rule 67 (expression -> expression INFF expression .) ]
  ! MINUS           [ reduce using rule 10 (statement -> expression .) ]


state 169

    (24) statement -> IF statement THEN statement .

    NAME            reduce using rule 24 (statement -> IF statement THEN statement .)
    WHILE           reduce using rule 24 (statement -> IF statement THEN statement .)
    FOR             reduce using rule 24 (statement -> IF statement THEN statement .)
    PRINT           reduce using rule 24 (statement -> IF statement THEN statement .)
    NUMBER          reduce using rule 24 (statement -> IF statement THEN statement .)
    COMMENTS        reduce using rule 24 (statement -> IF statement THEN statement .)
    IF              reduce using rule 24 (statement -> IF statement THEN statement .)
    RETURN          reduce using rule 24 (statement -> IF statement THEN statement .)
    FUNCTION        reduce using rule 24 (statement -> IF statement THEN statement .)
    DEFINE          reduce using rule 24 (statement -> IF statement THEN statement .)
    MINUS           reduce using rule 24 (statement -> IF statement THEN statement .)
    LPAREN          reduce using rule 24 (statement -> IF statement THEN statement .)
    STRING          reduce using rule 24 (statement -> IF statement THEN statement .)
    TRUE            reduce using rule 24 (statement -> IF statement THEN statement .)
    FALSE           reduce using rule 24 (statement -> IF statement THEN statement .)
    $end            reduce using rule 24 (statement -> IF statement THEN statement .)
    THEN            reduce using rule 24 (statement -> IF statement THEN statement .)
    TO              reduce using rule 24 (statement -> IF statement THEN statement .)
    RPAREN          reduce using rule 24 (statement -> IF statement THEN statement .)
    LACC            reduce using rule 24 (statement -> IF statement THEN statement .)
    END             reduce using rule 24 (statement -> IF statement THEN statement .)


state 170

    (23) statement -> IF statement THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 3
    bloc                           shift and go to state 201
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 171

    (39) statement -> FUNCTION NAME LPAREN RPAREN . START bloc END
    (41) statement -> FUNCTION NAME LPAREN RPAREN . FRETURN NAME START bloc END

    START           shift and go to state 202
    FRETURN         shift and go to state 203


state 172

    (40) statement -> FUNCTION NAME LPAREN params . RPAREN START bloc END
    (42) statement -> FUNCTION NAME LPAREN params . RPAREN FRETURN NAME START bloc END

    RPAREN          shift and go to state 204


state 173

    (54) statement -> params EQUALS param_call SEMI .

    NAME            reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    WHILE           reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    FOR             reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    PRINT           reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    NUMBER          reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    COMMENTS        reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    IF              reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    RETURN          reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    FUNCTION        reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    DEFINE          reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    MINUS           reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    LPAREN          reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    STRING          reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    TRUE            reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    FALSE           reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    $end            reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    THEN            reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    TO              reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    RPAREN          reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    LACC            reduce using rule 54 (statement -> params EQUALS param_call SEMI .)
    END             reduce using rule 54 (statement -> params EQUALS param_call SEMI .)


state 174

    (59) statement -> DEFINE NAME EQUALS expression . SEMI
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    SEMI            shift and go to state 205
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 175

    (53) statement -> NAME EQUALS NAME DOTE SCAN . LPAREN RPAREN SEMI
    (52) statement -> NAME DOTE SCAN . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 206


state 176

    (14) statement -> NAME EQUALS ARRAY LPAREN RPAREN . SEMI

    SEMI            shift and go to state 207


state 177

    (13) statement -> NAME DOTE INCLUDE LPAREN NAME . COMMA STRING RPAREN SEMI

    COMMA           shift and go to state 208


state 178

    (16) statement -> NAME DOTE GETALL LPAREN NAME . COMMA STRING RPAREN SEMI

    COMMA           shift and go to state 209


state 179

    (17) statement -> NAME DOTE GET LPAREN NAME . COMMA STRING RPAREN SEMI

    COMMA           shift and go to state 210


state 180

    (43) statement -> NAME DOTE ALLTXT LPAREN RPAREN . SEMI

    SEMI            shift and go to state 211


state 181

    (47) statement -> NAME DOTE FILTER LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 212


state 182

    (48) statement -> NAME DOTE ALLTITLES LPAREN RPAREN . SEMI

    SEMI            shift and go to state 213


state 183

    (49) statement -> NAME DOTE FETCH LPAREN RPAREN . SEMI

    SEMI            shift and go to state 214


state 184

    (50) statement -> NAME DOTE HTML LPAREN RPAREN . SEMI

    SEMI            shift and go to state 215


state 185

    (51) statement -> NAME DOTE TABLEID LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 216


state 186

    (52) statement -> NAME DOTE SCAN LPAREN RPAREN . SEMI

    SEMI            shift and go to state 217


state 187

    (4) expression -> NAME DOTE CAPACITY LPAREN RPAREN .
    (44) expression -> NAME DOTE CAPACITY LPAREN RPAREN . SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    CONCAT          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    INFF            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    SUP             reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    and             reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    or              reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    PLUS            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    MINUS           reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    TIMES           reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    ISEQUAL         reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    ET              reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    OU              reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    NAME            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    WHILE           reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    FOR             reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    PRINT           reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    NUMBER          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    COMMENTS        reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    IF              reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    RETURN          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    FUNCTION        reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    DEFINE          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    LPAREN          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    STRING          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    TRUE            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    FALSE           reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    $end            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    RACC            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    RPAREN          reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    THEN            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    TO              reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    LACC            reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    END             reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    COMMA           reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .)
    SEMI            shift and go to state 218

  ! SEMI            [ reduce using rule 4 (expression -> NAME DOTE CAPACITY LPAREN RPAREN .) ]


state 188

    (56) statement -> NAME LPAREN param_call RPAREN SEMI .

    NAME            reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    WHILE           reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FOR             reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    PRINT           reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    NUMBER          reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    COMMENTS        reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    IF              reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RETURN          reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FUNCTION        reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    DEFINE          reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    MINUS           reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LPAREN          reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    STRING          reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TRUE            reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    FALSE           reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    $end            reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    THEN            reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    TO              reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    RPAREN          reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    LACC            reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)
    END             reduce using rule 56 (statement -> NAME LPAREN param_call RPAREN SEMI .)


state 189

    (58) param_call -> expression COMMA param_call .

    RPAREN          reduce using rule 58 (param_call -> expression COMMA param_call .)
    SEMI            reduce using rule 58 (param_call -> expression COMMA param_call .)


state 190

    (45) statement -> NAME RACC expression LACC SEMI .

    NAME            reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    WHILE           reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    FOR             reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    PRINT           reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    NUMBER          reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    COMMENTS        reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    IF              reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    RETURN          reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    FUNCTION        reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    DEFINE          reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    MINUS           reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    LPAREN          reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    STRING          reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    TRUE            reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    FALSE           reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    $end            reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    THEN            reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    TO              reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    RPAREN          reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    LACC            reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)
    END             reduce using rule 45 (statement -> NAME RACC expression LACC SEMI .)


state 191

    (46) statement -> NAME RACC STRING LACC SEMI .

    NAME            reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    WHILE           reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    FOR             reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    PRINT           reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    NUMBER          reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    COMMENTS        reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    IF              reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    RETURN          reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    FUNCTION        reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    DEFINE          reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    MINUS           reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    LPAREN          reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    STRING          reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    TRUE            reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    FALSE           reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    $end            reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    THEN            reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    TO              reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    RPAREN          reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    LACC            reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)
    END             reduce using rule 46 (statement -> NAME RACC STRING LACC SEMI .)


state 192

    (8) statement -> WHILE expression RACC bloc LACC .

    NAME            reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    WHILE           reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    FOR             reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    PRINT           reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    NUMBER          reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    COMMENTS        reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    IF              reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    RETURN          reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    FUNCTION        reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    DEFINE          reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    MINUS           reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    LPAREN          reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    STRING          reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    TRUE            reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    FALSE           reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    $end            reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    THEN            reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    TO              reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    RPAREN          reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    LACC            reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)
    END             reduce using rule 8 (statement -> WHILE expression RACC bloc LACC .)


state 193

    (9) statement -> FOR LPAREN statement TO expression . COMMA statement RPAREN RACC bloc LACC
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    COMMA           shift and go to state 219
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 194

    (25) statement -> PRINT LPAREN expression RPAREN SEMI .

    NAME            reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    COMMENTS        reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FUNCTION        reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    DEFINE          reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TRUE            reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FALSE           reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    THEN            reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    TO              reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RPAREN          reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LACC            reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    END             reduce using rule 25 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 195

    (28) print_params -> expression .
    (29) print_params -> expression . COMMA print_params
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    RPAREN          reduce using rule 28 (print_params -> expression .)
    COMMA           shift and go to state 159
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 196

    (29) print_params -> expression COMMA print_params .

    RPAREN          reduce using rule 29 (print_params -> expression COMMA print_params .)


state 197

    (27) statement -> PRINT LPAREN statement RPAREN SEMI .

    NAME            reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    WHILE           reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    FOR             reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    PRINT           reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    NUMBER          reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    COMMENTS        reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    IF              reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    RETURN          reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    FUNCTION        reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    DEFINE          reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    MINUS           reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    LPAREN          reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    STRING          reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    TRUE            reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    FALSE           reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    $end            reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    THEN            reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    TO              reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    RPAREN          reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    LACC            reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    END             reduce using rule 27 (statement -> PRINT LPAREN statement RPAREN SEMI .)


state 198

    (30) statement -> PRINT LPAREN print_params RPAREN SEMI .

    NAME            reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    WHILE           reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FOR             reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    PRINT           reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    NUMBER          reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    COMMENTS        reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    IF              reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    RETURN          reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FUNCTION        reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    DEFINE          reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    MINUS           reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    LPAREN          reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    STRING          reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    TRUE            reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    FALSE           reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    $end            reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    THEN            reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    TO              reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    RPAREN          reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    LACC            reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)
    END             reduce using rule 30 (statement -> PRINT LPAREN print_params RPAREN SEMI .)


state 199

    (15) statement -> NUMBER DOTE NEWLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 220


state 200

    (20) statement -> IF expression THEN RACC bloc . LACC
    (21) statement -> IF expression THEN RACC bloc . LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> IF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 221
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 201

    (23) statement -> IF statement THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 222
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 202

    (39) statement -> FUNCTION NAME LPAREN RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    bloc                           shift and go to state 223
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 203

    (41) statement -> FUNCTION NAME LPAREN RPAREN FRETURN . NAME START bloc END

    NAME            shift and go to state 224


state 204

    (40) statement -> FUNCTION NAME LPAREN params RPAREN . START bloc END
    (42) statement -> FUNCTION NAME LPAREN params RPAREN . FRETURN NAME START bloc END

    START           shift and go to state 225
    FRETURN         shift and go to state 226


state 205

    (59) statement -> DEFINE NAME EQUALS expression SEMI .

    NAME            reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    WHILE           reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FOR             reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    PRINT           reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    COMMENTS        reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    IF              reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RETURN          reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FUNCTION        reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    DEFINE          reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    MINUS           reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    STRING          reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    TRUE            reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    FALSE           reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    $end            reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    THEN            reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    TO              reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    LACC            reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)
    END             reduce using rule 59 (statement -> DEFINE NAME EQUALS expression SEMI .)


state 206

    (53) statement -> NAME EQUALS NAME DOTE SCAN LPAREN . RPAREN SEMI
    (52) statement -> NAME DOTE SCAN LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 227


state 207

    (14) statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .

    NAME            reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    FOR             reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    IF              reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    STRING          reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    $end            reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    THEN            reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    TO              reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    LACC            reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)
    END             reduce using rule 14 (statement -> NAME EQUALS ARRAY LPAREN RPAREN SEMI .)


state 208

    (13) statement -> NAME DOTE INCLUDE LPAREN NAME COMMA . STRING RPAREN SEMI

    STRING          shift and go to state 228


state 209

    (16) statement -> NAME DOTE GETALL LPAREN NAME COMMA . STRING RPAREN SEMI

    STRING          shift and go to state 229


state 210

    (17) statement -> NAME DOTE GET LPAREN NAME COMMA . STRING RPAREN SEMI

    STRING          shift and go to state 230


state 211

    (43) statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .

    NAME            reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    FOR             reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    IF              reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    STRING          reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    $end            reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    THEN            reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    TO              reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    LACC            reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)
    END             reduce using rule 43 (statement -> NAME DOTE ALLTXT LPAREN RPAREN SEMI .)


state 212

    (47) statement -> NAME DOTE FILTER LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 231


state 213

    (48) statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .

    NAME            reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    FOR             reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    IF              reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    STRING          reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    $end            reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    THEN            reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    TO              reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    LACC            reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)
    END             reduce using rule 48 (statement -> NAME DOTE ALLTITLES LPAREN RPAREN SEMI .)


state 214

    (49) statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .

    NAME            reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    FOR             reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    IF              reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    STRING          reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    $end            reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    THEN            reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    TO              reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    LACC            reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)
    END             reduce using rule 49 (statement -> NAME DOTE FETCH LPAREN RPAREN SEMI .)


state 215

    (50) statement -> NAME DOTE HTML LPAREN RPAREN SEMI .

    NAME            reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    FOR             reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    IF              reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    STRING          reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    $end            reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    THEN            reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    TO              reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    LACC            reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)
    END             reduce using rule 50 (statement -> NAME DOTE HTML LPAREN RPAREN SEMI .)


state 216

    (51) statement -> NAME DOTE TABLEID LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 232


state 217

    (52) statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .

    NAME            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FOR             reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    IF              reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    STRING          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    $end            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    THEN            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TO              reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LACC            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    END             reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)


state 218

    (44) expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .

    CONCAT          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    INFF            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    SUP             reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    and             reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    or              reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    PLUS            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    TIMES           reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    DIVIDE          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    ISEQUAL         reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    NOTEQUAL        reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    ET              reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    OU              reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    NAME            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    FOR             reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    IF              reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    STRING          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    $end            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    RACC            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    THEN            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    TO              reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    LACC            reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    END             reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 44 (expression -> NAME DOTE CAPACITY LPAREN RPAREN SEMI .)


state 219

    (9) statement -> FOR LPAREN statement TO expression COMMA . statement RPAREN RACC bloc LACC
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 233
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 220

    (15) statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .

    NAME            reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    FOR             reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    IF              reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    STRING          reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    $end            reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    THEN            reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    TO              reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    LACC            reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)
    END             reduce using rule 15 (statement -> NUMBER DOTE NEWLINE LPAREN RPAREN SEMI .)


state 221

    (20) statement -> IF expression THEN RACC bloc LACC .
    (21) statement -> IF expression THEN RACC bloc LACC . ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> IF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    NAME            reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    WHILE           reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    FOR             reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    PRINT           reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    NUMBER          reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    COMMENTS        reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    IF              reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    RETURN          reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    FUNCTION        reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    DEFINE          reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    MINUS           reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    LPAREN          reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    STRING          reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    TRUE            reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    FALSE           reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    $end            reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    THEN            reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    TO              reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    RPAREN          reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    LACC            reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    END             reduce using rule 20 (statement -> IF expression THEN RACC bloc LACC .)
    ELSEIF          shift and go to state 234
    ELSE            shift and go to state 235


state 222

    (23) statement -> IF statement THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 236


state 223

    (39) statement -> FUNCTION NAME LPAREN RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    END             shift and go to state 237
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 224

    (41) statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME . START bloc END

    START           shift and go to state 238


state 225

    (40) statement -> FUNCTION NAME LPAREN params RPAREN START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    params                         shift and go to state 16
    bloc                           shift and go to state 239
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 226

    (42) statement -> FUNCTION NAME LPAREN params RPAREN FRETURN . NAME START bloc END

    NAME            shift and go to state 240


state 227

    (53) statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN . SEMI
    (52) statement -> NAME DOTE SCAN LPAREN RPAREN . SEMI

    SEMI            shift and go to state 241


state 228

    (13) statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING . RPAREN SEMI

    RPAREN          shift and go to state 242


state 229

    (16) statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING . RPAREN SEMI

    RPAREN          shift and go to state 243


state 230

    (17) statement -> NAME DOTE GET LPAREN NAME COMMA STRING . RPAREN SEMI

    RPAREN          shift and go to state 244


state 231

    (47) statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .

    NAME            reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    PRINT           reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    NUMBER          reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    COMMENTS        reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    RETURN          reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    DEFINE          reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    MINUS           reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    LPAREN          reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    STRING          reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    TRUE            reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    FALSE           reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    $end            reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    THEN            reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    TO              reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    RPAREN          reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    LACC            reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)
    END             reduce using rule 47 (statement -> NAME DOTE FILTER LPAREN STRING RPAREN SEMI .)


state 232

    (51) statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .

    NAME            reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    PRINT           reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    NUMBER          reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    COMMENTS        reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    RETURN          reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    DEFINE          reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    MINUS           reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    LPAREN          reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    STRING          reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    TRUE            reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    FALSE           reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    $end            reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    THEN            reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    TO              reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    RPAREN          reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    LACC            reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)
    END             reduce using rule 51 (statement -> NAME DOTE TABLEID LPAREN STRING RPAREN SEMI .)


state 233

    (9) statement -> FOR LPAREN statement TO expression COMMA statement . RPAREN RACC bloc LACC

    RPAREN          shift and go to state 245


state 234

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF . expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE

    NAME            shift and go to state 46
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    NUMBER          shift and go to state 47
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 246

state 235

    (22) statement -> IF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 247


state 236

    (23) statement -> IF statement THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 248


state 237

    (39) statement -> FUNCTION NAME LPAREN RPAREN START bloc END .

    NAME            reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    WHILE           reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FOR             reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    PRINT           reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    NUMBER          reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    COMMENTS        reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    IF              reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RETURN          reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FUNCTION        reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    DEFINE          reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    MINUS           reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LPAREN          reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    STRING          reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TRUE            reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    FALSE           reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    $end            reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    THEN            reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    TO              reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    RPAREN          reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    LACC            reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)
    END             reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN START bloc END .)


state 238

    (41) statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    bloc                           shift and go to state 249
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 239

    (40) statement -> FUNCTION NAME LPAREN params RPAREN START bloc . END
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    END             shift and go to state 250
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    params                         shift and go to state 16
    statement                      shift and go to state 21
    expression                     shift and go to state 5

state 240

    (42) statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME . START bloc END

    START           shift and go to state 251


state 241

    (53) statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .
    (52) statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .

  ! reduce/reduce conflict for NAME resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for FOR resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for PRINT resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for NUMBER resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for COMMENTS resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for IF resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for RETURN resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for DEFINE resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for MINUS resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for LPAREN resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for STRING resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for TRUE resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for FALSE resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for $end resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for THEN resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for TO resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for RPAREN resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for LACC resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
  ! reduce/reduce conflict for END resolved using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    NAME            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    WHILE           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FOR             reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    PRINT           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    NUMBER          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    COMMENTS        reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    IF              reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RETURN          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FUNCTION        reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    DEFINE          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    MINUS           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    STRING          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TRUE            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    FALSE           reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    $end            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    THEN            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    TO              reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    LACC            reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)
    END             reduce using rule 52 (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI .)

  ! NAME            [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! WHILE           [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! FOR             [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! PRINT           [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! NUMBER          [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! COMMENTS        [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! IF              [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! RETURN          [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! FUNCTION        [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! DEFINE          [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! MINUS           [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! LPAREN          [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! STRING          [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! TRUE            [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! FALSE           [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! $end            [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! THEN            [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! TO              [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! RPAREN          [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! LACC            [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]
  ! END             [ reduce using rule 53 (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI .) ]


state 242

    (13) statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN . SEMI

    SEMI            shift and go to state 252


state 243

    (16) statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN . SEMI

    SEMI            shift and go to state 253


state 244

    (17) statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN . SEMI

    SEMI            shift and go to state 254


state 245

    (9) statement -> FOR LPAREN statement TO expression COMMA statement RPAREN . RACC bloc LACC

    RACC            shift and go to state 255


state 246

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression . THEN RACC bloc LACC ELSE RACC bloc LACC
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . or expression
    (65) expression -> expression . and expression
    (66) expression -> expression . SUP expression
    (67) expression -> expression . INFF expression
    (68) expression -> expression . ISEQUAL expression
    (69) expression -> expression . NOTEQUAL expression
    (70) expression -> expression . ET expression
    (71) expression -> expression . OU expression

    THEN            shift and go to state 256
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    or              shift and go to state 107
    and             shift and go to state 108
    SUP             shift and go to state 109
    INFF            shift and go to state 110
    ISEQUAL         shift and go to state 41
    NOTEQUAL        shift and go to state 42
    ET              shift and go to state 43
    OU              shift and go to state 44


state 247

    (22) statement -> IF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 257
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 248

    (23) statement -> IF statement THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 3
    bloc                           shift and go to state 258
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 249

    (41) statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc . END
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    END             shift and go to state 259
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 250

    (40) statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .

    NAME            reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    WHILE           reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FOR             reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    PRINT           reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    NUMBER          reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    COMMENTS        reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    IF              reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RETURN          reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FUNCTION        reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    DEFINE          reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    MINUS           reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LPAREN          reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    STRING          reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TRUE            reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    FALSE           reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    $end            reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    THEN            reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    TO              reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    RPAREN          reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    LACC            reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)
    END             reduce using rule 40 (statement -> FUNCTION NAME LPAREN params RPAREN START bloc END .)


state 251

    (42) statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START . bloc END
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    params                         shift and go to state 16
    bloc                           shift and go to state 260
    statement                      shift and go to state 3
    expression                     shift and go to state 5

state 252

    (13) statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .

    NAME            reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    WHILE           reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    FOR             reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    PRINT           reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    NUMBER          reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    COMMENTS        reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    IF              reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    RETURN          reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    DEFINE          reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    MINUS           reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    LPAREN          reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    STRING          reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    TRUE            reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    FALSE           reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    $end            reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    THEN            reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    TO              reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    RPAREN          reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    LACC            reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)
    END             reduce using rule 13 (statement -> NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI .)


state 253

    (16) statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .

    NAME            reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    WHILE           reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    FOR             reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    PRINT           reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    NUMBER          reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    COMMENTS        reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    IF              reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    RETURN          reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    DEFINE          reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    MINUS           reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    LPAREN          reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    STRING          reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    TRUE            reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    FALSE           reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    $end            reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    THEN            reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    TO              reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    RPAREN          reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    LACC            reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)
    END             reduce using rule 16 (statement -> NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI .)


state 254

    (17) statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .

    NAME            reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    WHILE           reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    FOR             reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    PRINT           reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    NUMBER          reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    COMMENTS        reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    IF              reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    RETURN          reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    DEFINE          reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    MINUS           reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    LPAREN          reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    STRING          reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    TRUE            reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    FALSE           reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    $end            reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    THEN            reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    TO              reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    RPAREN          reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    LACC            reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)
    END             reduce using rule 17 (statement -> NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI .)


state 255

    (9) statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 3
    expression                     shift and go to state 5
    bloc                           shift and go to state 261
    params                         shift and go to state 16

state 256

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN . RACC bloc LACC ELSE RACC bloc LACC

    RACC            shift and go to state 262


state 257

    (22) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 263
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 258

    (23) statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 264
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 259

    (41) statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .

    NAME            reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    WHILE           reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    FOR             reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    PRINT           reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    NUMBER          reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    COMMENTS        reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    IF              reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    RETURN          reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    FUNCTION        reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    DEFINE          reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    MINUS           reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    LPAREN          reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    STRING          reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    TRUE            reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    FALSE           reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    $end            reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    THEN            reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    TO              reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    RPAREN          reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    LACC            reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)
    END             reduce using rule 41 (statement -> FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END .)


state 260

    (42) statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc . END
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    END             shift and go to state 265
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    params                         shift and go to state 16
    statement                      shift and go to state 21
    expression                     shift and go to state 5

state 261

    (9) statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc . LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 266
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    statement                      shift and go to state 21
    expression                     shift and go to state 5
    params                         shift and go to state 16

state 262

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC . bloc LACC ELSE RACC bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 267
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 263

    (22) statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TRUE            reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FALSE           reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    THEN            reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 22 (statement -> IF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 264

    (23) statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TRUE            reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FALSE           reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    THEN            reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 23 (statement -> IF statement THEN RACC bloc LACC ELSE RACC bloc LACC .)


state 265

    (42) statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .

    NAME            reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    WHILE           reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    FOR             reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    PRINT           reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    NUMBER          reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    COMMENTS        reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    IF              reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    RETURN          reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    FUNCTION        reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    DEFINE          reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    MINUS           reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    LPAREN          reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    STRING          reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    TRUE            reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    FALSE           reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    $end            reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    THEN            reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    TO              reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    RPAREN          reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    LACC            reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)
    END             reduce using rule 42 (statement -> FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END .)


state 266

    (9) statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .

    NAME            reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    PRINT           reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    NUMBER          reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    COMMENTS        reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    IF              reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    RETURN          reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    FUNCTION        reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    DEFINE          reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    MINUS           reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    LPAREN          reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    STRING          reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    TRUE            reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    FALSE           reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    $end            reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    THEN            reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    TO              reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    RPAREN          reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    LACC            reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)
    END             reduce using rule 9 (statement -> FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC .)


state 267

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc . LACC ELSE RACC bloc LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 268
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 268

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC . ELSE RACC bloc LACC

    ELSE            shift and go to state 269


state 269

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE . RACC bloc LACC

    RACC            shift and go to state 270


state 270

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC . bloc LACC
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    bloc                           shift and go to state 271
    statement                      shift and go to state 3
    params                         shift and go to state 16

state 271

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc . LACC
    (2) bloc -> bloc . statement
    (5) statement -> . NAME EQUALS expression SEMI
    (6) statement -> . NAME EQUALS expression
    (7) statement -> . NAME EQUALS statement
    (8) statement -> . WHILE expression RACC bloc LACC
    (9) statement -> . FOR LPAREN statement TO expression COMMA statement RPAREN RACC bloc LACC
    (10) statement -> . expression
    (11) statement -> . expression CONCAT statement
    (12) statement -> . PRINT CONCAT statement
    (13) statement -> . NAME DOTE INCLUDE LPAREN NAME COMMA STRING RPAREN SEMI
    (14) statement -> . NAME EQUALS ARRAY LPAREN RPAREN SEMI
    (15) statement -> . NUMBER DOTE NEWLINE LPAREN RPAREN SEMI
    (16) statement -> . NAME DOTE GETALL LPAREN NAME COMMA STRING RPAREN SEMI
    (17) statement -> . NAME DOTE GET LPAREN NAME COMMA STRING RPAREN SEMI
    (18) statement -> . COMMENTS
    (19) statement -> . IF expression THEN statement
    (20) statement -> . IF expression THEN RACC bloc LACC
    (21) statement -> . IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (22) statement -> . IF expression THEN RACC bloc LACC ELSE RACC bloc LACC
    (23) statement -> . IF statement THEN RACC bloc LACC ELSE RACC bloc LACC
    (24) statement -> . IF statement THEN statement
    (25) statement -> . PRINT LPAREN expression RPAREN SEMI
    (26) statement -> . PRINT STRING SEMI
    (27) statement -> . PRINT LPAREN statement RPAREN SEMI
    (30) statement -> . PRINT LPAREN print_params RPAREN SEMI
    (33) statement -> . expression INFF statement
    (34) statement -> . expression SUP statement
    (35) statement -> . expression and statement
    (36) statement -> . expression or statement
    (37) statement -> . expression SEMI
    (38) statement -> . RETURN expression SEMI
    (39) statement -> . FUNCTION NAME LPAREN RPAREN START bloc END
    (40) statement -> . FUNCTION NAME LPAREN params RPAREN START bloc END
    (41) statement -> . FUNCTION NAME LPAREN RPAREN FRETURN NAME START bloc END
    (42) statement -> . FUNCTION NAME LPAREN params RPAREN FRETURN NAME START bloc END
    (43) statement -> . NAME DOTE ALLTXT LPAREN RPAREN SEMI
    (45) statement -> . NAME RACC expression LACC SEMI
    (46) statement -> . NAME RACC STRING LACC SEMI
    (47) statement -> . NAME DOTE FILTER LPAREN STRING RPAREN SEMI
    (48) statement -> . NAME DOTE ALLTITLES LPAREN RPAREN SEMI
    (49) statement -> . NAME DOTE FETCH LPAREN RPAREN SEMI
    (50) statement -> . NAME DOTE HTML LPAREN RPAREN SEMI
    (51) statement -> . NAME DOTE TABLEID LPAREN STRING RPAREN SEMI
    (52) statement -> . NAME DOTE SCAN LPAREN RPAREN SEMI
    (53) statement -> . NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI
    (54) statement -> . params EQUALS param_call SEMI
    (55) statement -> . NAME LPAREN RPAREN SEMI
    (56) statement -> . NAME LPAREN param_call RPAREN SEMI
    (59) statement -> . DEFINE NAME EQUALS expression SEMI
    (72) statement -> . NAME INCR SEMI
    (73) statement -> . NAME DECR SEMI
    (74) statement -> . NAME INCR
    (75) statement -> . NAME DECR
    (76) statement -> . NAME PLUSEQ NUMBER SEMI
    (77) statement -> . NAME MINEQ NUMBER SEMI
    (78) statement -> . NAME PLUSEQ NUMBER
    (79) statement -> . NAME MINEQ NUMBER
    (4) expression -> . NAME DOTE CAPACITY LPAREN RPAREN
    (44) expression -> . NAME DOTE CAPACITY LPAREN RPAREN SEMI
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression or expression
    (65) expression -> . expression and expression
    (66) expression -> . expression SUP expression
    (67) expression -> . expression INFF expression
    (68) expression -> . expression ISEQUAL expression
    (69) expression -> . expression NOTEQUAL expression
    (70) expression -> . expression ET expression
    (71) expression -> . expression OU expression
    (80) expression -> . MINUS expression
    (81) expression -> . LPAREN expression RPAREN
    (82) expression -> . NUMBER
    (83) expression -> . STRING
    (84) expression -> . NAME
    (85) expression -> . TRUE
    (86) expression -> . FALSE
    (31) params -> . NAME
    (32) params -> . NAME COMMA params

    LACC            shift and go to state 272
    NAME            shift and go to state 4
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    PRINT           shift and go to state 9
    NUMBER          shift and go to state 11
    COMMENTS        shift and go to state 12
    IF              shift and go to state 13
    RETURN          shift and go to state 14
    FUNCTION        shift and go to state 15
    DEFINE          shift and go to state 17
    MINUS           shift and go to state 18
    LPAREN          shift and go to state 8
    STRING          shift and go to state 10
    TRUE            shift and go to state 19
    FALSE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 21
    params                         shift and go to state 16

state 272

    (21) statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .

    NAME            reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    WHILE           reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FOR             reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    PRINT           reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    NUMBER          reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    COMMENTS        reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    IF              reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RETURN          reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FUNCTION        reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    DEFINE          reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    MINUS           reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LPAREN          reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    STRING          reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TRUE            reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    FALSE           reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    $end            reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    THEN            reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    TO              reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    RPAREN          reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    LACC            reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)
    END             reduce using rule 21 (statement -> IF expression THEN RACC bloc LACC ELSEIF expression THEN RACC bloc LACC ELSE RACC bloc LACC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for THEN in state 54 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 56 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 56 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 56 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 63 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for LACC in state 84 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 90 resolved as shift
WARNING: shift/reduce conflict for INFF in state 90 resolved as shift
WARNING: shift/reduce conflict for SUP in state 90 resolved as shift
WARNING: shift/reduce conflict for and in state 90 resolved as shift
WARNING: shift/reduce conflict for or in state 90 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for ET in state 90 resolved as shift
WARNING: shift/reduce conflict for OU in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for or in state 102 resolved as shift
WARNING: shift/reduce conflict for and in state 102 resolved as shift
WARNING: shift/reduce conflict for SUP in state 102 resolved as shift
WARNING: shift/reduce conflict for INFF in state 102 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for ET in state 102 resolved as shift
WARNING: shift/reduce conflict for OU in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for or in state 103 resolved as shift
WARNING: shift/reduce conflict for and in state 103 resolved as shift
WARNING: shift/reduce conflict for SUP in state 103 resolved as shift
WARNING: shift/reduce conflict for INFF in state 103 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for ET in state 103 resolved as shift
WARNING: shift/reduce conflict for OU in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for or in state 104 resolved as shift
WARNING: shift/reduce conflict for and in state 104 resolved as shift
WARNING: shift/reduce conflict for SUP in state 104 resolved as shift
WARNING: shift/reduce conflict for INFF in state 104 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for ET in state 104 resolved as shift
WARNING: shift/reduce conflict for OU in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for or in state 105 resolved as shift
WARNING: shift/reduce conflict for and in state 105 resolved as shift
WARNING: shift/reduce conflict for SUP in state 105 resolved as shift
WARNING: shift/reduce conflict for INFF in state 105 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for ET in state 105 resolved as shift
WARNING: shift/reduce conflict for OU in state 105 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 115 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 156 resolved as shift
WARNING: shift/reduce conflict for or in state 156 resolved as shift
WARNING: shift/reduce conflict for and in state 156 resolved as shift
WARNING: shift/reduce conflict for SUP in state 156 resolved as shift
WARNING: shift/reduce conflict for INFF in state 156 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for ET in state 156 resolved as shift
WARNING: shift/reduce conflict for OU in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 168 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 168 resolved as shift
WARNING: shift/reduce conflict for or in state 168 resolved as shift
WARNING: shift/reduce conflict for and in state 168 resolved as shift
WARNING: shift/reduce conflict for SUP in state 168 resolved as shift
WARNING: shift/reduce conflict for INFF in state 168 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for ET in state 168 resolved as shift
WARNING: shift/reduce conflict for OU in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 168 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 168 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 187 resolved as shift
WARNING: reduce/reduce conflict in state 64 resolved using rule (statement -> NAME EQUALS expression)
WARNING: rejected rule (statement -> expression) in state 64
WARNING: reduce/reduce conflict in state 90 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression INFF expression) in state 90
WARNING: reduce/reduce conflict in state 92 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression SUP expression) in state 92
WARNING: reduce/reduce conflict in state 94 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression and expression) in state 94
WARNING: reduce/reduce conflict in state 96 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression or expression) in state 96
WARNING: reduce/reduce conflict in state 132 resolved using rule (statement -> NAME EQUALS expression SEMI)
WARNING: rejected rule (statement -> expression SEMI) in state 132
WARNING: reduce/reduce conflict in state 165 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression or expression) in state 165
WARNING: reduce/reduce conflict in state 166 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression and expression) in state 166
WARNING: reduce/reduce conflict in state 167 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression SUP expression) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (statement -> expression)
WARNING: rejected rule (expression -> expression INFF expression) in state 168
WARNING: reduce/reduce conflict in state 241 resolved using rule (statement -> NAME DOTE SCAN LPAREN RPAREN SEMI)
WARNING: rejected rule (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI) in state 241
WARNING: Rule (statement -> NAME EQUALS NAME DOTE SCAN LPAREN RPAREN SEMI) is never reduced
